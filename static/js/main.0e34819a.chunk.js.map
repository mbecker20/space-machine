{"version":3,"sources":["icons/trash.svg","icons/settings.svg","theme/zIndex.ts","App/style.ts","audioModules/moduleTypes.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","redux/root/rootActions.ts","redux/root/rootActionTypes.ts","audioCtx.ts","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/modules/mediaElement.ts","audioModules/modules/distortion.ts","audioModules/modules/analyzer.ts","audioModules/modules/envelopedTrigger.ts","audioModules/modules/whiteNoise.ts","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","App/configureSpaceDB.ts","App/setUserAgent.ts","components/ContextMenus/ContextMenu/helpers.ts","theme/theme.ts","components/ContextMenus/ContextMenu/style.ts","components/ContextMenus/ContextMenu/ContextMenu.tsx","audioModules/connection.ts","components/Button/style.ts","components/Button/Button.tsx","components/SVG/TrashSVG.tsx","components/ContextMenus/style.ts","components/ContextMenus/DeleteButton.tsx","components/ContextMenus/Module/ModuleDeleteButton.tsx","components/ContextMenus/Module/style.ts","components/ContextMenus/Module/InputOutputView.tsx","components/ContextMenus/Module/ContainerOpenButton.tsx","components/ContextMenus/Module/ContainerSaveButton.tsx","components/Flex/style.ts","components/Flex/FlexRow.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/Flex/FlexCol.tsx","components/ContextMenus/Module/MarkContainerControls.tsx","components/ContextMenus/Module/MarkContainerIO.tsx","components/ContextMenus/Module/ModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Modules/ModuleDeleteButton.tsx","components/ContextMenus/SpaceDB/Modules/SDBModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Projects/ProjectDeleteButton.tsx","components/ContextMenus/SpaceDB/Projects/SDBProjectContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","components/ModuleView/style.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Type.tsx","helpers/genFuncs.ts","components/Knob/helpers.ts","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/controls/Graph.tsx","components/LargeIcon/controls/Pad.tsx","components/LargeIcon/ControlMenu.tsx","components/LargeIcon/ContainerControlMenu.tsx","theme/moduleColor.ts","components/DropSquare/style.ts","redux/helpers.ts","redux/getContainerAsProject.ts","audioModules/restoreAudioModule.ts","audioModules/mergeExistingAM.ts","redux/idGen.ts","redux/replicateContainer.ts","redux/replicateModule.ts","components/DropSquare/callbacks.ts","components/ModuleView/helpers.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/Icon.tsx","components/ModuleView/callbacks.ts","components/ModuleView/Fill.tsx","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/restoreAMFromState.ts","components/RightDrawer/SpaceDBMenu.tsx","components/RightDrawer/FileMenu/BlankProjectButton.tsx","helpers/fileAccess.ts","components/RightDrawer/FileMenu/OpenFileButton.tsx","components/RightDrawer/FileMenu/SaveAsNewButton.tsx","components/RightDrawer/FileMenu/SaveCurrentButton.tsx","components/RightDrawer/FileMenu/FileMenu.tsx","components/RightDrawer/RightDrawer.tsx","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/CenterMenus/CenterMenu/style.ts","components/CenterMenus/CenterMenu/CenterMenu.tsx","components/AutoPlacingGrid.tsx/style.ts","components/AutoPlacingGrid.tsx/AutoPlacingGrid.tsx","components/CenterMenus/ConnectionMenu/Modules/helpers.ts","components/CenterMenus/ConnectionMenu/Modules/style.ts","components/CenterMenus/ConnectionMenu/Modules/InModule.tsx","components/CenterMenus/ConnectionMenu/Modules/ContainerInModule.tsx","components/CenterMenus/ConnectionMenu/Modules/OutModule.tsx","components/CenterMenus/ConnectionMenu/Modules/ContainerOutModule.tsx","components/CenterMenus/ConnectionMenu/ConnectionMenu.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/RangeSetMenu/KnobRangeSetMenu.tsx","components/CenterMenus/SaveMenu/style.ts","components/CenterMenus/SaveMenu/SpaceDBProjectSaveMenu.tsx","components/CenterMenus/ConfirmDeleteMenu/ConfirmDeleteMenu.tsx","components/CenterMenus/SaveMenu/FileSaveMenu.tsx","components/CenterMenus/SaveMenu/helpers.ts","components/CenterMenus/SaveMenu/SpaceDBContainerSaveMenu.tsx","components/CenterMenus/RangeSetMenu/AnalyzerRangeSetMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RenameMenu/RenameModuleMenu.tsx","components/CenterMenus/RenameMenu/RenameControlMenu.tsx","components/CenterMenus/AddModuleMenu/style.ts","components/CenterMenus/AddModuleMenu/LeftBar.tsx","components/CenterMenus/AddModuleMenu/ModuleIcons/ModuleIcon.tsx","components/CenterMenus/AddModuleMenu/ModuleIcons/ModuleIcons.tsx","components/CenterMenus/AddModuleMenu/ModuleIcons/moduleData.ts","components/CenterMenus/AddModuleMenu/ModuleIcons/SpaceDBModuleIcon.tsx","components/CenterMenus/AddModuleMenu/ModuleIcons/SpaceDBModules.tsx","components/CenterMenus/AddModuleMenu/ModuleIcons/SearchIcons.tsx","components/CenterMenus/AddModuleMenu/IconRouter.tsx","components/CenterMenus/AddModuleMenu/SearchBar.tsx","components/CenterMenus/AddModuleMenu/AddModuleMenu.tsx","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/renameContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/reducers/mergeContainer.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","components/RightDrawer/FileMenu/ConfirmBlankProject.tsx","components/CenterMenus/CenterMenus.tsx","components/Notification/makeData.ts","components/Notification/style.ts","components/Notification/Notification.tsx","App/App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["module","exports","zIndex","useJSS","createUseStyles","Bounder","backgroundImage","backgroundPosition","width","height","display","fontSize","color","position","top","left","userSelect","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","CONTAINER","VALUE","addModule","id","name","moduleType","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","updateControlRange","newRange","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","mergeContainer","containerID","newModules","newConnections","restoreFromState","state","audioCtx","window","AudioContext","webkitAudioContext","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","value","controlSetFuncs","Number","stop","start","audioNode","connectingParamIDs","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","typeTypes","makeOutput","resume","masterGain","createGain","connect","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","audioModules","makeContainer","makeMediaElement","audioRef","current","url","src","pause","play","createMediaElementSource","ref","makeDistortionCurve","amount","x","k","curve","Float32Array","deg","Math","PI","i","abs","makeDistortion","distortion","createWaveShaper","newAmount","newOversample","floor","oversample","makeAnalyzer","analyzer","createAnalyser","fftSize","bufferLength","frequencyBinCount","timeArray","makeEnvelopedTrigger","constant","decay","sustain","val","currTime","currentTime","linearRampToValueAtTime","setTargetAtTime","cancelAndHoldAtTime","bufferSize","sampleRate","makeWhiteNoise","buffer","createBuffer","data","getChannelData","random","noise","createBufferSource","loop","makeAddModule","dispatch","osc","oscControlData","controlType","paramID","range","gainControlData","output","outputControlData","maxRange","filter","filterControlData","komp","kompControlData","panner","pannerControlData","delay","delayControlData","constantControlData","mediaControlData","addAudioTag","reRenderAudioTags","container","containerControlData","distortionControlData","analyzerControlData","envelopedTrigger","envelopedTriggerControlData","whiteNoise","whiteNoiseControlData","makePointerLayerData","isOpen","pointerId","onPointerMove","onPointerUp","PointerLayer","pointerLayerData","resetPointerLayerData","classes","pointerLayerRef","useRef","useEffect","className","e","configureSpaceDB","spaceDB","feathers","restClient","rest","configure","fetch","projectSaveService","service","containerSaveService","setUserAgent","userAgent","toLowerCase","indexOf","usingElectron","getLocation","innerHeight","pageY","offsetHeight","innerWidth","pageX","offsetWidth","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","smallSize","smallBorderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","diameter","leftBarWidth","iconRouterWidth","backgroundColor","ContextMenu","maxHeight","padding","overflowY","MenuItem","maxWidth","borderStyle","borderColor","event","children","onClose","bounderStyle","style","cmRef","useState","location","setLocation","onPointerDown","Object","assign","stopPropagation","fromMod","toMod","length","alert","disconnect","Button","cursor","notClickable","margin","textAlign","boxShadow","onClick","onKeyDown","onContextMenu","TrashSVG","alt","trashSVG","DeleteButtonBounder","DeleteButtonSVG","DeleteButton","ModuleDeleteButton","am","useDispatch","connections","useSelector","selectedModule","modules","inputs","forEach","inputData","actualOutputID","actualInputID","outputs","outputData","Connection","Name","MenuHeader","whiteSpace","OpenButton","SaveButton","InputOutputView","map","index","key","ContainerOpenButton","fillContainerID","reRenderFillContainer","ContainerSaveButton","find","containerSaves","openSpaceDBContainerSaveMenu","FlexRow","flexWrap","FlexCol","SwitchSVG","marginLeft","flexShrink","Text","fullWidth","fullHeight","rectWidth","rectHeight","rectX","circleCY","Switch","text","onSwitch","initState","isSwitched","setSwitched","spring","useSpring","cx","fill","config","tension","y","rx","ry","circle","cy","r","onDrop","onDragOver","MarkContainerControls","open","containerControls","keys","control","containerControl","markedToContainer","modName","isMarked","nowMarked","openControlRenameMenu","switchStyle","MarkContainerIO","baseContainerID","showingContainerInput","showingContainerOutput","isContainerInput","newState","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","makeData","ModuleContextMenu","setData","openModuleContextMenu","title","openModuleRenameMenu","saveName","remove","res","console","log","refreshSpaceDBModules","SDBModuleContextMenu","openSDBModuleContextMenu","ProjectDeleteButton","setSaveList","openConfirmDeleteMenu","setTimeout","saveNames","SDBProjectContextMenu","openSDBProjectContextMenu","ContextMenus","FillBounder","FillHeaderBounder","FillHeader","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","flexFlow","IconControlContainer","justifySelf","overflowX","ArcherElement","gridTemplateRows","gridTemplateColumns","IconName","IconConnector","alignSelf","ControlBounder","ControlMenu","ControlTypeSelect","ControlInput","Pad","SrcName","overflowWrap","wordWrap","hyphens","File","setFunc","reRenderIcon","label","htmlFor","opacity","onChange","file","target","files","URL","createObjectURL","audioTags","srcName","Type","audioModule","stringIn","str","ar","bothStringsIn","str1","str2","out","push","clamp","min","max","inRange","mapValBetweenRanges","fromRange","toRange","valProportion","toRangeDif","getRotation","makeValString","roundedNumString","toString","slice","KnobContainer","placeItems","KnobSVG","gridRow","gridColumn","KnobText","InteractionLayer","SettingsButton","placeSelf","justClicked","StatelessKnob","initValue","onEveryChange","onSettingsClick","inputVal","setInputVal","svgRef","scale","tempVal","textRef","movementY","transform","stroke","strokeWidth","onBlur","newVal","blur","onDragStart","preventDefault","shiftKey","placeholder","focus","openPointerLayer","settingsSVG","ValueControl","displayModName","currRange","openKnobRangeSetMenu","ButtonControl","SwitchControl","Graph","yRange","zero","setWidth","setup","p5","canvasParentRef","createCanvas","clientWidth","parent","CENTER","draw","getFloatTimeDomainData","xStep","background","currX","currY","strokeWeight","nextX","nextY","line","zeroXStep","openAnalyzerRangeSetMenu","PadControl","onPointerCancel","Value","ContainerControlMenu","getModuleColor","DropSquare","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","keepOnlyIdsInObj","idsToKeep","ObjFrom2Arrays","getChildrenRecursive","childIDs","childModules","containerChildIDs","getInternalConnectionIDs","trimmedIDs","allConnectionIDs","connectionIDs","getInternalConnections","getContainerModulesConnections","restoreAudioModule","mergeExistingContainerAM","toType","fromType","genRandomID","totNumber","getReplicatedState","totNumberModules","totNumberConnections","modIDs","modIDConverter","connectionIDConverter","values","containerMod","outputID","inputID","connection","undefined","performContainerMerge","modulesToMerge","connectionsToMerge","duplicateModule","newID","setHL","dataTransfer","getData","currentChildren","possiblyMod","possiblyOccupyingID","mod","isOccupied","fromRow","fromCol","refreshArcherContainer","moduleDragType","MOVE","COPY","duplicateContainer","dropType","get","isHL","dsStyle","onDragEnter","types","onDragLeave","openAddModuleMenu","onPointerEnter","onPointerLeave","ModuleViewIcon","gridCol","isLarge","setLarge","reRender","toReRender","archerElementStyle","iconStyle","nameStyle","openConnectionMenu","iconOnDrop","draggable","iconOnDragStart","persist","relations","targetId","targetAnchor","sourceAnchor","strokeColor","ModuleViewFill","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","arrowLength","flat","DrawerBounder","right","Drawer","DrawerHeader","DrawerHeaderItem","textDecoration","ItemRouter","alignContent","Toggle","ToggleLine","SDBSaveList","HeaderItem","linkStyle","selectedRoute","restoreAMFromState","prevConnections","numberRestores","connectLate","numTries","buttonStyle","SpaceDBMenu","saveList","openSpaceDBProjectSaveMenu","savedState","BlankProjectButton","numMods","openConfirmBlankProjectMenu","saveJSONToFileHandle","fileHandle","json","a","createWritable","writable","write","JSON","stringify","close","loadJSONFromPickedFile","onFileHandle","showOpenFilePicker","getFile","parse","saveJSONToChosenFile","onSaved","showSaveFilePicker","description","accept","saveFileHandle","getTrimmedFileName","OpenFileButton","flashNotification","SaveAsNewButton","SaveCurrentButton","FileMenu","reRenderFileMenu","drawerWidth","addPx","RightDrawer","setOpen","drawerSpring","setSR","drawerRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","adjusting","addEventListener","div","setPointerCapture","clientX","releasePointerCapture","onWheel","scrollLeft","deltaY","AudioTag","possiblyMediaElement","autoPlay","AudioTags","ids","CenterMenuBounder","backdropFilter","CenterMenu","border","Header","isClosed","headerClassName","headerStyle","header","AutoPlacingGrid","numRows","numCols","gridAutoFlow","direction","gridAutoRows","gridAutoColumns","gap","justifyItems","connectionExists","actualToID","newParam","Module","flexGrow","ConnectorBounder","marginBottom","ConnectorName","ParamName","ConnectionReciever","SmallConnectionReciever","InModule","startsBig","isFromContainer","isToContainer","audioMod","isBig","setBig","marginRight","input","actualFromID","ContainerInModule","isBase","modInputs","childrenStartBig","inputModID","OutModule","ContainerOutModule","modOutputs","outputModID","ConnectionMenu","CMInputBounder","CenterMenuInput","onChangeSubmit","KnobRangeSetMenu","setMin","setMax","setMaxRange","preOnClose","SpaceDBProjectSaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","inputRef","create","autoFocus","update","ConfirmDeleteMenu","FileSaveMenu","openFileSaveMenu","saveDirectoryHandle","showDirectoryPicker","getFileHandle","confirmContainerSaveName","success","initName","SpaceDBContainerSaveMenu","setName","AnalyzerRangeSetMenu","InputSubmit","Error","RenameMenu","onSubmit","setVal","isTooShort","setIsTooShort","trySubmit","toRenameID","RenameModuleMenu","newName","renameModule","parentModID","RenameControlMenu","renameContainerControl","LeftBar","LeftBarButton","RouterBounder","IconRouter","SearchBar","marginTop","outline","DrawerItem","DrawerIcon","DrawerItemText","selectedGroup","setSG","addModuleMenuGroups","group","SPACEDB_MODULES","ModuleIcon","fullName","shortName","isFocussed","totNumModules","addSelectedSearchModule","onFocus","ModuleIcons","moduleData","effectModuleData","sourceModuleData","utilityModuleData","allModuleData","concat","SpaceDBModuleIcon","moduleName","SpaceDBModules","spaceDBModules","SearchIcons","query","upperCaseQuery","toUpperCase","filteredSpaceDBModules","filteredModuleData","prevSelectedGroup","EFFECTS","SOURCES","UTILITY","SEARCH","setQuery","searchRef","AddModuleMenu","setSpaceDBModules","styleSpring","toContainerControls","isBaseContainer","renameContainer","markContainerInput","markContainerOutput","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","renameContainerControlReducer","bcidReducer","removeModule","toTrimModIDs","getContainerIDs","toTrimConnectionIDs","trimmedModules","childID","connectionReducer","createInitState","combinedModuleConnectionReducer","rootReducer","makeBlankProject","emptyState","ConfirmBlankProject","CenterMenus","makeNotificationData","Notification","setNotificationData","isVisible","setIsVisible","notificationTime","App","setPointerLayerData","Boolean","hostname","match","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0e34819a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.9d2c8d42.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","interface ZIndex {\n  [index: string]: number\n}\n\nexport const zIndex: ZIndex = {\n  background: -1,\n  centerMenu: 100,\n  contextMenu: 50,\n  moduleViewBounder: 0,\n}","import { createUseStyles } from 'react-jss'\nimport { zIndex } from '../theme/zIndex'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    //backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    backgroundImage: 'url(https://i.imgur.com/mSjoh6M.jpg)',\n    backgroundPosition: 'center',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: zIndex.background,\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: zIndex.moduleViewBounder,\n    overflow: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\nimport { DistortionModule } from './modules/distortion'\nimport { AnalyzerModule } from './modules/analyzer'\nimport { WhiteNoiseModule } from './modules/whiteNoise'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\nexport const DISTORTION = 'DISTORTION'\nexport const ANALYZER = 'ANALYZER'\nexport const ENVELOPED_TRIGGER = 'ENVELOPED_TRIGGER'\nexport const WHITE_NOISE = 'WHITE_NOISE'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN' | 'DISTORTION' | 'ANALYZER' | 'ENVELOPED_TRIGGER' | 'WHITE_NOISE'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule | DistortionModule | AnalyzerModule | WhiteNoiseModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\nexport const GRAPH = 'GRAPH'\nexport const PAD = 'PAD'\n\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH' | 'GRAPH' | 'PAD'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID?: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n  markedToContainer?: boolean\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction, RenameContainerControlAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string, name?: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n    name,\n  }\n}\n\nexport const renameContainerControl = (name: string, parentModID: string, modID: string, controlID: string, actualModID: string): RenameContainerControlAction => {\n  return {\n    type: RENAME_CONTAINER_CONTROL,\n    name,\n    parentModID,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const RENAME_CONTAINER_CONTROL = 'RENAME_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { Modules, Connections } from \"../stateTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}\n\nexport const mergeContainer = (containerID: string, newModules: Modules, newConnections: Connections, parentID: string, row: number, col: number): MergeContainerAction => {\n  return {\n    type: MERGE_CONTAINER,\n    containerID,\n    newModules,\n    newConnections,\n    parentID,\n    row,\n    col,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\nexport const MERGE_CONTAINER = 'MERGE_CONTAINER'\n","import { RESTORE_FROM_STATE } from \"./rootActionTypes\";\nimport { RootState } from \"../stateTSTypes\";\nimport { RestoreFromStateAction } from \"./rootActionTSTypes\";\n\nexport function restoreFromState(state: RootState): RestoreFromStateAction {\n  return {\n    type: RESTORE_FROM_STATE,\n    state,\n  }\n}","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","declare global {\n  interface Window {\n    webkitAudioContext: AudioContext\n  }\n}\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext // works with safari\nconst audioCtx = new AudioContext()\nexport default audioCtx","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [0.0001, 1000],\n      maxRange: [0.0001, 1000],\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-40, 40],\n      maxRange: [-40, 40],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [0, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 440],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    \n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    \n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs, FILE, BUTTON, ControlData } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nexport function makeMediaElementControlData(): ControlData {\n  return {\n    'choose file': {\n      controlType: FILE,\n    },\n    'play': {\n      controlType: BUTTON,\n    },\n    'pause': {\n      controlType: BUTTON,\n    }\n  }\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      },\n      'pause': () => {\n        (audioRef.current as HTMLAudioElement).pause()\n      },\n      'play': () => {\n        (audioRef.current as HTMLAudioElement).play()\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import audioCtx from '../../audioCtx'\nimport { VALUE, ControlData, BaseAM } from '../moduleTypes';\n\nexport interface DistortionModule extends BaseAM {\n  audioNode: WaveShaperNode,\n}\n\nexport function makeDistortionControlData(): ControlData {\n  return {\n    'amount': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 1000],\n    },\n    'oversample': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 4],\n      maxRange: [0, 4],\n    }\n  }\n}\n\nfunction makeDistortionCurve(amount: number) {\n  var k = typeof amount === 'number' ? amount : 50,\n    n_samples = 44100,\n    curve = new Float32Array(n_samples),\n    deg = Math.PI / 180,\n    i = 0,\n    x;\n  for (; i < n_samples; ++i) {\n    x = i * 2 / n_samples - 1;\n    curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n  }\n  return curve\n}\n\nfunction makeDistortion(prevControlData?: ControlData): DistortionModule {\n  const distortion = audioCtx.createWaveShaper()\n  distortion.curve = makeDistortionCurve(prevControlData ? prevControlData['amount'].value as number : 0)\n\n  const controlSetFuncs = {\n    'amount': (newAmount: string) => {\n      distortion.curve = makeDistortionCurve(Number(newAmount))\n    },\n    'oversample': (newAmount: string) => {\n      const newOversample = Math.floor(Number(newAmount))\n      if (newOversample < 2) {\n        distortion.oversample = 'none'\n      } else if (newOversample < 4) {\n        distortion.oversample = '2x'\n      } else {\n        distortion.oversample = '4x'\n      }\n    }\n  }\n  return {\n    audioNode: distortion,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeDistortion","import audioCtx from '../../audioCtx'\nimport { ControlSetFuncs, BaseAM, ControlData, GRAPH } from '../moduleTypes'\n\nexport interface AnalyzerModule extends BaseAM {\n  audioNode: AnalyserNode\n  timeArray: Float32Array\n  bufferLength: number\n}\n\nexport function makeAnalyzerControlData(): ControlData {\n  return {\n    'time graph': {\n      controlType: GRAPH,\n      range: [-1.5, 1.5],\n    }\n  }\n}\n\nfunction makeAnalyzer(prevControlData?: ControlData): AnalyzerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = 1024\n  const bufferLength = analyzer.frequencyBinCount\n  const timeArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'time graph': () => {\n      \n    }\n  }\n\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    timeArray,\n    bufferLength,\n  }\n}\n\nexport default makeAnalyzer","import { BaseAM, ControlData, VALUE, PAD } from \"../moduleTypes\"\nimport audioCtx from '../../audioCtx'\n\nexport interface EnvelopedTriggerModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeEnvelopedTriggerControlData(): ControlData {\n  return {\n    'trigger': {\n      controlType: PAD,\n    },\n    'attack': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'decay': {\n      controlType: VALUE,\n      value: 0.2,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'sustain': {\n      controlType: VALUE,\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 100],\n    },\n    'release': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n  }\n}\n\nfunction makeEnvelopedTrigger(prevControlData?: ControlData): EnvelopedTriggerModule {\n  const constant = audioCtx.createConstantSource()\n  constant.offset.value = 0\n\n  let attack = .1\n  let decay = 0.2\n  let sustain = 1\n  let release = .1\n\n  if (prevControlData) {\n    attack = prevControlData['attack'].value as number\n    decay = prevControlData['decay'].value as number\n    sustain = prevControlData['sustain'].value as number\n    release = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs = {\n    'trigger': (val: string) => {\n      const currTime = audioCtx.currentTime\n      if (val === 'on') {\n        constant.offset.linearRampToValueAtTime(1, currTime + attack)\n        constant.offset.setTargetAtTime(sustain, currTime + attack, decay)\n      } else {\n        constant.offset.cancelAndHoldAtTime(currTime)\n        constant.offset.setTargetAtTime(0, currTime, release)\n      }\n    },\n    'attack': (val: string) => {\n      attack = Number(val)\n    },\n    'decay': (val: string) => {\n      decay = Number(val)\n    },\n    'sustain': (val: string) => {\n      sustain = Number(val)\n    },\n    'release': (val: string) => {\n      release = Number(val)\n    },\n  }\n\n  constant.start()\n\n  return {\n    audioNode: constant,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeEnvelopedTrigger","import audioCtx from \"../../audioCtx\";\nimport { BaseAM, ControlData } from \"../moduleTypes\";\n\nexport interface WhiteNoiseModule extends BaseAM {\n  audioNode: AudioBufferSourceNode\n}\n\nexport function makeWhiteNoiseControlData(): ControlData {\n  return {}\n}\n\nconst length = 10\nconst bufferSize = audioCtx.sampleRate * length\n\nfunction makeWhiteNoise(prevControlData?: ControlData): WhiteNoiseModule {\n  const buffer = audioCtx.createBuffer(1, bufferSize, audioCtx.sampleRate)\n  let data = buffer.getChannelData(0)\n  for (let i = 0; i < bufferSize; i++) {\n    data[i] = Math.random() * 2 - 1\n  }\n  let noise = audioCtx.createBufferSource()\n  noise.buffer = buffer\n  noise.loop = true\n  noise.start()\n\n  return {\n    audioNode: noise,\n    connectingParamIDs: [],\n    controlSetFuncs: {},\n  }\n}\n\nexport default makeWhiteNoise","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\nimport { makeMediaElementControlData } from './modules/mediaElement'\nimport makeDistortion, { makeDistortionControlData } from './modules/distortion'\nimport makeAnalyzer, { makeAnalyzerControlData } from './modules/analyzer'\nimport makeEnvelopedTrigger, { makeEnvelopedTriggerControlData } from './modules/envelopedTrigger'\nimport makeWhiteNoise, { makeWhiteNoiseControlData } from './modules/whiteNoise'\n\ndeclare global {\n  interface Window {\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n  }\n}\n\nfunction makeAddModule() {\n  window.addModule = function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData = makeMediaElementControlData()\n        window.addAudioTag(id); window.reRenderAudioTags()\n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0']))\n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n      case DISTORTION:\n        const distortion = makeDistortion()\n        const distortionControlData = makeDistortionControlData()\n        window.audioModules = { ...window.audioModules, [id]: distortion }\n        dispatch(addModule(id, name, moduleType, distortionControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ANALYZER:\n        const analyzer = makeAnalyzer()\n        const analyzerControlData = makeAnalyzerControlData()\n        window.audioModules = { ...window.audioModules, [id]: analyzer }\n        dispatch(addModule(id, name, moduleType, analyzerControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ENVELOPED_TRIGGER:\n        const envelopedTrigger = makeEnvelopedTrigger()\n        const envelopedTriggerControlData = makeEnvelopedTriggerControlData()\n        window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n        dispatch(addModule(id, name, moduleType, envelopedTriggerControlData, parentID, row, col, [], ['0']))\n        break\n      case WHITE_NOISE:\n        const whiteNoise = makeWhiteNoise()\n        const whiteNoiseControlData = makeWhiteNoiseControlData()\n        window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n        dispatch(addModule(id, name, moduleType, whiteNoiseControlData, parentID, row, col, [], ['0']))\n        break\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import feathers from '@feathersjs/feathers'\nimport rest from '@feathersjs/rest-client'\n\ndeclare global {\n  interface Window {\n    projectSaveService: any\n    containerSaveService: any\n  }\n}\n\nfunction configureSpaceDB() {\n  const spaceDB = feathers()\n  const restClient = rest('http://192.168.1.64:30300') // spaceDB\n\n  spaceDB.configure(restClient.fetch(window.fetch))\n  window.projectSaveService = spaceDB.service('project-save-service')\n  window.containerSaveService = spaceDB.service('container-save-service')\n}\n\nexport default configureSpaceDB","declare global {\n  interface Window {\n    usingElectron: boolean\n  }\n}\n\nfunction setUserAgent() {\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.indexOf(' electron/') > -1) {\n    window.usingElectron = true\n  } else {\n    window.usingElectron = false\n  }\n}\n\nexport default setUserAgent","import { MouseEvent, RefObject } from \"react\";\n\nexport function getLocation(e: MouseEvent<HTMLDivElement>, ref: RefObject<HTMLDivElement>) {\n  if (!ref.current) {\n    return {\n      top: -1000,\n      left: -1000,\n    }\n  } else {\n    return {\n      top: (window.innerHeight - e.pageY) >= ref.current.offsetHeight ?\n        e.pageY : window.innerHeight - ref.current.offsetHeight,\n      left: (window.innerWidth - e.pageX) >= ref.current.offsetWidth ?\n        e.pageX : window.innerWidth - ref.current.offsetWidth,\n    }\n  }\n  \n}","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: '#000000c4',\n  centerMenuBackground: '#000000b3',\n  centerMenuBorder: grey,\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n  disabled: '#ffffff61',\n\n  dropSquareHL: '#ffffff60',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  moduleInput: '#da1212',\n  paramInput: 'blue',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C',\n\n  analyzerModuleBG: '#00347D',\n\n  confirmButton: '#00802da6',\n  denyButton: '#cc00006e',\n\n  // Context menu\n  contextMenuItemBorder: 'black',\n  contextMenuBackground: '#08101deb',\n\n  sdbSaveButton: '#282c349c',\n\n  // add module menu\n  addModuleLeftBarBG: 'transparent',\n  addModuleLeftBarButtonHL: '#ffffff60',\n  addModuleSearchBarBG: '#1d1d2b',\n  addModuleSearchBarText: 'white',\n\n  // notification\n  success: '#00802d',\n}\n\nexport const paramColors = ['#dbde02', '#0a9408', '#470ff5', '#0ba8cc']\n// yellow, green, purple, light blue\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400', // converted to px\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIconWidth: '25vmin',\n    bigIconHeight: '35vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '2.5vmin',\n    smallSize: '1.5vmin',\n    smallBorderRadius: '1.5vmin',\n  },\n  knob: {\n    size: 7, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  },\n  switch: {\n    diameter: 3 // in vmin\n  },\n  addModuleMenu: {\n    leftBarWidth: '20vmin',\n    iconRouterWidth: '60vmin',\n    height: '60vmin',\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst maxWidth = '8em'\nconst maxHeight = '12em'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    zIndex: zIndex.contextMenu,\n  },\n\n  ContextMenu: {\n    maxHeight,\n    backgroundColor: colors.contextMenuBackground,\n    padding: '.2em',\n    borderRadius: '.2em',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0em',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  MenuItem: {\n    maxWidth,\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      borderColor: colors.contextMenuItemBorder\n    }\n  }\n})\n\nexport default useJSS","import React, { ReactNode, useEffect, useRef, useState } from 'react'\nimport { MouseDivEvent } from '../types'\nimport { getLocation } from './helpers'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children: ReactNode\n  event: MouseDivEvent\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n  style?: CSS.Properties\n}\n\nfunction ContextMenu({ event, children, onClose, bounderStyle, style }: Props) {\n  const classes = useJSS()\n  const cmRef = useRef<HTMLDivElement>(null)\n  const [location, setLocation] = useState(getLocation(event, cmRef))\n  useEffect(() => {\n    setLocation(getLocation(event, cmRef))\n  }, [event])\n  return (\n    <div className={classes.Bounder}\n      onPointerDown={onClose}\n      style={bounderStyle}\n    >\n      <div className={classes.ContextMenu}\n        style={Object.assign({\n          top: location.top,\n          left: location.left,\n        }, style)}\n        ref={cmRef}\n        onPointerDown={e => { e.stopPropagation() }}\n      >\n        { children }\n      </div>\n    </div>\n  )\n}\n\nexport default ContextMenu","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: ({ notClickable }) => notClickable ? '' : 'pointer',\n      borderColor: ({ notClickable }) => notClickable ? 'transparent' : 'white',\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '.4em',\n    margin: '.3em',\n    textAlign: 'center',\n    fontSize: ({ fontSize }) => fontSize,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n})\n\nexport default useJSS","import React, { RefObject, KeyboardEvent, MouseEvent } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  children?: React.ReactNode\n  onClick?: (e: MouseEvent<HTMLDivElement>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n  ref?: RefObject<HTMLDivElement>\n  onKeyDown?: (e: KeyboardEvent<HTMLDivElement>) => void\n  onContextMenu?: (e: MouseEvent<HTMLDivElement>) => void\n  fontSize?: string\n  notClickable?: boolean\n}\n\nfunction Button({ className, onClick, children, style, onPointerDown, ref, onKeyDown, onContextMenu, fontSize, notClickable }: Props) {\n  const classes = useJSS({ fontSize, notClickable })\n  return (\n    <div className={className ? `${classes.Button} ${className}` : classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n      ref={ref}\n      onKeyDown={onKeyDown}\n      onContextMenu={onContextMenu}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import React from 'react'\nimport trashSVG from '../../icons/trash.svg'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  alt: string\n}\n\nfunction TrashSVG({ className, style, alt }: Props) {\n  return (\n    <img className={className}\n      style={style}\n      src={trashSVG}\n      alt={alt}\n    />\n  )\n}\n\nexport default TrashSVG","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DeleteButtonBounder: {\n    backgroundColor: colors.deleteButton,\n    fontSize: sizes.text.small,\n    padding: '.2em .4em',\n    '&:hover': {\n      borderColor: colors.deleteButton,\n    },\n  },\n\n  DeleteButtonSVG: {\n    width: '1.5em',\n    height: '1.5em',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport Button from '../Button/Button'\nimport TrashSVG from '../SVG/TrashSVG'\nimport useJSS from './style'\n\ninterface Props {\n  onClick: () => void\n}\n\nfunction DeleteButton({ onClick }: Props) {\n  const classes = useJSS()\n  return (\n    <Button className={classes.DeleteButtonBounder}\n      onPointerDown={e => { e.stopPropagation() }}\n      onClick={onClick}\n    >\n      <TrashSVG className={classes.DeleteButtonSVG}\n        alt={'delete'}\n      />\n    </Button>\n  )\n}\n\nexport default DeleteButton","import React from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../../redux/allActions'\nimport { useSelector } from 'react-redux'\nimport DeleteButton from '../DeleteButton'\n\ninterface Props {\n  modID: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ modID, onClose }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <DeleteButton\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(selectedModule.id))\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ModuleDeleteButton","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Connection: {\n    fontSize: sizes.text.xsmall,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  Name: {\n    fontSize: sizes.text.medium,\n    margin: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  MenuHeader: {\n    fontSize: sizes.text.small,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    whiteSpace: 'noWrap',\n  },\n\n  OpenButton: {\n    fontSize: sizes.text.small,\n  },\n\n  SaveButton: {\n    fontSize: sizes.text.small\n  },\n})\n\nexport default useJSS","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { Modules, RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../../redux/allActions'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  modID: string\n  modules: Modules\n}\n\nfunction InputOutputView({ modID, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <Fragment>\n\n      {selectedModule.inputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>inputs</div>\n      }\n\n      {selectedModule.inputs.map((connectionID, index) => {\n        const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[fromID].name\n        return (\n          <div className={classes.Connection}\n            key={fromID + param + 'inp' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => {e.stopPropagation()}}\n          >\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n\n      {selectedModule.outputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>outputs</div>\n      }\n\n      {selectedModule.outputs.map((connectionID, index) => {\n        const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[toID].name\n        return (\n          <div className={classes.Connection}\n            key={toID + param + 'out' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => { e.stopPropagation() }}\n          >\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default InputOutputView","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction ContainerOpenButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {modules[modID].moduleType !== CONTAINER ? null :\n        <Button className={classes.OpenButton}\n          onClick={() => {\n            window.fillContainerID = modID\n            window.reRenderFillContainer()\n            onClose()\n          }}\n          onPointerDown={(e) => { e.stopPropagation() }}\n        >\n          open\n        </Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default ContainerOpenButton","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction ContainerSaveButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {!window.usingElectron || modules[modID].moduleType !== CONTAINER ? null :\n      <Button className={classes.SaveButton}\n        onClick={() => {\n          window.containerSaveService.find().then((containerSaves: string[]) => {\n            window.openSpaceDBContainerSaveMenu(containerSaves, modID, onClose)\n          })\n          onClose()\n        }}\n      >\n        save to spaceDB\n      </Button>}\n    </Fragment>\n  )\n}\n\nexport default ContainerSaveButton","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  FlexRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n    flexWrap: ({ flexWrap }) => flexWrap,\n  },\n\n  FlexCol: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  justifyContent?: string\n  alignItems?: string\n  flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse',\n}\n\nfunction FlexRow({ className, children, style, ref, justifyContent, alignItems, flexWrap }: Props) {\n  const classes = useJSS({ justifyContent, alignItems, flexWrap })\n  return (\n    <div className={className ? `${classes.FlexRow} ${className}` : classes.FlexRow}\n      style={style}\n      ref={ref}\n    >\n      { children }\n    </div>\n  )\n}\n\nexport default FlexRow","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    padding: '1vmin',\n  },\n\n  SwitchSVG: {\n    marginLeft: '1.5vmin',\n    flexShrink: 0,\n    //padding: '.5vmin',\n  },\n\n  Text: {\n    fontSize: ({ fontSize }) => fontSize,\n  }\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors, sizes } from '../../theme/theme'\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n  fontSize?: string\n}\n\nconst heightDif = 1\n\nconst fullWidth = 2 * sizes.switch.diameter\nconst fullHeight = sizes.switch.diameter + heightDif\n\nconst rectWidth = 1.5 * sizes.switch.diameter\nconst rectHeight = sizes.switch.diameter - heightDif\nconst rectX = sizes.switch.diameter / 4\nconst rectY = heightDif\n\nconst circleCY = (sizes.switch.diameter + heightDif) / 2\n\n\nfunction Switch({ text, onSwitch, initState, style, fontSize }: Props) {\n  const [isSwitched, setSwitched] = useState(initState)\n  const classes = useJSS({ fontSize })\n  const spring = useSpring({\n    cx: isSwitched ? `${fullWidth - sizes.switch.diameter / 2}vmin` : `${sizes.switch.diameter / 2}vmin`,\n    fill: isSwitched ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div className={classes.Text}\n        onClick={() => { onSwitch(!isSwitched); setSwitched(!isSwitched) }}\n      >\n        {text}\n      </div>\n      <svg className={classes.SwitchSVG}\n        width={`${fullWidth}vmin`}\n        height={`${fullHeight}vmin`}\n        onClick={() => {\n          onSwitch(!isSwitched); setSwitched(!isSwitched)\n        }}\n      >\n        <rect width={`${rectWidth}vmin`} height={`${rectHeight}vmin`} x={`${rectX}vmin`} y={`${rectY}vmin`} rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={`${circleCY}vmin`} r={`${sizes.switch.diameter / 2}vmin`} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import React, { DragEvent } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  onDrop?: (e: DragEvent<HTMLDivElement>) => void\n  onDragOver?: (e: DragEvent<HTMLDivElement>) => void\n  justifyContent?: string\n  alignItems?: string\n}\n\nfunction FlexCol({ className, children, style, ref, onDrop, onDragOver, justifyContent, alignItems }: Props) {\n  const classes = useJSS({ justifyContent, alignItems })\n  return (\n    <div className={className ? `${classes.FlexCol} ${className}` : classes.FlexCol}\n      style={style}\n      ref={ref}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      { children }\n    </div>\n  );\n}\n\nexport default FlexCol","import React, { Fragment } from 'react'\nimport { sizes } from '../../../theme/theme'\nimport { Module, ContainerModule, RootState, ContainerControl } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../../redux/allActions'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport FlexRow from '../../Flex/FlexRow'\nimport Switch from '../../Switch/Switch'\nimport FlexCol from '../../Flex/FlexCol'\nimport useJSS from './style'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  const classes = useJSS()\n  const open = selectedModule.moduleType === CONTAINER ? \n    (selectedModule as ContainerModule).containerControls.length !== 0 \n    :\n    Object.keys(selectedModule.controlData).length !== 0\n  return (\n    <Fragment>\n      {!open ? null :\n      <FlexCol>\n        <div className={classes.MenuHeader}> mark as container control </div>\n        <FlexRow justifyContent='center' style={{ flexWrap: 'wrap', maxWidth: '40vmin' }}>\n          {\n            selectedModule.moduleType === CONTAINER ?\n            (selectedModule as ContainerModule).containerControls.map((control, index) => {\n              const { modID, controlID, actualModID, name, markedToContainer } = control\n              const modName = modules[modID].name\n              let containerControl: ContainerControl\n              const isMarked = markedToContainer ? true : false\n              if (isMarked) {\n                containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                  return (\n                    containerControl.controlID === controlID &&\n                    containerControl.actualModID === actualModID\n                  )\n                })[0]\n              }\n              return (\n                <FlexRow>\n                  <Switch initState={isMarked} text={name ? name : `${modName} - ${controlID}`}\n                    style={{ fontSize: sizes.text.small, padding: '.2em' }}\n                    key={modID + index}\n                    onSwitch={nowMarked => {\n                      if (nowMarked) {\n                        dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                      } else {\n                        dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                      }\n                    }}\n                  />\n                  {\n                    !isMarked ? null :\n                    <Button fontSize={sizes.text.xsmall}\n                      onClick={() => {\n                        window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                      }}\n                    >\n                      edit\n                    </Button>\n                  }\n                </FlexRow>\n              )\n            }) : null\n          }\n          {\n          selectedModule.moduleType === CONTAINER ? null :\n          Object.keys(selectedModule.controlData).map((controlID, index) => {\n            const isMarked = selectedModule.controlData[controlID].markedToContainer ? true : false\n            let containerControl: ContainerControl\n            if (isMarked) {\n              containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                return (\n                  containerControl.controlID === controlID &&\n                  containerControl.actualModID === selectedModule.id\n                )\n              })[0]\n            }\n            return (\n              <FlexRow key={index}>\n                <Switch initState={isMarked} text={controlID}\n                  style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                  key={controlID + index}\n                  onSwitch={nowMarked => {\n                    if (nowMarked) {\n                      dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    } else {\n                      dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    }\n                  }} \n                />\n                {\n                  !isMarked ? null :\n                  <Button style={{ fontSize: sizes.text.small }}\n                    onClick={() => {\n                      window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                    }}\n                  >\n                    edit\n                  </Button>\n                }\n              </FlexRow>\n            )\n          })\n          }\n        </FlexRow>\n      </FlexCol>}\n    </Fragment>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\nimport Switch from '../../Switch/Switch'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\n\ninterface Props {\n  modID: string\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.small,\n  padding: '.1em',\n}\n\nfunction MarkContainerIO({ modID }: Props) {\n  const dispatch = useDispatch()\n  const baseContainerID = useSelector((state: RootState) => state.baseContainerID)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  const showingContainerInput = selectedModule.connectionInputs.length !== 0\n  const showingContainerOutput = selectedModule.connectionOutputs.length !== 0\n  const classes = useJSS()\n  return (\n    window.fillContainerID !== baseContainerID ?\n    <Fragment>\n      <MarkContainerControls selectedModule={selectedModule} />\n      {!showingContainerInput && !showingContainerOutput ?  null :\n      <div\n        className={classes.MenuHeader}\n      >mark as container io</div>\n      }\n      <FlexRow justifyContent='center'>\n        {!showingContainerInput ? null :\n        <Switch style={switchStyle}\n          fontSize={ sizes.text.xsmall }\n          key={selectedModule.id + 'inputSwitch'}\n          text={'input'} \n          initState={selectedModule.isContainerInput}\n          onSwitch={(newState) => {\n            if (newState) {\n              dispatch(markContainerInput(selectedModule.id))\n            } else {\n              dispatch(unmarkContainerInput(selectedModule.id))\n            }\n          }}\n        />}\n        {!showingContainerOutput ? null :\n        <Switch style={switchStyle}\n          fontSize={ sizes.text.xsmall }\n          key={selectedModule.id + 'outputSwitch'}\n          text={'output'}\n          initState={selectedModule.isContainerOutput}\n          onSwitch={(newState) => {\n            if (newState) {\n              dispatch(markContainerOutput(selectedModule.id))\n            } else {\n              dispatch(unmarkContainerOutput(selectedModule.id))\n            }\n          }}\n        />\n        }\n      </FlexRow>\n    </Fragment>\n    :\n    null\n  )\n}\n\nexport default MarkContainerIO","import React, { Fragment, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport ContextMenu from '../ContextMenu/ContextMenu'\nimport DeleteButton from './ModuleDeleteButton'\nimport InputOutputView from './InputOutputView'\nimport ContainerOpenButton from './ContainerOpenButton'\nimport ContainerSaveButton from './ContainerSaveButton'\nimport { MouseDivEvent } from '../types'\nimport MarkContainerIO from './MarkContainerIO'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    openModuleContextMenu: (event: MouseDivEvent, modID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, modID?: string) {\n  return {\n    isOpen,\n    event,\n    modID,\n  }\n}\n\nfunction ModuleContextMenu() {\n  const modules = useSelector((state: RootState) => state.modules)\n  const [{ isOpen, event, modID }, setData] = useState(makeData(false))\n  window.openModuleContextMenu = (event, modID) => setData(makeData(true, event, modID))\n  const onClose = () => { setData(makeData(false)) }\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} onClose={onClose}>\n          <div className={classes.Name}\n            title='rename module'\n            onClick={() => {\n              window.openModuleRenameMenu(modID as string)\n            }}\n          >{modules[modID as string]?.name}</div>\n          <ContainerOpenButton modules={modules} modID={modID as string} onClose={onClose} />\n          <InputOutputView modID={modID as string} modules={modules}/>\n          <ContainerSaveButton modules={modules} modID={modID as string} onClose={onClose} />\n          <MarkContainerIO modID={modID as string} />\n          <DeleteButton modID={modID as string} onClose={onClose}/>\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default ModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ saveName, onClose }: Props) {\n  return (\n    <DeleteButton onClick={() => {\n      window.containerSaveService.remove(saveName).then((res: string) => {\n        console.log(res)\n        //window.flashNotification(r)\n        window.refreshSpaceDBModules()\n        onClose()\n      })\n    }}/>\n  )\n}\n\nexport default ModuleDeleteButton","import React, { Fragment, useState } from 'react'\nimport { zIndex } from '../../../../theme/zIndex'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ModuleDeleteButton from './ModuleDeleteButton'\n\ndeclare global {\n  interface Window {\n    openSDBModuleContextMenu: (event: MouseDivEvent, saveName: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, saveName?: string) {\n  return {\n    isOpen,\n    event,\n    saveName\n  }\n}\n\nfunction SDBModuleContextMenu() {\n  const [{ isOpen, event, saveName }, setData] = useState(makeData(false))\n  window.openSDBModuleContextMenu = (event, saveName) => { setData(makeData(true, event, saveName)) }\n  const onClose = () => setData(makeData(false))\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} \n          onClose={() => setData(makeData(false))}\n          bounderStyle={{ zIndex: zIndex.centerMenu + 1 }}\n        >\n          <ModuleDeleteButton saveName={saveName as string} onClose={onClose}/>\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default SDBModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  setSaveList: (arg: string[]) => void\n  onClose: () => void\n}\n\nfunction ProjectDeleteButton({ saveName, setSaveList, onClose }: Props) {\n  return (\n    <DeleteButton \n      onClick={() => {\n        window.openConfirmDeleteMenu(saveName, () => {\n          window.setTimeout(() => {\n            window.projectSaveService.find().then((saveNames: string[]) => { \n              setSaveList(saveNames) \n            })\n          }, 1000)\n        })\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ProjectDeleteButton","import React, { Fragment, useState } from 'react'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ProjectDeleteButton from './ProjectDeleteButton'\n\ntype SetSaveList = (arg: string[]) => void\n\ndeclare global {\n  interface Window {\n    openSDBProjectContextMenu: (\n      event: MouseDivEvent,\n      saveName: string,\n      setSaveList: SetSaveList\n    ) => void\n  }\n}\n\nexport function makeData(\n  isOpen: boolean,\n  event?: MouseDivEvent,\n  saveName?: string,\n  setSaveList?: (arg: string[]) => void\n) {\n  return {\n    isOpen,\n    event,\n    saveName,\n    setSaveList\n  }\n}\n\nfunction SDBProjectContextMenu() {\n  const [{ isOpen, event, saveName, setSaveList }, setData] = useState(makeData(false))\n  window.openSDBProjectContextMenu = (event, saveName, setSaveList) => { setData(makeData(true, event, saveName, setSaveList)) }\n  const onClose = () => { setData(makeData(false)) }\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} onClose={onClose}>\n          <ProjectDeleteButton saveName={saveName as string} setSaveList={setSaveList as SetSaveList} onClose={onClose} />\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default SDBProjectContextMenu","import React, { Fragment } from 'react'\nimport ModuleContextMenu from './Module/ModuleContextMenu'\nimport SDBModuleContextMenu from './SpaceDB/Modules/SDBModuleContextMenu'\nimport SDBProjectContextMenu from './SpaceDB/Projects/SDBProjectContextMenu'\n\nfunction ContextMenus() {\n  return (\n    <Fragment>\n      <ModuleContextMenu />\n      <SDBProjectContextMenu />\n      <SDBModuleContextMenu />\n    </Fragment>\n  )\n}\n\nexport default ContextMenus","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n    flexShrink: 0,\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    justifyContent: 'center',\n    margin: '0vmin 1vmin'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n\n  Pad: {\n    width: '20vmin',\n    height: '15vmin',\n    borderRadius: '2vmin',\n    backgroundColor: 'black',\n  },\n\n  SrcName: {\n    fontSize: sizes.text.xsmall,\n    textAlign: 'center',\n    whiteSpace: 'normal',\n    justifyContent: 'center',\n    width: '100%',\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n    hyphens: 'auto',\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport { sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  actualModID: string\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n  label?: string\n}\n\nfunction File({ actualModID, controlID, setFunc, reRenderIcon, modName, label }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={actualModID + controlID}\n      >\n        <Button fontSize={sizes.text.small}>\n          {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n        </Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={actualModID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[actualModID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <div className={classes.SrcName}>\n        {window.audioTags[actualModID].srcName}\n      </div>\n    </div>\n  )\n}\n\nexport default File","import React from 'react'\nimport useJSS from './style'\nimport { SetFunc, AudioModuleWithTypes, ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\n\ninterface Props {\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  controlID: string\n  label?: string\n}\n\nfunction Type({ setFunc, controlID, actualModID, modName, label }: Props) {\n  const classes = useJSS()\n  const audioModule = window.audioModules[actualModID] as ConnectingAudioModule\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  const value = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value)\n  return (\n    <FlexRow style={{ justifyContent: 'center', margin: '1vmin 0vmin' }}>\n      <label htmlFor={'type'}>{label ? label : modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={e => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(actualModID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={actualModID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </FlexRow>\n  )\n}\n\nexport default Type","export function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1] \n}\n\nexport function mapValBetweenRanges(val: number, fromRange: [number, number], toRange: [number, number]) {\n\tconst valProportion = (val - fromRange[0]) / (fromRange[1] - fromRange[0])\n\tconst toRangeDif = toRange[1] - toRange[0]\n\treturn toRange[0] + valProportion * toRangeDif\n}","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nlet justClicked = false\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          if (e.target.value.length !== 0) {\n            const newVal = clamp(Number(e.target.value), range)\n            if (onChange) {\n              onChange(newVal)\n            }\n            setInputVal(makeValString(newVal))\n          } else {\n            if (textRef.current) {\n              textRef.current.value = inputVal\n            }\n          }\n        }}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            if (justClicked) {\n              if (textRef.current) {\n                textRef.current.placeholder = textRef.current.value\n                textRef.current.value = ''\n                textRef.current.focus()\n              }\n            } else {\n              window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n              justClicked = true\n              window.setTimeout(() => { justClicked = false }, 200)\n            }\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        title='edit knob range'\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\nimport StatelessKnob from '../../Knob/StatelessKnob'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  displayModName?: string\n  label?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName, label }: Props) {\n  const { val, currRange } = useSelector((state: RootState) => {\n    return {\n      val: state.modules[actualModID].controlData[controlID].value as number,\n      currRange: state.modules[actualModID].controlData[controlID].range as [number, number],\n    }\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(actualModID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openKnobRangeSetMenu(actualModID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(actualModID, controlID, newRange))\n          })\n        }}\n      />\n      <div>{label ? label : displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n  label?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName, label }: Props) {\n  return (\n    <Button fontSize={sizes.text.small}\n      onClick={() => {\n        setFunc('')\n      }}\n    >\n      {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n    </Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Switch from '../../Switch/Switch'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  label?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName, label }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={label ? label : modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React, { useState } from 'react'\nimport Sketch from 'react-p5'\nimport p5Types from 'p5'\nimport { AnalyzerModule } from '../../../audioModules/modules/analyzer'\nimport { mapValBetweenRanges } from '../../../helpers/genFuncs'\nimport { colors, sizes } from '../../../theme/theme'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { updateControlRange } from '../../../redux/allActions'\nimport FlexCol from '../../Flex/FlexCol'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  modID: string\n}\n\nconst height = 200\n\nfunction Graph({ modID }: Props) {\n  const analyzer = window.audioModules[modID] as AnalyzerModule\n  const yRange = useSelector((state: RootState) => state.modules[modID].controlData['time graph'].range as Range)\n  const zero = height - mapValBetweenRanges(0, yRange, [0, height])\n  const [width, setWidth] = useState(0)\n\n  function setup(p5: p5Types, canvasParentRef: Element) {\n    p5.createCanvas(canvasParentRef.clientWidth, height).parent(canvasParentRef)\n    p5.textAlign(p5.CENTER, p5.CENTER)\n    p5.fill(100)\n    setWidth(canvasParentRef.clientWidth)\n  }\n\n  function draw(p5: p5Types) {\n    analyzer.audioNode.getFloatTimeDomainData(analyzer.timeArray)\n    const xStep = width / analyzer.bufferLength\n    p5.background(0) // draw black background\n\n    let currX = 0\n    let currY = height - mapValBetweenRanges(analyzer.timeArray[0], yRange, [0, height])\n    p5.stroke(colors.analyzerModuleBG)\n    p5.strokeWeight(6)\n    for (let i = 0; i < analyzer.bufferLength - 1; i++) {\n      const nextX = (i + 1) * xStep\n      const nextY = height - mapValBetweenRanges(analyzer.timeArray[i + 1], yRange, [0, height])\n      p5.line(currX, currY, nextX, nextY)\n      currX = nextX\n      currY = nextY\n    }\n\n    const zeroXStep = width / 20\n    // draw 0 indicator\n    p5.stroke(100)\n    p5.strokeWeight(1)\n    p5.line(0, zero, zeroXStep, zero)\n    p5.text('0', 1.5 * zeroXStep, zero)\n  }\n\n  const dispatch = useDispatch()\n  return (\n    <FlexCol style={{ justifyContent: 'center', alignItems: 'center' }}>\n      <Sketch style={{ width: sizes.moduleView.bigIconWidth,  }}\n        setup={setup} \n        draw={draw} \n      />\n      <Button style={{ width: '10em' }}\n        onClick={() => {\n          window.openAnalyzerRangeSetMenu(yRange, newRange => {\n            dispatch(updateControlRange(modID, 'time graph', newRange))\n          })\n        }}\n      >\n        change range\n      </Button>\n    </FlexCol>\n  )\n}\n\nexport default Graph","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  setFunc: (arg: string) => void\n}\n\nfunction PadControl({ setFunc }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Pad}\n      onPointerDown={e => {\n        e.preventDefault()\n        setFunc('on')\n      }}\n      onPointerCancel={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n      onPointerUp={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n    />\n  )\n}\n\nexport default PadControl","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, GRAPH, PAD } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl } from './controls/all'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id}/>\n            :\n            controlType === BUTTON && controlID !== 'open'\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} actualModID={selectedModule.id}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={selectedModule.id} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import React from 'react'\nimport useJSS from './style'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH, GRAPH, PAD } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl } from './controls/all'\nimport { useSelector } from 'react-redux'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <div className={classes.ControlMenu}>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID, name }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType } = modules[actualModID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const modName = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={modName} label={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={modName} label={name}/>\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} modName={modName} actualModID={actualModID} label={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={actualModID} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType?: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG\n    case ENVELOPED_TRIGGER: return colors.sourceModuleBG\n    case WHITE_NOISE: return colors.sourceModuleBG\n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n    case DISTORTION: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n    case ANALYZER: return colors.analyzerModuleBG\n  }\n}\n\nexport default getModuleColor ","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.icon,\n    height: sizes.moduleView.icon,\n    padding: '.5vmin',\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n})\n\nexport default useJSS","import { stringIn } from \"../helpers/genFuncs\"\n\nexport function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return !stringIn(entry[0], idsToFilterOut)\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return stringIn(entry[0], idsToKeep)\n  }))\n}\n\nexport function ObjFrom2Arrays(keys: string[], entries: any[]) {\n  if (keys.length === entries.length) {\n    return Object.fromEntries(keys.map((id, index) => {\n      return [id, entries[index]]\n    }))\n  }\n  return {}\n}","import { RootState, ContainerModule, Modules, Connections } from \"./stateTSTypes\";\nimport { CONTAINER } from \"../audioModules/moduleTypes\";\nimport { keepOnlyIdsInObj } from \"./helpers\";\nimport { bothStringsIn } from \"../helpers/genFuncs\";\n\nfunction getChildrenRecursive(containerID: string, modules: Modules): string[] {\n  const childIDs = (modules[containerID] as ContainerModule).childModules\n  let containerChildIDs: string[] = []\n  for (const i in childIDs) {\n    if (modules[childIDs[i]].moduleType === CONTAINER) {\n      containerChildIDs = [...containerChildIDs, ...getChildrenRecursive(childIDs[i], modules) ]\n    }\n  }\n  return [ ...childIDs, ...containerChildIDs ]\n}\n\nexport function getContainerIDs(containerID: string, modules: Modules) {\n  return [ containerID, ...getChildrenRecursive(containerID, modules) ]\n}\n\nexport function getInternalConnectionIDs(connections: Connections, trimmedIDs: string[]) {\n  const allConnectionIDs = Object.keys(connections)\n  let connectionIDs: string[] = []\n  for (const i in allConnectionIDs) {\n    const { fromID, toID, actualOutputID, actualInputID } = connections[allConnectionIDs[i]]\n    const actualFromID = actualOutputID ? actualOutputID : fromID // actualIDs undefined if no containers involved in connection\n    const actualToID = actualInputID ? actualInputID : toID\n    if (bothStringsIn(actualFromID, actualToID, trimmedIDs)) {\n      connectionIDs = [...connectionIDs, allConnectionIDs[i]]\n    }\n  }\n  return connectionIDs\n}\n\nfunction getInternalConnections(connections: Connections, trimmedIDs: string[]) {\n  return keepOnlyIdsInObj(connections, getInternalConnectionIDs(connections, trimmedIDs)) as Connections\n}\n\nexport function getContainerModulesConnections(state: RootState, containerID: string) {\n  const trimmedIDs = [containerID, ...getChildrenRecursive(containerID, state.modules)]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    modules: trimmedModules,\n    connections: trimmedConnections,\n  }\n}\n\n\nexport function getContainerAsProject(state: RootState, containerID: string) {\n  const trimmedIDs = [ containerID, ...getChildrenRecursive(containerID, state.modules) ]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    baseContainerID: containerID,\n    modules: {\n      ...trimmedModules,\n      [containerID]: {\n        ...trimmedModules[containerID],\n        isBaseContainer: true,\n        parentID: null,\n      },\n    },\n    connections: trimmedConnections\n  }\n}","import {\n  ModuleType,\n  OSCILLATOR,\n  OUTPUT, GAIN,\n  AUTOFILTER,\n  KOMPRESSOR,\n  STEREO_PANNER,\n  SIGNAL_DELAY,\n  CONSTANT,\n  MEDIA_ELEMENT,\n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n} from './moduleTypes'\nimport makeConstantSource from './modules/constant'\nimport makeAutoFilter from './modules/autoFilter'\nimport makeOutput from './modules/output'\nimport makeStereoPanner from './modules/stereoPanner'\nimport makeSignalDelay from './modules/signalDelay'\nimport makeKompressor from './modules/kompressor'\nimport makeGain from './modules/gain'\nimport makeOscillator from './modules/oscillator'\nimport makeLineInput from './modules/lineInput'\nimport makeContainer from './modules/container'\nimport makeDistortion from './modules/distortion'\nimport makeAnalyzer from './modules/analyzer'\nimport makeEnvelopedTrigger from './modules/envelopedTrigger'\nimport makeWhiteNoise from './modules/whiteNoise'\n\n\nfunction restoreAudioModule(id: string, moduleType: ModuleType, prevControlData: ControlData) {\n  switch (moduleType) {\n    case OSCILLATOR:\n      const osc = makeOscillator(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: osc }\n      break\n    case GAIN:\n      const gain = makeGain(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: gain }\n      break\n    case OUTPUT:\n      const output = makeOutput(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: output }\n      break\n    case AUTOFILTER:\n      const filter = makeAutoFilter(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: filter }\n      break\n    case KOMPRESSOR:\n      const komp = makeKompressor(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: komp }\n      break\n    case STEREO_PANNER:\n      const panner = makeStereoPanner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: panner }\n      break;\n    case SIGNAL_DELAY:\n      const delay = makeSignalDelay(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: delay }\n      break\n    case CONSTANT:\n      const constant = makeConstantSource(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: constant }\n      break\n    case MEDIA_ELEMENT:\n      window.addAudioTag(id); window.reRenderAudioTags();\n      break;\n    case LINE_IN:\n      makeLineInput(id)\n      break;\n    case CONTAINER:\n      const container = makeContainer(id)\n      window.audioModules = { ...window.audioModules, [id]: container };\n      break\n    case DISTORTION:\n      const distortion = makeDistortion(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: distortion }\n      break\n    case ANALYZER:\n      const analyzer = makeAnalyzer(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: analyzer }\n      break\n    case ENVELOPED_TRIGGER:\n      const envelopedTrigger = makeEnvelopedTrigger(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n      break\n    case WHITE_NOISE:\n      const whiteNoise = makeWhiteNoise(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n      break\n  }\n}\n\n\nexport default restoreAudioModule","import { Connections, Modules } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect } from \"./connection\"\n\nfunction mergeExistingContainerAM(modules: Modules, connections: Connections) {\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        window.setTimeout(() => {\n          connect(\n            window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n            window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n            param,\n            outputIndex,\n            inputIndex,\n          )\n        }, 200)\n      }\n    })\n  }\n}\n\nexport default mergeExistingContainerAM","function genRandomID(index: number, totNumber: number) {\n  return `${totNumber}${index}${Math.floor(20480 * Math.random())}`\n}\n\nexport default genRandomID","import { Modules, Connections, ContainerModule, RootState } from \"./stateTSTypes\"\nimport { ObjFrom2Arrays } from \"./helpers\"\nimport { stringIn } from \"../helpers/genFuncs\"\nimport { CONTAINER } from \"../audioModules/moduleTypes\"\nimport { Dispatch } from 'redux'\nimport { mergeContainer } from './allActions'\nimport { getContainerModulesConnections } from \"./getContainerAsProject\"\nimport mergeExistingContainerAM from \"../audioModules/mergeExistingAM\"\nimport genRandomID from \"./idGen\"\n\n\nfunction getReplicatedState(modules: Modules, connections: Connections, totNumberModules: number, totNumberConnections: number) {\n  // this function returns a copy of modules and connections, but with all modIDs and connectionIDs replaced.\n  // this is done so no IDs conflict when the new modules/connections are merged into the active redux state\n  const modIDs = Object.keys(modules)\n  const connectionIDs = Object.keys(connections)\n  const modIDConverter = ObjFrom2Arrays(modIDs, modIDs.map((modID, index) => {\n    return genRandomID(index, totNumberModules)\n  }))\n  const connectionIDConverter = ObjFrom2Arrays(connectionIDs, connectionIDs.map((connectionID, index) => {\n    return genRandomID(index, totNumberConnections)\n  }))\n  const newModules = ObjFrom2Arrays(Object.values(modIDConverter), modIDs.map(modID => {\n    if (modules[modID].moduleType === CONTAINER) {\n      const containerMod = modules[modID] as ContainerModule\n      return {\n        ...containerMod,\n        id: modIDConverter[modID],\n        inputs: containerMod.inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: containerMod.outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        containerControls: containerMod.containerControls\n          .map(containerControl => {\n            return {\n              ...containerControl,\n              modID: modIDConverter[containerControl.modID],\n              actualModID: modIDConverter[containerControl.actualModID],\n            }\n          }),\n        childModules: containerMod.childModules.map(id => modIDConverter[id]),\n        parentID: modules[modID].parentID ? modIDConverter[modules[modID].parentID as string] : null,\n        connectionOutputs: modules[modID].connectionOutputs.map(outputID => modIDConverter[outputID]),\n        connectionInputs: modules[modID].connectionInputs.map(inputID => modIDConverter[inputID])\n      }\n    } else {\n      return {\n        ...modules[modID],\n        id: modIDConverter[modID],\n        inputs: modules[modID].inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: modules[modID].outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        parentID: modIDConverter[modules[modID].parentID as string]\n      }\n    }\n  }))\n  const newConnections = ObjFrom2Arrays(Object.values(connectionIDConverter), connectionIDs.map(connectionID => {\n    const connection = connections[connectionID]\n    return {\n      ...connection,\n      fromID: modIDConverter[connection.fromID],\n      toID: modIDConverter[connection.toID],\n      actualOutputID: connection.actualOutputID ? modIDConverter[connection.actualOutputID] : undefined,\n      actualInputID: connection.actualInputID ? modIDConverter[connection.actualInputID] : undefined,\n    }\n  }))\n  return {\n    modIDConverter,\n    newModules,\n    newConnections,\n  }\n}\n\nexport function performContainerMerge(dispatch: Dispatch, modulesToMerge: Modules, connectionsToMerge: Connections, totNumberModules: number, totNumberConnections: number, parentID: string, containerID: string, row: number, col: number) {\n  // this function makes a copy of state with above function, then restores all modules and connections,\n  // and dispatches an action to merge the copied state with the full project state \n  const { modIDConverter, newModules, newConnections } = getReplicatedState(modulesToMerge, connectionsToMerge, totNumberModules, totNumberConnections)\n  mergeExistingContainerAM(newModules, newConnections)\n  dispatch(mergeContainer(modIDConverter[containerID], newModules, newConnections, parentID, row, col))\n}\n\nexport function duplicateContainer(dispatch: Dispatch, state: RootState, parentID: string, containerID: string, row: number, col: number) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const totNumberModules = Object.keys(state.modules).length\n  const totNumberConnections = Object.keys(state.connections).length\n  performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n}\n\nexport function loadSavedContainer(dispatch: Dispatch, name: string, totNumberModules: number, totNumberConnections: number, parentID: string, row: number, col: number) {\n  window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n    performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n  })\n}\n\nexport function loadProjectAsContainer(dispatch: Dispatch, currState: RootState, parentID: string, row: number, col: number, stateToRestore: RootState) {\n  // used for loading in projects as containers within an existing project\n  const { modules, connections, baseContainerID } = stateToRestore\n  const totNumberModules = Object.keys(currState.modules).length\n  const totNumberConnections = Object.keys(currState.connections).length\n  const { newModules, newConnections } = getReplicatedState(modules, connections, totNumberModules, totNumberConnections)\n  const goodNewModules = {\n    ...newModules,\n    [baseContainerID]: {\n      ...newModules[baseContainerID],\n      isBaseContainer: false,\n      parentID,\n    }\n  }\n  dispatch(mergeContainer(baseContainerID, goodNewModules, newConnections, parentID, row, col))\n}","import { RootState } from \"./stateTSTypes\"\nimport genRandomID from './idGen'\nimport { Dispatch } from 'redux'\nimport { addModule } from './allActions'\nimport { ModuleType } from \"../audioModules/moduleTypes\"\nimport restoreAudioModule from \"../audioModules/restoreAudioModule\"\n\nfunction duplicateModule(dispatch: Dispatch, state: RootState, modID: string, row: number, col: number) {\n  const newID = genRandomID(0, Object.keys(state.modules).length)\n  const { name, moduleType, controlData, parentID, connectionInputs, connectionOutputs } = state.modules[modID]\n  restoreAudioModule(newID, moduleType as ModuleType, controlData)\n  dispatch(addModule(newID, name, moduleType as ModuleType, controlData, parentID as string, row, col, connectionInputs, connectionOutputs))\n}\n\nexport default duplicateModule","import { DragEvent } from 'react'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { Dispatch } from 'redux'\nimport { ModuleType, CONTAINER } from '../../audioModules/moduleTypes'\nimport { moveModule } from '../../redux/allActions'\nimport { duplicateContainer, performContainerMerge } from '../../redux/replicateContainer'\nimport { MOVE, COPY } from './DropSquare'\nimport { ADD_MODULE } from '../../redux/modules/moduleActionTypes'\nimport duplicateModule from '../../redux/replicateModule'\n\nexport const CONTAINER_RESTORE = 'CONTAINER_RESTORE'\n\nexport function onDrop(e: DragEvent<HTMLDivElement>, dispatch: Dispatch, state: RootState, row: number, col: number, setHL: (isHL: boolean) => void) {\n  const id = e.dataTransfer.getData('id')\n  const fc = state.modules[window.fillContainerID] as ContainerModule\n  const currentChildren = fc.childModules\n  const possiblyMod = state.modules[id]\n  const possiblyOccupyingID = isOccupied(row, col, currentChildren, state.modules)\n  if (!possiblyMod) {\n    if (!possiblyOccupyingID) {\n      const dropType = e.dataTransfer.getData('type')\n      const name = e.dataTransfer.getData('name')\n      switch(dropType) {\n        case ADD_MODULE:\n          const moduleType = e.dataTransfer.getData('moduleType') as ModuleType\n          window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n          break\n        case CONTAINER_RESTORE:\n          const totNumberModules = Object.keys(state.modules).length\n          const totNumberConnections = Object.keys(state.connections).length\n          window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n            performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n          })\n          break\n      }\n      setHL(false)\n    }\n  } else if (possiblyOccupyingID) {\n    const fromRow = e.dataTransfer.getData('fromRow')\n    const fromCol = e.dataTransfer.getData('fromCol')\n    setHL(false)\n    dispatch(moveModule(id, row, col))\n    dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n    window.setTimeout(window.refreshArcherContainer, 1)\n  } else {\n    const moduleDragType = e.dataTransfer.getData('type')\n    setHL(false)\n    switch (moduleDragType) {\n      case MOVE:\n        dispatch(moveModule(id, row, col))\n        break\n      case COPY:\n        if (state.modules[id].moduleType === CONTAINER) {\n          duplicateContainer(dispatch, state, window.fillContainerID, id, row, col)\n        } else {\n          duplicateModule(dispatch, state, id, row, col)\n        }\n        break\n    }\n    window.setTimeout(window.refreshArcherContainer, 1)\n  }\n}","import { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { onDrop } from './callbacks'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n// drag types\nexport const MOVE = 'MOVE'\nexport const COPY = 'COPY'\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const state = useSelector((state: RootState) => state)\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length >= 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        setHL(false)\n        /* if (e.dataTransfer.types.length >= 3) {\n          setHL(false)\n        } */\n      }}\n      onDrop={e => {\n        onDrop(e, dispatch, state, row, col, setHL)\n      }}\n      onContextMenu={e => {\n        e.preventDefault()\n        window.openAddModuleMenu(row, col)\n      }}\n      onPointerEnter={e => {\n        e.preventDefault()\n        setHL(true)\n      }}\n      onPointerLeave={e => {\n        e.preventDefault()\n        setHL(false)\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\nimport { bothStringsIn } from '../../helpers/genFuncs'\nimport { iconOnDrop, iconOnDragStart } from './callbacks'\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isLarge, setLarge] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  const reRenderIcon = () => { toReRender(!reRender) }\n\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    width: isLarge ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isLarge ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon\n  }\n\n  const iconStyle = Object.assign({}, archerElementStyle, {\n    borderStyle: isLarge ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n  })\n\n  const nameStyle: CSS.Properties = {\n    fontSize: sizes.text.small,\n  }\n  \n  /*\n  const nameSpring = useSpring({\n    fontSize: isLarge ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n  */\n\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <div \n        className={classes.Icon} \n        style={iconStyle}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          iconOnDrop(e, modules, mod, dispatch)\n        }}\n        draggable={!isLarge}\n        onDragStart={e => {\n          iconOnDragStart(e, mod)\n        }}\n        onClick={e => {\n          e.stopPropagation()\n          setLarge(!isLarge)\n          window.setTimeout(window.refreshArcherContainer, 0)\n        }}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openModuleContextMenu(e, mod.id)\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <div className={classes.IconName} style={nameStyle} onClick={e => {\n          if (isLarge) {\n            e.stopPropagation()\n            window.openModuleRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </div>\n        {\n        !isLarge ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          {mod.moduleType !== CONTAINER ? <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} /> : null}\n        </div>\n        }\n      </div>\n      <div className={classes.ArcherElement}\n        style={archerElementStyle}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.filter(connectionID => {\n              const { fromID, toID } = connections[connectionID]\n              return bothStringsIn(fromID, toID, (modules[window.fillContainerID] as ContainerModule).childModules)\n            }).map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { DragEvent } from 'react'\nimport { Modules, Module } from '../../redux/stateTSTypes'\nimport { MOVE, COPY } from '../DropSquare/DropSquare'\nimport { Dispatch } from 'redux'\nimport { moveModule } from '../../redux/allActions'\n\nexport function iconOnDrop(\n  e: DragEvent<HTMLDivElement>,\n  modules: Modules,\n  mod: Module,\n  dispatch: Dispatch,\n) {\n  e.stopPropagation()\n  const id = e.dataTransfer.getData('id')\n  const moduleDragType = e.dataTransfer.getData('type')\n  if (id) {\n    const possiblyMod = modules[id]\n    if (possiblyMod && moduleDragType === MOVE) {\n      const fromRow = e.dataTransfer.getData('fromRow')\n      const fromCol = e.dataTransfer.getData('fromCol')\n      dispatch(moveModule(id, mod.row, mod.col))\n      dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n      window.setTimeout(window.refreshArcherContainer, 100)\n    }\n  } else {\n    if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n      alert('mod cannot accept input')\n    } else {\n      const fromID = e.dataTransfer.getData('fromID')\n      if (fromID) {\n        window.openConnectionMenu(fromID, mod.id)\n      }\n    }\n  }\n}\n\nexport function iconOnDragStart(\n  e: DragEvent<HTMLDivElement>,\n  mod: Module\n) {\n  if (e.shiftKey) {\n    e.dataTransfer.setData('type', COPY)\n  } else {\n    e.dataTransfer.setData('type', MOVE)\n  }\n  e.dataTransfer.setData('id', mod.id)\n  e.dataTransfer.setData('fromRow', `${mod.row}`)\n  e.dataTransfer.setData('fromCol', `${mod.col}`)\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport Button from '../Button/Button'\n\ndeclare global {\n  interface Window { \n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${maxRow + 2}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${maxCol + 2}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openModuleRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <ArcherContainer ref={archerContainerRef}\n        svgContainerStyle={{ zIndex: -1 }}\n        strokeWidth={8}\n        arrowLength={0}\n      >\n        <div className={classes.Fill} style={gridStyle}>\n          {isEmpty ? <DropSquare row={0} col={0}/> :\n          range(0, maxRow + 2).map(row => {\n            return range(0, maxCol + 2).map(col => {\n              return (\n                <DropSquare\n                  key={`${row} ${col}`}\n                  row={row} \n                  col={col}\n                />\n              )\n            })\n          }).flat()}\n          {containerModule.childModules.map(moduleID => {\n            const mod = modules[moduleID]\n            return (\n              <ModuleViewIcon\n                key={mod.id}\n                mod={mod}\n                gridRow={mod.row + 1}\n                gridCol={mod.col + 1}\n              />\n            )\n          })}\n        </div>\n      </ArcherContainer>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: `${sizes.rightDrawer.width}px`,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: `${sizes.rightDrawer.width}px`,\n    height: 'calc(100% - 60px)',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    //overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: `${sizes.rightDrawer.width}px`,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n\n  SDBSaveList: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'scroll',\n    height: '60%',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { RootState, Connections } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect, disconnect } from \"./connection\"\n\nfunction connectLate(numTries: number, fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, actualOutputID?: string, actualInputID?: string) {\n  if (numTries > 10) {\n    alert('restore failed')\n  } else {\n    window.setTimeout(() => {\n      if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(numTries + 1, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    }, 500)\n  }\n}\n\nfunction restoreAMFromState(prevConnections: Connections, { modules, connections }: RootState) {\n  Object.keys(prevConnections).forEach(connectionID => {\n    const { fromID, toID, param, outputIndex, actualOutputID, actualInputID } = prevConnections[connectionID]\n    if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n      disconnect(\n        window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n        window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n        param,\n        outputIndex, // may need to figure out how to pass in inputIndex\n      )\n    }\n  })\n  window.numberRestores++\n  window.audioModules = {}\n  window.audioTags = {}\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(0, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    })\n  }\n}\n\nexport default restoreAMFromState","import React, { useState, useEffect } from 'react'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { restoreFromState } from '../../redux/allActions'\nimport restoreAMFromState from '../../audioModules/restoreAMFromState'\nimport { colors } from '../../theme/theme'\nimport Button from '../Button/Button'\nimport useJSS from './style'\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\nconst buttonStyle = {\n  backgroundColor: 'transparent'\n}\n\nfunction SpaceDBMenu() {\n  const [ saveList, setSaveList ] = useState<string[]>([])\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  useEffect(() => {\n    window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n  }, [])\n  const classes = useJSS()\n  return (\n    <div style={{  }}>\n      <Button style={{ backgroundColor: colors.sdbSaveButton }}\n        onClick={() => {\n          window.openSpaceDBProjectSaveMenu(saveList, () => {\n            window.setTimeout(() => {\n              window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n            }, 1000)\n          })\n        }}\n      >\n        save project\n      </Button>\n      <div className={classes.SDBSaveList}>\n        {saveList.map((saveName, index) => {\n          return (\n            <Button style={buttonStyle}\n              key={index}\n              onClick={() => {\n                window.projectSaveService.get(saveName).then((savedState: RootState) => {\n                  restoreAMFromState(connections, savedState)\n                  dispatch(restoreFromState(savedState))\n                })\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault()\n                e.persist()\n                window.openSDBProjectContextMenu(e, saveName, setSaveList)\n              }}\n            >\n              {saveName}\n            </Button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBMenu","import React, { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\n\nfunction BlankProjectButton() {\n  const numMods = useSelector((state: RootState) => Object.keys(state.modules).length)\n  return (\n    <Fragment>\n      {numMods < 2 ? null :\n        <Button\n          onClick={() => {\n            window.openConfirmBlankProjectMenu()\n          }}\n        >blank project</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default BlankProjectButton","export async function saveJSONToFileHandle(fileHandle: any, json: any) {\n  const writable = await fileHandle.createWritable()\n  await writable.write(JSON.stringify(json))\n  await writable.close()\n}\n\nexport async function loadJSONFromPickedFile(onFileHandle?: (fileHandle: any) => void) {\n  const [ fileHandle ] = await window.showOpenFilePicker()\n  if (fileHandle) {\n    if (onFileHandle) onFileHandle(fileHandle)\n    const file = await fileHandle.getFile()\n    const data = await file.text()\n    return JSON.parse(data)\n  } else {\n    return null\n  }\n}\n\nexport async function saveJSONToChosenFile(json: any, onSaved?: () => void) {\n  window.saveFileHandle = await window.showSaveFilePicker({\n    types: [\n      {\n        description: 'space machine project',\n        accept: {\n          'example/*': ['.sm'],\n        },\n      }\n    ]\n  })\n  await saveJSONToFileHandle(window.saveFileHandle, json)\n  if (onSaved) onSaved()\n} \n\nexport function getTrimmedFileName(fileHandle: any) {\n  const name = fileHandle.name\n  return name.slice(0, name.length - 3)\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { loadJSONFromPickedFile } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction OpenFileButton({ reRender, state }: Props) {\n  const dispatch = useDispatch()\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        const newState = await loadJSONFromPickedFile(fileHandle => {\n          window.saveFileHandle = fileHandle\n        })\n        if (newState) {\n          restoreAMFromState(state.connections, newState)\n          dispatch(restoreFromState(newState))\n          reRender()\n        } else {\n          window.flashNotification('rgba(1, 1, 1, .4)', 'no file selected')\n        }\n      }}\n    >open</Button>\n  )\n}\n\nexport default OpenFileButton","import React from 'react'\nimport { getTrimmedFileName, saveJSONToChosenFile } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction SaveAsNewButton({ state, reRender }: Props) {\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        saveJSONToChosenFile(state, () => {\n          reRender()\n          window.flashNotification(colors.success, `${getTrimmedFileName(window.saveFileHandle)} saved`)\n        })\n      }}\n    >save as</Button>\n  )\n}\n\nexport default SaveAsNewButton","import React, { Fragment } from 'react'\nimport { getTrimmedFileName, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n}\n\nfunction SaveCurrentButton({ state }: Props) {\n  return (\n    <Fragment>\n      {!window.saveFileHandle ? \n        <Button fontSize={sizes.text.medium} \n          notClickable={true}\n          style={{\n            backgroundColor: 'transparent',\n            color: colors.disabled,\n          }}\n        > no file open </Button>\n      :\n        <Button fontSize={sizes.text.medium}\n          onClick={async () => {\n            await saveJSONToFileHandle(window.saveFileHandle, state)\n            window.flashNotification(colors.success, `${getTrimmedFileName(window.saveFileHandle)} saved`)\n          }}\n        >{`save ${getTrimmedFileName(window.saveFileHandle)}`}</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default SaveCurrentButton","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\nimport BlankProjectButton from './BlankProjectButton'\nimport OpenFileButton from './OpenFileButton'\nimport SaveAsNewButton from './SaveAsNewButton'\nimport SaveCurrentButton from './SaveCurrentButton'\n\ndeclare global {\n  interface Window {\n    showOpenFilePicker: any\n    showSaveFilePicker: any\n    saveDirectoryHandle?: any\n    saveFileHandle?: any\n    reRenderFileMenu: () => void\n  }\n}\n\nfunction FileMenu() {\n  const state = useSelector((state: RootState) => state)\n  const [, toReRender] = useState({})\n  window.reRenderFileMenu = () => { toReRender({}) }\n  return (\n    <FlexRow alignItems='center' flexWrap='wrap' style={{ width: '100%' }}>\n      <OpenFileButton state={state} reRender={window.reRenderFileMenu} />\n      <SaveAsNewButton state={state} reRender={window.reRenderFileMenu}/>\n      <SaveCurrentButton state={state} />\n      <BlankProjectButton />\n    </FlexRow>\n  )\n}\n\nexport default FileMenu","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { clamp } from '../../helpers/genFuncs'\nimport SpaceDBMenu from './SpaceDBMenu'\nimport FileMenu from './FileMenu/FileMenu'\n\nconst SPACEDB_PROJECTS = 'spaceDB projects'\nconst FILE = 'file'\n\nlet drawerWidth = `${sizes.rightDrawer.width}`\n\nconst addPx = (arg: string) => `${arg}px`\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(window.usingElectron ? SPACEDB_PROJECTS : FILE)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  }, [])\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}`\n            if (drawerRef.current) { drawerRef.current.style.width = addPx(drawerWidth) }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = addPx(drawerWidth) }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = addPx(drawerWidth) }\n            if (toggleRef.current) { toggleRef.current.style.right = addPx(drawerWidth) }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          {!window.usingElectron ? null : \n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={SPACEDB_PROJECTS}\n            onClick={() => { setSR(SPACEDB_PROJECTS) }}\n            selectedRoute={selectedRoute}\n          />}\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={FILE}\n            onClick={() => { setSR(FILE) }}\n            selectedRoute={selectedRoute}\n          />\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SPACEDB_PROJECTS\n            ?\n            <SpaceDBMenu />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n    numberRestores: number\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\nwindow.numberRestores = 0\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id + window.numberRestores}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: colors.centerMenuBackground,\n    backdropFilter: 'blur(5px)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: zIndex.centerMenu,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'absolute',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '1.2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: `.1em solid ${colors.centerMenuBorder}`,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { animated } from 'react-spring'\n\ninterface Props {\n  isClosed?: boolean\n  className?: string\n  style?: CSS.Properties\n  headerClassName?: string\n  headerStyle?: CSS.Properties\n  children: React.ReactNode\n  header?: string\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n}\n\nfunction CenterMenu({ isClosed, className, style, headerClassName, headerStyle, children, header, onClose, bounderStyle }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {isClosed ? null :\n      <animated.div className={classes.CenterMenuBounder}\n        onPointerDown={e => {\n          e.stopPropagation()\n          onClose()\n        }}\n        style={bounderStyle}\n      >\n        <div className={className ? `${classes.CenterMenu} ${className}` : classes.CenterMenu}\n          onPointerDown={(e) => {e.stopPropagation()}}\n          style={style}\n        >\n          {!header ? null : \n          <div className={headerClassName ? `${classes.Header} ${headerClassName}` : classes.Header}\n            style={headerStyle}\n          >\n            {header}\n          </div>}\n          {children}\n        </div>\n      </animated.div>}\n    </Fragment>\n  )\n}\n\nexport default CenterMenu","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  AutoPlacingGrid: {\n    display: 'grid',\n    gridTemplateRows: ({ numRows }) => `repeat(${numRows}, auto)`,\n    gridTemplateColumns: ({ numCols }) => `repeat(${numCols}, auto)`,\n    gridAutoFlow: ({ direction }) => direction,\n    gridAutoRows: ({ numRows }) => numRows ? null : 'auto',\n    gridAutoColumns: ({ numCols }) => numCols ? null : 'auto',\n    gap: ({ gap }) => gap,\n    justifyItems: 'center',\n  },\n})\n\nexport default useJSS","import React, { ReactNode } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children?: ReactNode\n  className?: string\n  style?: CSS.Properties\n  direction: 'row' | 'column' | 'row dense' | 'column dense'\n  numRows?: number | string\n  numCols?: number | string\n  gap?: string\n}\n\nfunction AutoPlacingGrid({ children, className, style, numRows, numCols, direction, gap }: Props) {\n  const classes = useJSS({ numRows, numCols, direction, gap })\n  return (\n    <div className={className ? `${classes.AutoPlacingGrid} ${className}` : classes.AutoPlacingGrid}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default AutoPlacingGrid","import { Module, Connections } from \"../../../../redux/stateTSTypes\";\n\nexport function connectionExists(connections: Connections, fromMod: Module, actualToID: string, newParam = '') {\n  for(var i = 0; i < fromMod.outputs.length; i++) {\n    const { actualInputID, param } = connections[fromMod.outputs[i]]\n    if (actualInputID === actualToID && newParam === param) {\n      return true\n    }\n  }\n  return false\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Module: {\n    borderRadius: '1.5vmin',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    flexShrink: 1,\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n    padding: '.2em .5em',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  ConnectorBounder: {\n    alignItems: 'center',\n  },\n\n  Name: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.medium,\n    marginBottom: '.2em',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ConnectorName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ParamName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.moduleInput,\n    borderWidth: '.25em'\n  },\n\n  SmallConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.smallSize,\n    height: sizes.connector.smallSize,\n    borderRadius: sizes.connector.smallBorderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.paramInput,\n    borderWidth: '.2em',\n  }\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from '../../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../../audioModules/moduleTypes'\nimport { addConnection } from '../../../../redux/allActions'\nimport { Module, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { colors } from '../../../../theme/theme'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../../Flex/FlexCol'\nimport FlexRow from '../../../Flex/FlexRow'\nimport { connectionExists } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // of the original modules that made the connection\n  toID: string\n  isFromContainer: boolean\n  isToContainer: boolean\n  onClose: () => void\n}\n\nfunction InModule({ modID, startsBig, fromID, toID, isFromContainer, isToContainer, onClose }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const audioMod = window.audioModules[modID]\n  const am = window.audioModules\n  const [isBig, setBig] = useState(startsBig)\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.Module} style={{ backgroundColor: getModuleColor(mod.moduleType) }}>\n      <div className={classes.Name}\n        style={{ marginBottom: '.2em' }}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <FlexRow style={{ justifyContent: 'center' }}>\n        <FlexCol style={{ marginRight: audioMod.connectingParamIDs.length !== 0 ?'.4em' : '0em' }}>\n          {!isBig ? null : mod.connectionInputs.map((input, index) => {\n            return (\n              <FlexCol key={index}>\n                <div className={classes.ConnectionReciever}\n                  onDragOver={e => { e.preventDefault() }}\n                  onDrop={e => {\n                    e.preventDefault()\n                    const actualFromID = e.dataTransfer.getData('actualFromID')\n                    const fromMod = modules[actualFromID]\n                    const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                    if (!connectionExists(connections, fromMod as Module, modID)) {\n                      connect(\n                        am[actualFromID] as ConnectingAudioModule,\n                        am[modID] as ConnectingAudioModule,\n                        '',\n                        outputIndex,\n                        index,\n                      )\n                      dispatch(addConnection(\n                        fromID,\n                        toID,\n                        '',\n                        outputIndex,\n                        index,\n                        isFromContainer ? actualFromID : undefined,\n                        isToContainer ? modID : undefined,\n                      ))\n                      window.flashNotification(colors.success, 'connection created')\n                      onClose()\n                    } else {\n                      alert('modules already connected')\n                    }\n                  }}\n                />\n                {mod.connectionInputs.length !== 1 ? input : null}\n              </FlexCol>\n            )\n          })}\n        </FlexCol>\n        {audioMod.connectingParamIDs.length === 0 ? null : \n        <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n          {!isBig ? null : audioMod.connectingParamIDs.map((paramID, index) => {\n            return (\n              <FlexCol style={{ alignItems: 'center' }} key={index}\n                onDragOver={e => { e.preventDefault() }}\n                onDrop={e => {\n                  e.preventDefault()\n                  const actualFromID = e.dataTransfer.getData('actualFromID')\n                  const fromMod = modules[actualFromID]\n                  const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                  if (!connectionExists(connections, fromMod as Module, modID, paramID)) {\n                    connect(\n                      am[actualFromID] as ConnectingAudioModule,\n                      am[modID] as ConnectingAudioModule,\n                      paramID,\n                      outputIndex,\n                      0,\n                    )\n                    dispatch(addConnection(\n                      fromID,\n                      toID,\n                      paramID,\n                      outputIndex,\n                      0,\n                      isFromContainer ? actualFromID : undefined,\n                      isToContainer ? modID : undefined,\n                    ))\n                    window.flashNotification(colors.success, 'connection created')\n                    onClose()\n                  } else {\n                    alert('modules already connected')\n                  }\n                }}\n              >\n                <div className={classes.SmallConnectionReciever}/>\n                <div className={classes.ParamName}>{paramID}</div>\n              </FlexCol>\n            )\n          })}\n        </AutoPlacingGrid>}\n      </FlexRow>\n    </div>\n  )\n}\n\nexport default InModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport InModule from './InModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // original fromID of connection\n  toID: string\n  isFromContainer: boolean\n  onClose: () => void\n  isBase: boolean\n}\n\nfunction ContainerInModule({ modID, startsBig, fromID, toID, isFromContainer, onClose, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modInputs = (mod as ContainerModule).connectionInputs\n  const childrenStartBig = modInputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{\n        backgroundColor: getModuleColor(CONTAINER),\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modInputs.map((inputModID, index) => {\n          const inMod = modules[inputModID]\n          if(inMod.moduleType === CONTAINER) {\n            return (\n              <ContainerInModule key={index} \n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                isFromContainer={isFromContainer}\n                onClose={onClose}\n                isBase={false}\n                startsBig={childrenStartBig}\n              />\n            )\n          } else {\n            return (\n              <InModule key={index}\n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                isFromContainer={true}\n                isToContainer={true}\n                onClose={onClose}\n                startsBig={childrenStartBig}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerInModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../../Flex/FlexCol'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean\n}\n\n// only rendered for base modules\nfunction OutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        overflow: 'visible',\n        marginRight: isBase ? '1em' : '0em',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      {!isBig ? null :\n      mod.connectionOutputs.length > 1 ?\n      <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n        {mod.connectionOutputs.map((output, index) => {\n          return (\n            <FlexCol className={classes.ConnectorBounder} key={index}>\n              <div className={classes.IconConnector}\n                draggable={true}\n                onDragStart={e => {\n                  e.dataTransfer.setData('actualFromID', modID)\n                  e.dataTransfer.setData('outputIndex', index.toString())\n                }}\n              />\n              {mod.connectionOutputs.length === 1 ? null : \n                <div className={classes.ConnectorName}>{output}</div>\n              }\n            </FlexCol>\n          )\n        })}\n      </AutoPlacingGrid>\n      :\n      <FlexCol className={classes.ConnectorBounder}>\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={e => {\n            e.dataTransfer.setData('actualFromID', modID)\n            e.dataTransfer.setData('outputIndex', '0')\n          }}\n        />\n      </FlexCol>\n      }\n    </div>\n  )\n}\n\nexport default OutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport OutModule from './OutModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean // is the lowest one in the tree for connection\n}\n\nexport type OutModType = {\n  setBig: (isBig: boolean) => void\n}\n\nfunction ContainerOutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modOutputs = (mod as ContainerModule).connectionOutputs\n  const childrenStartBig = modOutputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        marginRight: isBase ? '1em' : '0em',\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}>\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modOutputs.map((outputModID, index) => {\n          const outMod = modules[outputModID]\n          if (outMod.moduleType === CONTAINER) {\n            return (\n              <ContainerOutModule key={index}\n                modID={outputModID} \n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          } else {\n            return (\n              <OutModule key={index} \n                modID={outputModID}\n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerOutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { AnyModule, RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport ContainerInModule from './Modules/ContainerInModule'\nimport ContainerOutModule from './Modules/ContainerOutModule'\nimport InModule from './Modules/InModule'\nimport OutModule from './Modules/OutModule'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (fromID: string, toID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, fromMod?: AnyModule, toMod?: AnyModule) {\n  return {\n    isOpen,\n    fromMod,\n    toMod,\n  }\n}\n\nfunction ConnectionMenu() {\n  const [{ isOpen, fromMod, toMod }, setData] = useState(makeData(false))\n  const { modules } = useSelector((state: RootState) => state)\n  window.openConnectionMenu = (fromID, toID) => {\n    setData(makeData(true, modules[fromID], modules[toID]))\n  }\n  const onClose = () => {\n    setData(makeData(false)) \n  }\n  //const classes = useJSS()\n  return (\n    <CenterMenu header='add connection' isClosed={!isOpen} onClose={onClose}>\n      <FlexRow>\n        {fromMod?.moduleType === CONTAINER ? \n          <ContainerOutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        :\n          <OutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        }\n        {toMod?.moduleType === CONTAINER ?\n          <ContainerInModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            isFromContainer={fromMod?.moduleType === CONTAINER}\n            onClose={onClose}\n            isBase={true}\n          />\n        :\n          <InModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            isFromContainer={fromMod?.moduleType === CONTAINER}\n            isToContainer={false}\n            onClose={onClose}\n          />\n        }\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openKnobRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, controlID = '', onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    controlID,\n    onChangeSubmit,\n  }\n}\n\nfunction KnobRangeSetMenu() {\n  const [{ isOpen, controlID, onChangeSubmit }, setData] = useState(makeData(false))\n  const modules = useSelector((state: RootState) => state.modules)\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(0)\n  const [maxRange, setMaxRange] = useState<[number, number] | undefined>(undefined)\n  window.openKnobRangeSetMenu = (modID, controlID, onChangeSubmit) => {\n    const { range, maxRange } = modules[modID].controlData[controlID]\n    setData(makeData(\n      true, \n      controlID, \n      onChangeSubmit\n    ))\n    setMin((range as [number, number])[0])\n    setMax((range as [number, number])[1])\n    setMaxRange(maxRange)\n  }\n  const onClose = () => { \n    setData(makeData(false))\n  }\n  const classes = useJSS()\n  return (\n    <CenterMenu isClosed={!isOpen} header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          if (maxRange) {\n            if (inRange(min, maxRange as [number, number]) && inRange(max, maxRange as [number, number])) {\n              if (max > min) {\n                onChangeSubmit([min, max])\n                onClose()\n              } else {\n                alert('min must be less than max')\n              }\n            } else {\n              alert('a value is not within maximum range bounds')\n            }\n          } else {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          }\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default KnobRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '1em',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.medium,\n    textAlign: 'center',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState, useRef } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\n\ndeclare global {\n  interface Window {\n    openSpaceDBProjectSaveMenu: (saveList: string[], onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveList: string[] = [], preOnClose = () => { }) {\n  return {\n    isOpen,\n    saveList,\n    preOnClose,\n  }\n}\n\nfunction SpaceDBProjectSaveMenu() {\n  const [{ isOpen, saveList, preOnClose }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const { baseContainerID, modules } = state\n  const [saveName, setSaveName] = useState('')\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  window.openSpaceDBProjectSaveMenu = (saveList, onClose) => {\n    setSaveName(modules[baseContainerID].name)\n    setConfirmSaveData({ isOpen: false, message: '' })\n    setData(makeData(true, saveList, onClose)) \n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save project'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <FlexRow style={{ alignItems: 'center' }}>\n        <input className={classes.CenterMenuInput}\n          value={saveName}\n          placeholder={modules[baseContainerID].name}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                if (stringIn(saveName, saveList)) {\n                  setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n                } else {\n                  window.projectSaveService.create({\n                    saveName,\n                    state\n                  }).then((res: any) => {\n                    if (res) {\n                      window.flashNotification('green', 'project saved')\n                    }\n                  })\n                  onClose()\n                }\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          ref={inputRef}\n          autoFocus\n        />\n        <Button\n          onPointerDown={e => e.preventDefault()}\n          onClick={e => {\n            e.preventDefault()\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'save already exists. do you want to replace it?' })\n            } else {\n              window.projectSaveService.create({\n                saveName,\n                state\n              }).then((res: any) => {\n                if (res) {\n                  window.flashNotification('green', 'project saved')\n                }\n              })\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n      </FlexRow>\n      {!confirmSaveData.isOpen ? null\n        :\n        <FlexCol>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <FlexRow style={{ justifyContent: 'center' }}>\n            <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n              onClick={() => {\n                inputRef.current?.focus()\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                window.projectSaveService.update(saveName, state).then((res: any) => {\n                  if (res) {\n                    window.flashNotification('green', 'project updated')\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </FlexRow>\n        </FlexCol>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBProjectSaveMenu","import React, { useState } from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openConfirmDeleteMenu: (saveName: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveName = '', onClose = () => { }) {\n  return {\n    isOpen,\n    saveName,\n    preOnClose: onClose\n  }\n}\n\nfunction ConfirmDeleteMenu() {\n  const [{ isOpen, saveName, preOnClose }, setData] = useState(makeData(false))\n  window.openConfirmDeleteMenu = (saveName, onClose) => { setData(makeData(true, saveName, onClose)) }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  return (\n    <CenterMenu header={`are you sure you want to delete ${saveName}?`}\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n          onClick={() => {\n            onClose()\n          }}\n        >no</Button>\n        <Button style={{ backgroundColor: colors.confirmButton }}\n          onClick={() => {\n            window.projectSaveService.remove(saveName)\n            onClose()\n          }}\n        >yes</Button>\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmDeleteMenu","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openFileSaveMenu: () => void\n    showDirectoryPicker: any\n  }\n}\n\nfunction FileSaveMenu() {\n  const [isOpen, setOpen] = useState(false)\n  const [saveName, setSaveName] = useState('')\n  window.openFileSaveMenu = () => {\n    setSaveName(state.modules[state.baseContainerID].name)\n    setOpen(true)\n  }\n  const onClose = () => { setOpen(false) }\n  const state = useSelector((state: RootState) => state)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save project as file'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <input className={classes.CenterMenuInput}\n        placeholder={state.modules[state.baseContainerID].name}\n        value={saveName}\n        onChange={e => {\n          setSaveName(e.target.value)\n        }}\n      />\n      <Button\n        onClick={async () => {\n          if (!window.saveDirectoryHandle) {\n            window.saveDirectoryHandle = await window.showDirectoryPicker()\n          }\n          const fileHandle = await window.saveDirectoryHandle.getFileHandle(`${saveName}.sm`, { create: true })\n          const writable = await fileHandle.createWritable()\n          await writable.write(JSON.stringify(state))\n          await writable.close()\n        }}\n      >choose folder and save</Button>\n    </CenterMenu>\n  )\n}\n\nexport default FileSaveMenu","import { stringIn } from \"../../../helpers/genFuncs\"\nimport { getContainerModulesConnections } from \"../../../redux/getContainerAsProject\"\nimport { RootState } from \"../../../redux/stateTSTypes\"\n\nexport function getFileDirectory(badDir: string) {\n  for (var i = badDir.length; i > 0; i--) {\n    if (badDir[i] === '/') {\n      return badDir.slice(0, i + 1)\n    }\n  }\n  return badDir\n}\n\nexport function confirmContainerSaveName(setConfirmSaveData: (arg: any) => void, containerID: string, name: string, saveList: string[], state: RootState, onClose: () => void) {\n  if (!stringIn(name, saveList)) {\n    const { modules, connections } = getContainerModulesConnections(state, containerID)\n    window.containerSaveService.create({\n      saveName: name,\n      containerID,\n      modules,\n      connections,\n    }).then((success: string) => {\n      if (success) {\n        window.flashNotification('green', 'module saved to spaceDB')\n        window.refreshSpaceDBModules()\n      }\n    })\n    onClose()\n  } else {\n    setConfirmSaveData({ isOpen: true, message: 'module with this name already exists. would you like to update it?' })\n  }\n}","import React, { useState, useRef, Fragment } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { getContainerModulesConnections } from '../../../redux/getContainerAsProject'\nimport { sizes, colors } from '../../../theme/theme'\nimport { confirmContainerSaveName } from './helpers'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openSpaceDBContainerSaveMenu: (saveList: string[], id: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, id = '', saveList: string[] = [], onClose = () => {}, initName = '') {\n  return {\n    isOpen,\n    id,\n    saveList,\n    preOnClose: onClose,\n    initName\n  }\n}\n\nfunction SpaceDBContainerSaveMenu() {\n  const [{ isOpen, id, saveList, preOnClose, initName }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const [name, setName] = useState('')\n  window.openSpaceDBContainerSaveMenu = (saveList, id, onClose) => {\n    setData(makeData(true, id, saveList, onClose, state.modules[id].name))\n    setName(state.modules[id].name)\n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save container module'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <input className={classes.CenterMenuInput}\n        value={name}\n        placeholder={initName}\n        ref={inputRef}\n        onChange={e => {\n          setName(e.target.value)\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': // enter\n              confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n              break\n            case 'Escape': // escape\n              onClose()\n              break\n          }\n        }}\n        autoFocus\n      />\n      <Button\n        onClick={() => {\n          confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n        }}\n      >confirm</Button>\n      {\n        !confirmSaveData.isOpen ? null :\n        <Fragment>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <div style={{ display: 'flex' }}>\n            <Button style={{ backgroundColor: colors.denyButton }}\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n                }\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                const { modules, connections } = getContainerModulesConnections(state, id)\n                window.containerSaveService.update(name, {\n                  saveName: name,\n                  containerID: id,\n                  modules,\n                  connections,\n                }).then((success: string) => {\n                  if (success) {\n                    window.flashNotification('green', 'module updated')\n                    window.refreshSpaceDBModules()\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </div>\n        </Fragment>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBContainerSaveMenu","import React, { useState } from 'react'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { sizes, colors } from '../../../theme/theme'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openAnalyzerRangeSetMenu: (range: Range, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, range: Range = [0, 0], onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    range,\n    onChangeSubmit,\n  }\n}\n\nfunction AnalyzerRangeSetMenu() {\n  const [{ isOpen, range, onChangeSubmit }, setData] = useState(makeData(false))\n  window.openAnalyzerRangeSetMenu = (range, onChangeSubmit) => { setData(makeData(true, range, onChangeSubmit)) }\n  const onClose = () => { setData(makeData(false)) }\n  const classes = useJSS()\n  const [min, setMin] = useState(range[0])\n  const [max, setMax] = useState(range[1])\n  return (\n    <CenterMenu isClosed={!isOpen} header='set analyzer range' onClose={onClose}>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMax(Number(e.target.value))\n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          onChangeSubmit([min, max])\n          onClose()\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default AnalyzerRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport useJSS from './style'\n\ninterface Props {\n  isOpen: boolean\n  header: string\n  onSubmit: (newName: string) => void\n  placeholder: string\n  onClose: () => void\n}\n\nfunction RenameMenu({ isOpen, header, onSubmit, placeholder, onClose }: Props) {\n  const classes = useJSS()\n  const [val, setVal] = useState('')\n  const [isTooShort, setIsTooShort] = useState(false)\n  function trySubmit() {\n    if (val.length > 0) {\n      onSubmit(val)\n      onClose()\n      setVal('')\n    } else {\n      setIsTooShort(true)\n    }\n  }\n  return (\n    <CenterMenu isClosed={!isOpen} header={header} onClose={() => { onClose(); setVal('') }}>\n      <div className={classes.CMInputBounder}>\n        <input className={classes.CenterMenuInput}\n          placeholder={placeholder}\n          value={val}\n          onChange={e => {\n            setVal(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                trySubmit()\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          autoFocus\n        />\n        <Button\n          onClick={() => {\n            trySubmit()\n          }}\n        >\n          confirm\n        </Button>\n        {\n          !isTooShort ? null :\n          <div className={classes.Error}>\n            please enter a name\n          </div>\n        }\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\nimport RenameMenu from './RenameMenu'\n\ndeclare global {\n  interface Window {\n    openModuleRenameMenu: (toRenameID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, toRenameID = '') {\n  return {\n    isOpen,\n    toRenameID,\n  }\n}\n\nfunction RenameModuleMenu() {\n  const [{ isOpen, toRenameID }, setData] = useState(makeData(false))\n  window.openModuleRenameMenu = toRenameID => { setData(makeData(true, toRenameID)) }\n  const onClose = () => { setData(makeData(false)) }\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename module' \n      isOpen={isOpen}\n      onSubmit={newName => {\n        dispatch(renameModule(toRenameID, newName))\n      }}\n      placeholder={modules[toRenameID]?.name}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameModuleMenu","import React, { useState } from 'react'\nimport RenameMenu from './RenameMenu'\nimport { useDispatch } from 'react-redux'\nimport { renameContainerControl } from '../../../redux/allActions'\nimport { ContainerControl } from '../../../redux/stateTSTypes'\n\ndeclare global {\n  interface Window {\n    openControlRenameMenu: (placeholder: string, parentModID: string, containerControl: ContainerControl) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, placeholder = '', parentModID = '', containerControl?: ContainerControl) {\n  return {\n    isOpen,\n    placeholder,\n    containerControl,\n    parentModID\n  }\n}\n\nfunction RenameControlMenu() {\n  const [{ isOpen, placeholder, containerControl, parentModID }, setData] = useState(makeData(false))\n  window.openControlRenameMenu = (placeholder, parentModID, containerControl) => { setData(makeData(true, placeholder, parentModID, containerControl)) }\n  const onClose = () => setData(makeData(false))\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename control'\n      isOpen={isOpen}\n      onSubmit={newName => {\n        const { modID, controlID, actualModID } = containerControl as ContainerControl\n        dispatch(renameContainerControl(newName, parentModID, modID, controlID, actualModID))\n        window.flashNotification('green', 'control passthrough renamed')\n      }}\n      placeholder={placeholder}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameControlMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  LeftBar: {\n    width: sizes.addModuleMenu.leftBarWidth,\n    //height: sizes.addModuleMenu.height,\n    backgroundColor: colors.addModuleLeftBarBG,\n  },\n\n  LeftBarButton: {\n    borderRadius: '0em',\n    margin: '0em',\n    backgroundColor: 'transparent',\n    //borderStyle: 'none solid none none',\n    borderColor: 'transparent',\n    borderWidth: '1px',\n    '&:hover': {\n      borderColor: 'transparent',\n    }\n  },\n\n  RouterBounder: {\n    alignItems: 'center'\n  },\n\n  IconRouter: {\n    width: sizes.addModuleMenu.iconRouterWidth,\n    height: sizes.addModuleMenu.height,\n    overflowY: 'scroll',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridAutoRows: '20vmin',\n    gridAutoFlow: 'row',\n    placeItems: 'center',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  SearchBar: {\n    width: '80%',\n    height: '1.5em',\n    marginTop: '1.3em',\n    marginBottom: '.4em',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.addModuleSearchBarBG,\n    color: colors.addModuleSearchBarText,\n    textAlign: 'center',\n    borderStyle: 'none',\n    borderRadius: '.2em',\n    '&:focus': {\n      outline: 'none',\n    }\n  },\n\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\nimport { addModuleMenuGroups, SPACEDB_MODULES } from './AddModuleMenu'\nimport useJSS from './style'\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n}\n\nfunction LeftBar({ selectedGroup, setSG }: Props) {\n  const classes = useJSS()\n  return (\n    <FlexCol className={classes.LeftBar}>\n      {addModuleMenuGroups.filter(group => window.usingElectron || group !== SPACEDB_MODULES)\n      .map((group, index) => {\n        const isHL = group === selectedGroup\n        return (\n          <Button className={classes.LeftBarButton}\n            key={index}\n            style={{\n              color: isHL ? colors.selectedText : 'white',\n            }}\n            onClick={() => {\n              setSG(group)\n            }}\n          >\n            { group }\n          </Button>\n        )\n      })}\n    </FlexCol>\n  )\n}\n\nexport default LeftBar","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ModuleType } from '../../../../audioModules/moduleTypes'\nimport genRandomID from '../../../../redux/idGen'\nimport { ADD_MODULE } from '../../../../redux/modules/moduleActionTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { colors } from '../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  fullName: string\n  shortName: string\n  moduleType: string\n  isFocussed?: boolean\n  totNumModules: number\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcon({ fullName, shortName, moduleType, isFocussed, totNumModules, row, col, onClose }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.addModule(\n      genRandomID(0, totNumModules),\n      shortName,\n      window.fillContainerID,\n      moduleType as ModuleType,\n      dispatch,\n      row, col\n    )\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(moduleType),\n          borderColor: isFocussed ? 'white' : colors.grey\n        }}\n        onFocus={e => { \n          e.preventDefault()\n          console.log('focussing 2')\n        }}\n        onClick={addModule}\n        draggable={true}\n        onDragStart={event => { // but the div disappears making this not work\n          event.persist()\n          event.dataTransfer.setData('type', ADD_MODULE)\n          event.dataTransfer.setData('id', genRandomID(0, totNumModules))\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', shortName)\n          //onClose()\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': addModule()\n          }\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default ModuleIcon","import React, { Fragment } from 'react'\nimport { ModuleType } from '../../../../audioModules/moduleTypes'\nimport { DrawerModuleData } from './moduleData'\nimport ModuleIcon from './ModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  moduleData: DrawerModuleData\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcons({ totNumModules, moduleData, row, col, onClose }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon key={index} \n            fullName={fullName} \n            shortName={shortName} \n            moduleType={moduleType as ModuleType} \n            totNumModules={totNumModules} \n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE } from \"../../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, shortname, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n  ['distortion', 'dist', DISTORTION],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n  ['enveloped pad', 'env', ENVELOPED_TRIGGER],\n  ['white noise', 'noise', WHITE_NOISE]\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n  ['analyzer', 'analyzer', ANALYZER]\n]\n\nexport const allModuleData: DrawerModuleData = effectModuleData.concat(sourceModuleData).concat(utilityModuleData)","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../../audioModules/moduleTypes'\nimport { performContainerMerge } from '../../../../redux/replicateContainer'\nimport { RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { colors } from '../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  moduleName: string\n  totNumberModules: number\n  onClose: () => void\n  row: number\n  col: number\n  isFocussed?: boolean\n}\n\nfunction SpaceDBModuleIcon({ moduleName, totNumberModules, onClose, row, col, isFocussed }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.containerSaveService.get(moduleName).then(({ containerID, modules, connections }: any) => {\n      performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n    })\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  const totNumberConnections = useSelector((state: RootState) => Object.keys(state.connections).length)\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(CONTAINER),\n          borderColor: isFocussed ? 'white' : colors.grey,\n        }}\n        onClick={addModule}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openSDBModuleContextMenu(e, moduleName)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {moduleName}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBModuleIcon","import React, { Fragment, useEffect } from 'react'\nimport SpaceDBModuleIcon from './SpaceDBModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  onClose: () => void\n  row: number\n  col: number\n  spaceDBModules: string[]\n}\n\nfunction SpaceDBModules({ spaceDBModules, totNumModules, onClose, row, col }: Props) {\n  useEffect(() => {\n    window.refreshSpaceDBModules()\n  }, [])\n  return (\n    <Fragment>\n      {spaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon \n            moduleName={moduleName}\n            key={index}\n            totNumberModules={totNumModules}\n            onClose={onClose}\n            row={row} col={col}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SpaceDBModules","import React, { Fragment } from 'react'\nimport { allModuleData } from './moduleData'\nimport ModuleIcon from './ModuleIcon'\nimport SpaceDBModuleIcon from './SpaceDBModuleIcon'\n\ninterface Props {\n  query: string\n  spaceDBModules: string[]\n  totNumModules: number\n  onClose: () => void\n  row: number\n  col: number\n}\n\nfunction SearchIcons({ query, spaceDBModules, totNumModules, onClose, row, col }: Props) {\n  const upperCaseQuery = query.toUpperCase()\n  const filteredSpaceDBModules = spaceDBModules.filter(moduleName => moduleName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  const filteredModuleData = allModuleData.filter(([fullName, ,]) => fullName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  return (\n    <Fragment>\n      {filteredSpaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon\n            key={index}\n            moduleName={moduleName}\n            totNumberModules={totNumModules}\n            onClose={onClose}\n            row={row} col={col}\n            isFocussed={index === 0}\n          />\n        )\n      })}\n      {filteredModuleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon\n            isFocussed={filteredSpaceDBModules.length === 0 && index === 0}\n            key={index}\n            fullName={fullName}\n            shortName={shortName}\n            moduleType={moduleType}\n            totNumModules={totNumModules}\n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SearchIcons","import React from 'react'\nimport ModuleIcons from './ModuleIcons/ModuleIcons'\nimport useJSS from './style'\nimport { EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES, SEARCH } from './AddModuleMenu'\nimport { effectModuleData, sourceModuleData, utilityModuleData } from './ModuleIcons/moduleData'\nimport SpaceDBModules from './ModuleIcons/SpaceDBModules'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport SearchIcons from './ModuleIcons/SearchIcons'\n\ninterface Props {\n  selectedGroup: string\n  row: number\n  col: number\n  query: string\n  onClose: () => void\n  spaceDBModules: string[]\n}\n\nfunction IconRouter({ selectedGroup, row, col, onClose, query, spaceDBModules }: Props) {\n  const totNumModules = useSelector((state: RootState) => Object.keys(state.modules).length)\n  const classes = useJSS()\n  return (\n    <div className={classes.IconRouter}>\n      <ModuleIcons totNumModules={totNumModules}\n        moduleData={\n          selectedGroup === EFFECTS ? effectModuleData : \n          selectedGroup === SOURCES ? sourceModuleData :\n          selectedGroup === UTILITY ? utilityModuleData :\n          []\n        }\n        row={row} col={col}\n        onClose={onClose}\n      />\n      {selectedGroup !== SPACEDB_MODULES ? null :\n      <SpaceDBModules\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n      {selectedGroup !== SEARCH ? null :\n      <SearchIcons\n        query={query}\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n    </div>\n  )\n}\n\nexport default IconRouter","import React, { RefObject } from 'react'\nimport { SEARCH } from './AddModuleMenu'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    addSelectedSearchModule: () => void\n  }\n}\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n  setQuery: (arg: string) => void\n  searchRef: RefObject<HTMLInputElement>\n  onClose: () => void\n}\n\nlet prevSelectedGroup: string\n\nfunction SearchBar({ selectedGroup, setSG, setQuery, searchRef, onClose }: Props) {\n  const classes = useJSS()\n  if (selectedGroup !== SEARCH) {\n    prevSelectedGroup = selectedGroup\n  }\n  return (\n    <input className={classes.SearchBar}\n      ref={searchRef}\n      onChange={e => {\n        if (e.target.value.length === 0) {\n          setSG(prevSelectedGroup)\n          window.addSelectedSearchModule = () => {}\n        } else {\n          setQuery(e.target.value)\n          setSG(SEARCH)\n        }\n      }}\n      onKeyDown={e => {\n        switch(e.key) {\n          case 'Escape': onClose(); break;\n          case 'Enter': window.addSelectedSearchModule(); break;\n        }\n      }}\n      placeholder='search'\n    />\n  )\n}\n\nexport default SearchBar","import React, { useEffect, useRef, useState } from 'react'\nimport LeftBar from './LeftBar'\nimport IconRouter from './IconRouter'\nimport SearchBar from './SearchBar'\nimport useJSS from './style'\nimport { useSpring } from 'react-spring'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\nimport FlexCol from '../../Flex/FlexCol'\nimport { zIndex } from '../../../theme/zIndex'\n\ndeclare global {\n  interface Window {\n    openAddModuleMenu: (row: number, col: number) => void\n    refreshSpaceDBModules: () => void\n  }\n}\n\nexport const EFFECTS = 'effects'\nexport const SOURCES = 'sources'\nexport const UTILITY = 'utility'\nexport const SPACEDB_MODULES = 'spaceDB'\nexport const SEARCH = 'search'\n\nexport const addModuleMenuGroups = [\n  EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES,\n]\n\nfunction makeData(isOpen: boolean, row?: number, col?: number) {\n  return {\n    isOpen,\n    row,\n    col,\n  }\n}\n\nfunction AddModuleMenu() {\n  const [{ isOpen, row, col }, setData] = useState(makeData(false))\n  const searchRef = useRef<HTMLInputElement>(null)\n  window.openAddModuleMenu = (row, col) => {\n    setData(makeData(true, row, col))\n    if (searchRef.current) searchRef.current.focus()\n  }\n  const onClose = () => { setData(makeData(false)) }\n  const [selectedGroup, setSG] = useState(EFFECTS)\n  const [query, setQuery] = useState('') // used with the search bar\n  const [spaceDBModules, setSpaceDBModules] = useState<string[]>([])\n  window.refreshSpaceDBModules = () => {\n    window.containerSaveService.find().then((saveNames: string[]) => { setSpaceDBModules(saveNames) })\n  }\n  const styleSpring = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: {\n      tension: 270,\n    }\n  })\n  useEffect(() => {\n    if (window.usingElectron) window.refreshSpaceDBModules()\n  }, [])\n  const classes = useJSS()\n  return (\n    <CenterMenu header='add module'\n      onClose={onClose}\n      bounderStyle={Object.assign({}, styleSpring, {\n        zIndex: isOpen ? zIndex.centerMenu : zIndex.background - 1,\n      })}\n    >\n      <FlexRow>\n        <FlexCol className={classes.RouterBounder}>\n          <SearchBar selectedGroup={selectedGroup} setSG={setSG} setQuery={setQuery} searchRef={searchRef} onClose={onClose} />\n          <LeftBar selectedGroup={selectedGroup} setSG={setSG} />\n        </FlexCol>\n        <IconRouter \n          selectedGroup={selectedGroup} \n          row={row as number} col={col as number} \n          onClose={onClose} query={query} \n          spaceDBModules={spaceDBModules} \n        />\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default AddModuleMenu","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModule = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModule","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID, name }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: true,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: true,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  }\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: false,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: false,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  }\n}\n\nexport default unmarkContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\"\nimport { RenameContainerControlAction } from \"../moduleTSTypes\"\n\nconst renameContainerControl = (modules: Modules, { name, parentModID, modID, controlID, actualModID }: RenameContainerControlAction) => {\n  const containerMod = modules[parentModID] as ContainerModule\n  return Object.assign({}, modules, {\n    [parentModID]: {\n      ...containerMod,\n      containerControls: containerMod.containerControls.map(containerControl => {\n        const notRightControl = (\n          containerControl.controlID !== controlID ||\n          containerControl.actualModID !== actualModID\n        )\n        if (notRightControl) {\n          return containerControl\n        } else {\n          return {\n            ...containerControl,\n            name: name\n          }\n        }\n      })\n    }\n  })\n}\n\nexport default renameContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n  RenameContainerControlAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n  renameContainerControlReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      case RENAME_CONTAINER_CONTROL: return renameContainerControlReducer(state, action as RenameContainerControlAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\nimport genRandomID from \"../../idGen\"\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = genRandomID(0, Object.keys(connections).length)\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\"\nimport { getContainerIDs, getInternalConnectionIDs } from \"../../getContainerAsProject\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const toTrimModIDs = modules[id].moduleType === CONTAINER ? getContainerIDs(id, modules) : [ id ]\n  const toTrimConnectionIDs = modules[id].moduleType === CONTAINER ? \n    [...modules[id].inputs, ...modules[id].outputs, ...getInternalConnectionIDs(connections, toTrimModIDs)] \n    : [...modules[id].inputs, ...modules[id].outputs]\n  const trimmedModules = filterOutFromObj(modules, toTrimModIDs) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, toTrimConnectionIDs),\n  }\n}\n\nexport default removeModule","import { Modules, Connections, ContainerModule } from \"../../stateTSTypes\"\nimport { MergeContainerAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nconst mergeContainer = (modules: Modules, connections: Connections, { containerID, newModules, newConnections, row, col, parentID }: MergeContainerAction): ConnectionReducerReturn => {\n  return {\n    newModules: Object.assign({}, modules, newModules, {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: [ ...(modules[parentID] as ContainerModule).childModules, containerID ]\n      },\n      [containerID]: {\n        ...newModules[containerID],\n        parentID,\n        row,\n        col,\n        isBaseContainer: false,\n      }\n    }),\n    newConnections: Object.assign({}, connections, newConnections)\n  }\n}\n\nexport default mergeContainer","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\nimport mergeContainer from './reducers/mergeContainer'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action: ConnectionAction): ConnectionReducerReturn => {\n  switch (action.type) {\n    case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n    case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n    case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n    case MERGE_CONTAINER: return mergeContainer(modules, connections, action as MergeContainerAction)\n    default: return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\n\nexport function createInitState() {\n  return {\n    modules: moduleReducer(),\n    connections: {},\n    baseContainerID: bcidReducer(),\n  }\n}\n\nconst initState = createInitState()\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE || action.type === MERGE_CONTAINER) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    const newState = (action as RootAction).state\n    return Object.assign(newState, newState.connections ? {} : {\n      connections: {}\n    })\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    return {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n  }\n}\n\nexport default rootReducer\n","import React, { Dispatch, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { saveJSONToChosenFile, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { createInitState } from '../../../redux/rootReducer'\nimport { Connections, RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../../CenterMenus/CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\n\ndeclare global {\n  interface Window {\n    openConfirmBlankProjectMenu: () => void\n  }\n}\n\nfunction makeBlankProject(dispatch: Dispatch<any>, connections: Connections) {\n  const emptyState = createInitState()\n  restoreAMFromState(connections, emptyState)\n  dispatch(restoreFromState(emptyState))\n  window.flashNotification(colors.success, 'created blank project')\n  window.saveFileHandle = undefined\n  window.reRenderFileMenu()\n}\n\nfunction ConfirmBlankProject() {\n  const [isOpen, setOpen] = useState(false)\n  window.openConfirmBlankProjectMenu = () => {\n    setOpen(true) \n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n\n  const state = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <CenterMenu isClosed={!isOpen} onClose={onClose}>\n      <div \n        style={{ \n          fontSize: sizes.text.medium,\n          textAlign: 'center',\n        }}\n      > would you like to save the current project before closing? </div>\n      <FlexRow>\n        <Button\n          onClick={() => {\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >no</Button>\n        <Button\n          onClick={async () => {\n            if (window.saveFileHandle) {\n              await saveJSONToFileHandle(window.saveFileHandle, state)\n            } else {\n              await saveJSONToChosenFile(state)\n            }\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >yes</Button>\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmBlankProject","import React, { Fragment } from 'react'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport KnobRangeSetMenu from './RangeSetMenu/KnobRangeSetMenu'\nimport SpaceDBProjectSaveMenu from './SaveMenu/SpaceDBProjectSaveMenu'\nimport ConfirmDeleteMenu from './ConfirmDeleteMenu/ConfirmDeleteMenu'\nimport FileSaveMenu from './SaveMenu/FileSaveMenu'\nimport SpaceDBContainerSaveMenu from './SaveMenu/SpaceDBContainerSaveMenu'\nimport AnalyzerRangeSetMenu from './RangeSetMenu/AnalyzerRangeSetMenu'\nimport RenameModuleMenu from './RenameMenu/RenameModuleMenu'\nimport RenameControlMenu from './RenameMenu/RenameControlMenu'\nimport AddModuleMenu from './AddModuleMenu/AddModuleMenu'\nimport ConfirmBlankProject from '../RightDrawer/FileMenu/ConfirmBlankProject'\n\nfunction CenterMenus() {\n          \n  return (\n    <Fragment>\n      <AddModuleMenu/>\n      <ConnectionMenu/>\n      <RenameModuleMenu/>\n      <RenameControlMenu/>\n      <KnobRangeSetMenu/>\n      <AnalyzerRangeSetMenu/>\n      <SpaceDBProjectSaveMenu/>\n      <SpaceDBContainerSaveMenu/>\n      <ConfirmDeleteMenu/>\n      <FileSaveMenu/>\n      <ConfirmBlankProject/>\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","export interface NotificationData {\n  isOpen: boolean\n  color: string\n  text: string\n}\n\nexport function makeNotificationData(isOpen: boolean, color = '', text = ''): NotificationData {\n  return {\n    isOpen,\n    color,\n    text,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Notification: {\n    position: 'absolute',\n    top: '10vh',\n    left: '50vw',\n    transform: 'translate(-50%, 0%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '2vmin',\n    borderRadius: '4vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    zIndex: 1000,\n    fontSize: sizes.text.small\n  }\n})\n\nexport default useJSS","import React, { Fragment, useState } from 'react'\nimport { makeNotificationData } from './makeData'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\n\ndeclare global {\n  interface Window {\n    flashNotification: (color: string, text: string) => void\n  }\n}\n\nconst notificationTime = 2500 //milliseconds\n\nfunction Notification() {\n  const [{ isOpen, color, text }, setNotificationData] = useState(makeNotificationData(false))\n  const [isVisible, setIsVisible] = useState(false)\n  const classes = useJSS()\n  window.flashNotification = (color, text) => { \n    setNotificationData(makeNotificationData(true, color, text))\n    setIsVisible(true)\n    window.setTimeout(() => {\n      setIsVisible(false)\n    }, notificationTime)\n    window.setTimeout(() => {\n      setNotificationData(makeNotificationData(false))\n    }, notificationTime + 700)\n  }\n  const spring = useSpring({\n    opacity: isVisible ? 1 : 0\n  })\n  return (\n    <Fragment>\n      {\n        !isOpen ? null :\n        <animated.div className={classes.Notification}\n          style={Object.assign({ backgroundColor: color }, spring)}\n        >\n          {text}\n        </animated.div>\n      }\n    </Fragment>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { AudioModules } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport PointerLayer, { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\nimport configureSpaceDB from './configureSpaceDB'\nimport setUserAgent from './setUserAgent'\nimport ContextMenus from '../components/ContextMenus/ContextMenus'\nimport ModuleViewFill from '../components/ModuleView/Fill'\nimport RightDrawer from '../components/RightDrawer/RightDrawer'\nimport AudioTags from '../components/AudioTags/AudioTags'\nimport CenterMenus from '../components/CenterMenus/CenterMenus'\nimport Notification from '../components/Notification/Notification'\n\ndeclare global {\n  interface Window { \n    fillContainerID: string\n    audioModules: AudioModules\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.fillContainerID = 'project'\n\nwindow.audioModules = {}\nmakeAddModule()\nconfigureSpaceDB()\nsetUserAgent()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n      <Notification />\n      <ContextMenus />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}