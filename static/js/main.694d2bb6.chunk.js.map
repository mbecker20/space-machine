{"version":3,"sources":["icons/settings.svg","App/style.ts","theme/theme.ts","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/moduleTypes.ts","components/RightDrawer/ModuleIcons/moduleData.ts","helpers/genFuncs.ts","theme/moduleColor.ts","components/RightDrawer/DrawerItem.tsx","components/RightDrawer/ModuleIcons/ModuleIcons.tsx","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","audioCtx.ts","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/restoreAudioModule.ts","audioModules/connection.ts","components/RightDrawer/FileMenu.tsx","redux/root/rootActions.ts","redux/root/rootActionTypes.ts","redux/restoreFromState.ts","components/RightDrawer/RightDrawer.tsx","components/ModuleView/style.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Type.tsx","components/Knob/helpers.ts","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/ControlMenu.tsx","components/LargeIcon/InputOutputView.tsx","components/LargeIcon/MarkContainerControls.tsx","components/LargeIcon/MarkContainerIO.tsx","components/LargeIcon/DeleteButton.tsx","components/LargeIcon/ContainerControlMenu.tsx","components/ModuleView/Icon.tsx","components/DropSquare/style.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/helpers.ts","components/ModuleView/Fill.tsx","components/HorizontalScrollDiv/HorizontalScrollDiv.tsx","components/CenterMenu/style.ts","components/CenterMenu/CenterMenu.tsx","components/MrTesterr/style.ts","components/MrTesterr/MrTesterr.tsx","components/Button/style.ts","components/Button/Button.tsx","audioModules/modules/mediaElement.ts","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/Knob/Knob.tsx","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","components/CenterMenus/makeData.ts","components/CenterMenus/ConnectionMenu/style.ts","components/CenterMenus/ConnectionMenu/IORecursion.tsx","components/CenterMenus/ConnectionMenu/helpers.ts","components/CenterMenus/ConnectionMenu/ConnectionMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/RangeSetMenu/RangeSetMenu.tsx","components/CenterMenus/SaveMenu/SaveMenu.tsx","components/CenterMenus/CenterMenus.tsx","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","App/App.tsx","serviceWorker.ts","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/helpers.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","useJSS","createUseStyles","Bounder","backgroundImage","width","height","display","fontSize","color","position","top","left","userSelect","zIndex","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","overflowX","overflowY","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIcon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","DrawerBounder","right","Drawer","backgroundColor","DrawerHeader","DrawerHeaderItem","padding","textDecoration","whiteSpace","cursor","ItemRouter","flexFlow","alignContent","DrawerItem","boxShadow","margin","DrawerIcon","borderColor","borderStyle","marginBottom","DrawerItemText","Toggle","ToggleLine","HeaderItem","className","text","onClick","linkStyle","selectedRoute","style","CONTAINER","VALUE","effectModuleData","sourceModuleData","utilityModuleData","stringIn","str","ar","i","length","range","start","stop","out","push","clamp","val","Math","min","max","inRange","getModuleColor","moduleType","numAdds","fullName","id","classes","draggable","onDragStart","event","dataTransfer","setData","window","setFillIsExpanded","onDragEnd","ModuleIcons","moduleData","map","modDat","index","key","addModule","name","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","audioCtx","AudioContext","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","value","controlSetFuncs","Number","audioNode","connectingParamIDs","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","typeTypes","makeOutput","resume","masterGain","createGain","connect","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","audioModules","makeContainer","fillContainerID","highlightedID","currUnHighlight","reRenderFillContainer","restoreAudioModule","osc","output","filter","komp","panner","delay","constant","addAudioTag","reRenderAudioTags","container","fromMod","toMod","alert","disconnect","spaceDB","feathers","restClient","rest","configure","fetch","spaceDBSaveService","service","FileMenu","useState","saveList","setSaveList","dispatch","useDispatch","useEffect","find","saveNames","saveName","get","savedState","state","modules","connections","Object","keys","forEach","actualOutputID","actualInputID","setTimeout","restoreFromState","remove","openSaveMenu","drawerWidth","RightDrawer","open","setOpen","setWidth","drawerSpring","useSpring","transform","config","tension","setSR","drawerRef","useRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","clientWidth","innerWidth","adjusting","toReRender","addEventListener","div","onPointerDown","e","stopPropagation","ref","shiftKey","current","setPointerCapture","pointerId","onPointerMove","clientX","onPointerUp","releasePointerCapture","onWheel","scrollLeft","deltaY","FillBounder","FillHeaderBounder","FillHeader","marginLeft","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","IconControlContainer","maxHeight","justifySelf","ArcherElement","gridTemplateRows","gridTemplateColumns","IconName","IconConnector","alignSelf","MenuHeader","Connection","ControlBounder","ControlMenu","ControlTypeSelect","maxWidth","textAlign","ControlInput","File","setFunc","reRenderIcon","modName","htmlFor","opacity","onChange","file","target","files","URL","createObjectURL","audioTags","srcName","overflowWrap","wordWrap","hyphens","Type","audioModule","getRotation","makeValString","roundedNumString","floor","toString","slice","ValueControl","displayModName","useSelector","currRange","inputVal","setInputVal","initValue","onEveryChange","newVal","onSettingsClick","openRangeSetMenu","newRange","updateControlRange","ButtonControl","SwitchControl","initState","onSwitch","newState","selectedModule","controlType","Value","Button","Switch","InputOutputView","am","inputs","outputs","MarkContainerControls","marginTop","toContainerControls","isMarked","containerControls","switchStyle","MarkContainerIO","baseContainerID","isContainerInput","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","DeleteButton","inputData","outputData","ContainerControlMenu","ModuleViewIcon","mod","gridCol","gridRow","isHighlighted","setHighlighted","controlMenuOpen","setControlMenuOpen","reRender","iconStyle","gridColumn","archerElementStyle","iconSpring","onFrame","refreshArcherContainer","onRest","nameSpring","assign","onDragOver","preventDefault","onDrop","getData","fromRow","fromCol","openConnectionMenu","openRenameMenu","relations","targetId","targetAnchor","sourceAnchor","strokeColor","DropSquare","isHL","setHL","dsStyle","onDragEnter","types","onDragLeave","fc","currentChildren","childModules","concat","possiblyMod","possiblyOccupyingID","isOccupied","ModuleViewFill","isExpanded","setIsExpanded","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","strokeWidth","arrowLength","flat","HorizontalScrollDiv","CenterMenuBounder","CenterMenu","border","Header","children","header","onClose","TestingArea","ButtonDiv","MrTesterr","onKeyDown","makeMediaElement","audioRef","url","src","createMediaElementSource","AudioTag","possiblyMediaElement","autoPlay","AudioTags","ids","setState","spring","cx","fill","x","y","rx","ry","circle","cy","r","KnobContainer","placeItems","KnobSVG","KnobText","InteractionLayer","SettingsButton","placeSelf","StatelessKnob","svgRef","scale","tempVal","textRef","movementY","stroke","onBlur","keyCode","blur","title","placeholder","focus","openPointerLayer","settingsSVG","alt","Knob","PointerLayer","pointerLayerData","resetPointerLayerData","pointerLayerRef","makeConnectionMenuData","isOpen","makeRangeSetMenuData","onChangeSubmit","makeSaveMenuData","IORecursionBounder","IORecursionInnerBounder","IORecursion","isOutput","setConnection","isContainer","io","ioID","connectionExists","actualToID","newParam","buttonStyle","ConnectionMenu","setOutputIndex","setInputIndex","actualFromID","setActualFromID","setActualToID","isFromContainer","isToContainer","initMenu","openMenu","setOpenMenu","outputID","actualIOID","ioIndex","inputID","undefined","paramID","CMInputBounder","CenterMenuInput","InputSubmit","Error","RenameMenu","toRenameID","renameInputRef","isTooShort","setSubmitState","submitNewName","newName","renameModule","onKeyUp","autoFocus","RangeSetMenu","maxRange","setMin","setMax","SaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","inputRef","create","marginRight","update","CenterMenus","connectionMenuData","setConnectionMenuData","renameMenuData","setRenameMenuData","rangeSetMenuData","setRangeSetMenuData","saveMenuData","setSaveMenuData","makeAddModule","oscControlData","gainControlData","outputControlData","filterControlData","sampleRate","kompControlData","pannerControlData","delayControlData","constantControlData","mediaControlData","containerControlData","makePointerLayerData","App","setPointerLayerData","Boolean","location","hostname","match","isBaseContainer","moveModuleAction","renameContainer","markContainerInput","markContainerOutput","toContainerControlID","containerControl","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","bcidReducer","newID","connectionNumber","newModules","newConnections","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","removeModule","trimmedModules","childID","connectionReducer","combinedModuleConnectionReducer","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.694d2bb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","import { createUseStyles } from 'react-jss'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: '-1',\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: 0,\n    overflowX: 'hidden',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: 'black',\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n\n  dropSquareHL: 'white',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  connectableName: 'white',\n  expandableName: '#85adad',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C',\n\n  confirmButton: '#00802da6',\n  denyButton: '#cc00006e',\n}\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400px',\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIcon: '27vmin',\n    bigIconWidth: '30vmin',\n    bigIconHeight: '50vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '1.5vmin'\n  },\n  knob: {\n    size: 9, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: sizes.rightDrawer.width,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: sizes.rightDrawer.width,\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    height: 'calc(100% - 60px)',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // Drawer items\n\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    margin: '3vmin',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: sizes.rightDrawer.width,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\n\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT } from \"../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, id, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n]","export function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1] \n}","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG \n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n  }\n}\n\nexport default getModuleColor ","import React from 'react'\nimport useJSS from './style'\nimport getModuleColor from '../../theme/moduleColor'\n\n\ninterface Props {\n  fullName: string\n  id: string\n  moduleType: string\n}\n\nlet numAdds = 0\n\nfunction DrawerItem({ fullName, id, moduleType }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.DrawerItem}>\n      <div \n        className={classes.DrawerIcon}\n        style={{ backgroundColor: getModuleColor(moduleType) }}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData('id', `${id} ${numAdds}`)\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', id)\n          window.setFillIsExpanded(true)\n          numAdds+=1\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default DrawerItem","import React, { Fragment } from 'react'\nimport DrawerItem from '../DrawerItem'\nimport { DrawerModuleData } from './moduleData'\n\ninterface Props {\n  moduleData: DrawerModuleData\n}\n\nfunction ModuleIcons({ moduleData }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map((modDat, index) => {\n        return (\n          <DrawerItem fullName={modDat[0]} id={modDat[1]} moduleType={ modDat[2]} key={index}/>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction } from \"./connectionTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\n","const AudioContext = window.AudioContext\nconst audioCtx = new AudioContext()\nexport default audioCtx","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [-30, 30]\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-20000, 1400],\n      maxRange: [-20000, 1400],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [-1, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 20000],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs, BUTTON } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    'open': () => {\n      window.fillContainerID = id\n      window.highlightedID = ''\n      window.currUnHighlight = () => {}\n      window.reRenderFillContainer()\n    }\n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import {\n  ModuleType,\n  OSCILLATOR,\n  OUTPUT, GAIN,\n  AUTOFILTER,\n  KOMPRESSOR,\n  STEREO_PANNER,\n  SIGNAL_DELAY,\n  CONSTANT,\n  MEDIA_ELEMENT,\n  LINE_IN,\n  CONTAINER,\n  ControlData,\n} from './moduleTypes'\nimport makeConstantSource from './modules/constant'\nimport makeAutoFilter from './modules/autoFilter'\nimport makeOutput from './modules/output'\nimport makeStereoPanner from './modules/stereoPanner'\nimport makeSignalDelay from './modules/signalDelay'\nimport makeKompressor from './modules/kompressor'\nimport makeGain from './modules/gain'\nimport makeOscillator from './modules/oscillator'\nimport makeLineInput from './modules/lineInput'\nimport makeContainer from './modules/container'\n\n\nfunction restoreAudioModule(id: string, moduleType: ModuleType, prevControlData: ControlData) {\n  switch (moduleType) {\n    case OSCILLATOR:\n      const osc = makeOscillator(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: osc }\n      break\n    case GAIN:\n      const gain = makeGain(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: gain }\n      break\n    case OUTPUT:\n      const output = makeOutput(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: output }\n      break\n    case AUTOFILTER:\n      const filter = makeAutoFilter(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: filter }\n      break\n    case KOMPRESSOR:\n      const komp = makeKompressor(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: komp }\n      break\n    case STEREO_PANNER:\n      const panner = makeStereoPanner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: panner }\n      break;\n    case SIGNAL_DELAY:\n      const delay = makeSignalDelay(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: delay }\n      break\n    case CONSTANT:\n      const constant = makeConstantSource(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: constant }\n      break\n    case MEDIA_ELEMENT:\n      window.addAudioTag(id); window.reRenderAudioTags();\n      break;\n    case LINE_IN:\n      makeLineInput(id)\n      break;\n    case CONTAINER:\n      const container = makeContainer(id)\n      window.audioModules = { ...window.audioModules, [id]: container };\n      break\n  }\n}\n\n\nexport default restoreAudioModule","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Button } from '../all'\nimport { RootState } from '../../redux/stateTSTypes'\nimport feathers from '@feathersjs/feathers'\nimport rest from '@feathersjs/rest-client'\nimport { useDispatch } from 'react-redux'\nimport { restoreFromState as restoreFromStateAction } from '../../redux/allActions'\nimport { restoreFromState } from '../../redux/restoreFromState'\nimport { colors } from '../../theme/theme'\n\ndeclare global {\n  interface Window {\n    spaceDBSaveService: any\n  }\n}\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\nconst spaceDB = feathers()\nconst restClient = rest('http://192.168.1.81:30300') // spaceDB\n// http://192.168.1.79:3030 - yoga\n// http://192.168.1.65:3030 - mac\n\nspaceDB.configure(restClient.fetch(window.fetch))\nwindow.spaceDBSaveService = spaceDB.service('spaceDB-save-service')\n\nfunction FileMenu() {\n  const [ saveList, setSaveList ] = useState<string[]>([])\n  const dispatch = useDispatch()\n  useEffect(() => {\n    window.spaceDBSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n  }, [])\n  return (\n    <div>\n      <Button onClick={() => { \n        window.spaceDBSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n      }}>\n        refresh saves\n      </Button>\n      <div>\n        {saveList.map(saveName => {\n          return (\n            <div style={{ display: 'flex', flexDirection: 'row' }} key={saveName}>\n              <Button\n                onClick={() => {\n                  window.spaceDBSaveService.get(saveName).then((savedState: RootState) => {\n                    dispatch(restoreFromStateAction(savedState))\n                    restoreFromState(savedState)\n                  })\n                }}\n              >\n                {saveName}\n              </Button>\n              <Button style={{ backgroundColor: colors.deleteButton }}\n                onClick={() => {\n                  window.spaceDBSaveService.remove(saveName)\n                  window.setTimeout(() => {\n                    window.spaceDBSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n                  }, 1000)\n                }}\n              >\n                delete\n              </Button>\n            </div>\n          )\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          window.openSaveMenu(saveList, () => {\n            window.setTimeout(() => {\n              window.spaceDBSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n            }, 1000)\n          })\n        }}\n      >\n        save project\n      </Button>\n    </div>\n  )\n}\n\nexport default FileMenu","import { RESTORE_FROM_STATE } from \"./rootActionTypes\";\nimport { RootState } from \"../stateTSTypes\";\nimport { RestoreFromStateAction } from \"./rootActionTSTypes\";\n\nexport function restoreFromState(state: RootState): RestoreFromStateAction {\n  return {\n    type: RESTORE_FROM_STATE,\n    state,\n  }\n}","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","import { RootState } from \"./stateTSTypes\"\nimport restoreAudioModule from \"../audioModules/restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT } from \"../audioModules/moduleTypes\"\nimport { connect } from \"../audioModules/connection\"\n\nexport function restoreFromState({ modules, connections }: RootState) {\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const involvesMediaElement = modules[actualOutputID ? actualOutputID : fromID].moduleType === MEDIA_ELEMENT ||\n        modules[actualInputID ? actualInputID : toID].moduleType === MEDIA_ELEMENT\n      if (!involvesMediaElement) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        window.setTimeout(() => {\n          connect(\n            window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n            window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n            param,\n            outputIndex,\n            inputIndex,\n          )\n        }, 50)\n      }\n    })\n  }\n}","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { sourceModuleData, effectModuleData, utilityModuleData } from './ModuleIcons/moduleData'\nimport { clamp } from '../../helpers/genFuncs'\nimport ModuleIcons from './ModuleIcons/ModuleIcons'\nimport FileMenu from './FileMenu'\n\nconst SOURCES = 'sources'\nconst EFFECTS = 'effects'\nconst UTILITY = 'utility'\nconst FILE = 'file'\n\nlet drawerWidth = sizes.rightDrawer.width\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(SOURCES)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  })\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}px`\n            if (drawerRef.current) { drawerRef.current.style.width = drawerWidth }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = drawerWidth }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = drawerWidth }\n            if (toggleRef.current) { toggleRef.current.style.right = drawerWidth }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={SOURCES}\n            onClick={() => {setSR(SOURCES)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={EFFECTS} \n            onClick={() => {setSR(EFFECTS)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem \n            className={classes.DrawerHeaderItem} \n            text={UTILITY} \n            onClick={() => {setSR(UTILITY)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={FILE}\n            onClick={() => { setSR(FILE) }}\n            selectedRoute={selectedRoute}\n          />\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SOURCES\n            ?\n            <ModuleIcons moduleData={sourceModuleData} />\n            :\n            selectedRoute === EFFECTS\n            ?\n            <ModuleIcons moduleData={effectModuleData} />\n            :\n            selectedRoute === UTILITY\n            ?\n            <ModuleIcons moduleData={utilityModuleData} />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  Connection: {\n    fontSize: sizes.text.small,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    margin: '0vmin 1vmin'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport { Button } from '../../all'\nimport { colors, sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n}\n\nfunction File({ controlID, setFunc, reRenderIcon, modName }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={window.highlightedID + controlID}\n      >\n        <Button style={{\n          //backgroundColor: colors.fillModule,\n          borderColor: colors.deleteButton,\n        }}\n        >{modName ? `${modName} - ${controlID}` : controlID}</Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={window.highlightedID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[window.highlightedID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <p style={{\n        fontSize: sizes.text.xsmall,\n        textAlign: 'center',\n        whiteSpace: 'normal',\n        justifyContent: 'center',\n        width: '100%',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        hyphens: 'auto',\n      }}>\n        {window.audioTags[window.highlightedID].srcName}\n      </p>\n    </div>\n  )\n}\n\nexport default File","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { SetFunc, Value, AudioModuleWithTypes } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\n\ninterface Props {\n  setFunc: SetFunc\n  audioModule: AudioModuleWithTypes\n  value: Value | undefined\n  modID: string\n  modName?: string\n  controlID: string\n}\n\nfunction Type({ setFunc, audioModule, controlID, value, modID, modName }: Props) {\n  const classes = useJSS()\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <label htmlFor={'type'}>{modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={(e) => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(modID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={modID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </Fragment>\n  )\n}\n\nexport default Type","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { StatelessKnob } from '../../all'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID?: string\n  displayModName?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName }: Props) {\n  const modID = actualModID ? actualModID : window.highlightedID\n  const [ val, currRange ] = useSelector((state: RootState) => {\n    return [\n      state.modules[modID].controlData[controlID].value as number,\n      state.modules[modID].controlData[controlID].range as [number, number],\n    ]\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(modID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openRangeSetMenu(modID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(modID, controlID, newRange))\n          })\n        }}\n      />\n      <div>{displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { Button } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName }: Props) {\n  return (\n    <Button style={{\n      //backgroundColor: colors.fillModule,\n      borderColor: colors.deleteButton,\n      width: '50%',\n    }}\n      onClick={() => {\n        setFunc('')\n      }}\n    >{modName ? `${modName} - ${controlID}` : controlID}</Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport { Switch } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, AudioModuleWithTypes } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl } from './controls/all'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType, value } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} />\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} audioModule={audioModule as AudioModuleWithTypes} controlID={controlID} value={value} modID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} />\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { Module, Modules, RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../redux/allActions'\nimport { disconnect } from '../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../audioModules/moduleTypes'\n\ninterface Props {\n  selectedModule: Module\n  modules: Modules\n}\n\nfunction InputOutputView({ selectedModule, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  return (\n    <Fragment>\n\n      {!selectedModule ? null : selectedModule.inputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>inputs</div>\n      }\n\n      {!selectedModule ? null : selectedModule.inputs.map((connectionID, index) => {\n        const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[fromID].name\n        return (\n          <div className={classes.Connection}\n            key={fromID + param + 'inp' + index}\n            onClick={() => {\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n            }}\n          >\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n\n      {!selectedModule ? null : selectedModule.outputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>outputs</div>\n      }\n\n      {!selectedModule ? null : selectedModule.outputs.map((connectionID, index) => {\n        const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[toID].name\n        return (\n          <div className={classes.Connection}\n            key={toID + param + 'out' + index}\n            onClick={() => {\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n            }}\n          >\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default InputOutputView","import React, { useState, Fragment } from 'react'\nimport { Button, Switch } from '../all'\nimport { sizes } from '../../theme/theme'\nimport { Module, ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../redux/allActions'\nimport { stringIn } from '../../helpers/genFuncs'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const [open, setOpen] = useState(false)\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <Fragment>\n      <Button style={{ fontSize: sizes.text.xsmall, marginTop: '2vmin' }}\n        onClick={() => {\n          setOpen(!open)\n        }}\n      >mark container controls</Button>\n      <div>\n        {\n        !open ? null :\n        Object.keys(selectedModule.controlData).map((controlID, index) => {\n          return (\n            <Switch initState={stringIn(selectedModule.id + controlID, selectedModule.toContainerControls)} text={controlID}\n              style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n              key={controlID + index}\n              onSwitch={isMarked => {\n                if (isMarked) {\n                  dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                } else {\n                  dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                }\n              }} \n            />\n          )\n        })\n        }\n        {\n        open && selectedModule.moduleType === CONTAINER ?\n          (selectedModule as ContainerModule).containerControls.map(({ modID, controlID, actualModID }, index) => {\n            const name = modules[modID].name\n            return (\n              <Switch initState={stringIn(actualModID + controlID, selectedModule.toContainerControls)} text={`${name} - ${controlID}`}\n                style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                key={modID + index}\n                onSwitch={isMarked => {\n                  if (isMarked) {\n                    dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                  } else {\n                    dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                  }\n                }}\n              />\n            )\n          }) : null\n        }\n\n      </div>\n    </Fragment>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { Module } from '../../redux/stateTSTypes'\nimport { Switch } from '../all'\nimport { useDispatch } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\n\ninterface Props {\n  baseContainerID: string\n  selectedModule: Module\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.xsmall,\n  padding: '1vmin',\n}\n\nfunction MarkContainerIO({ baseContainerID, selectedModule }: Props) {\n  const dispatch = useDispatch()\n  return (\n    (selectedModule && window.fillContainerID !== baseContainerID) ?\n    <Fragment>\n      {\n      Object.keys(window.audioModules[selectedModule.id]).length === 0 ? null :\n      <MarkContainerControls selectedModule={selectedModule} />\n      }\n      {\n      selectedModule.connectionInputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'inputSwitch'}\n        text={'mark as container input'} \n        initState={selectedModule.isContainerInput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerInput(window.highlightedID))\n          } else {\n            dispatch(unmarkContainerInput(window.highlightedID))\n          }\n        }}\n      />\n      }\n      {\n      selectedModule.connectionOutputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'outputSwitch'}\n        text={'mark as container output'}\n        initState={selectedModule.isContainerOutput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerOutput(window.highlightedID))\n          } else {\n            dispatch(unmarkContainerOutput(window.highlightedID))\n          }\n        }}\n      />\n      }\n    </Fragment>\n    :\n    null\n  )\n}\n\nexport default MarkContainerIO","import React from 'react'\nimport { Button } from '../all'\nimport { colors, sizes } from '../../theme/theme'\nimport { ContainerModule, Module, RootState } from '../../redux/stateTSTypes'\nimport { disconnect } from '../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../redux/allActions'\nimport { useSelector } from 'react-redux'\n\ninterface Props {\n  selectedModule: Module | ContainerModule\n}\n\nfunction DeleteButton({ selectedModule }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  return (\n    <Button style={{\n      backgroundColor: colors.deleteButton,\n      width: '50%',\n      fontSize: sizes.text.small\n    }}\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(window.highlightedID)) // should remove all connections\n        window.highlightedID = ''\n      }}\n    >delete</Button>\n  )\n}\n\nexport default DeleteButton","import React from 'react'\nimport useJSS from './style'\nimport { AudioModuleWithTypes } from '../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl } from './controls/all'\nimport { useSelector } from 'react-redux'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <div className={classes.ControlMenu}>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType, value } = modules[modID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const name = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={name} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} audioModule={audioModule as AudioModuleWithTypes} controlID={controlID} value={value} modID={selectedModule.id} modName={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} modName={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={name} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveModule } from '../../redux/allActions'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport InputOutputView from '../LargeIcon/InputOutputView'\nimport MarkContainerIO from '../LargeIcon/MarkContainerIO'\nimport DeleteButton from '../LargeIcon/DeleteButton'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\n\ndeclare global {\n  interface Window {\n    currUnHighlight: () => void\n  }\n}\n\nwindow.currUnHighlight = () => {}\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isHighlighted, setHighlighted] = useState(mod.id === window.highlightedID)\n  const [controlMenuOpen, setControlMenuOpen] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  function reRenderIcon() {\n    toReRender(!reRender)\n  }\n\n  const iconStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    borderStyle: isHighlighted ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n  }\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n  }\n  \n  const iconSpring = useSpring({\n    width: isHighlighted ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isHighlighted ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon,\n    config: {\n      tension: 350,\n      clamp: true,\n    },\n    onFrame: window.refreshArcherContainer,\n    onRest: () => { setControlMenuOpen(isHighlighted) }\n  })\n\n  const nameSpring = useSpring({\n    fontSize: isHighlighted ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n\n  const { modules, baseContainerID, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <animated.div \n        className={classes.Icon} \n        style={Object.assign({}, iconSpring, iconStyle)}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          const id = e.dataTransfer.getData('id')\n          if (id) {\n            const possiblyMod = modules[id]\n            if (possiblyMod) {\n              const fromRow = e.dataTransfer.getData('fromRow')\n              const fromCol = e.dataTransfer.getData('fromCol')\n              window.setFillIsExpanded(false)\n              dispatch(moveModule(id, mod.row, mod.col))\n              dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n              window.setTimeout(window.refreshArcherContainer, 100)\n            }\n          } else {\n            if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n              alert('mod cannot accept input')\n            } else {\n              const fromID = e.dataTransfer.getData('fromID')\n              if (fromID) {\n                window.openConnectionMenu(fromID, mod.id)\n              }\n            }\n          }\n          setHighlighted(false)\n        }}\n        draggable={!isHighlighted}\n        onDragStart={event => {\n          event.dataTransfer.setData('id', mod.id)\n          event.dataTransfer.setData('fromRow', `${mod.row}`)\n          event.dataTransfer.setData('fromCol', `${mod.col}`)\n          window.setFillIsExpanded(true)\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n        onClick={e => {\n          if (e.stopPropagation) {\n            e.stopPropagation()\n          }\n          if (mod.id === window.highlightedID) {\n            window.currUnHighlight()\n            window.currUnHighlight = () => {}\n          } else {\n            window.currUnHighlight()\n            setHighlighted(true)\n            window.highlightedID = mod.id\n            window.currUnHighlight = () => {\n              window.highlightedID = ''\n              setControlMenuOpen(false)\n              setHighlighted(false)\n            }\n          }\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <animated.div className={classes.IconName} style={nameSpring} onClick={e => {\n          if (isHighlighted) {\n            e.stopPropagation()\n            window.openRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </animated.div>\n        {\n        !controlMenuOpen ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} />\n          <InputOutputView selectedModule={mod} modules={modules} />\n          <MarkContainerIO baseContainerID={baseContainerID} selectedModule={mod} />\n          <DeleteButton selectedModule={mod} />\n        </div>\n        }\n      </animated.div>\n      <animated.div className={classes.ArcherElement}\n        style={Object.assign({}, iconSpring, archerElementStyle)}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.filter(connectionID => {\n              const { fromID, actualOutputID } = connections[connectionID]\n              return actualOutputID !== fromID\n            }).map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </animated.div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.iconGrid,\n    height: sizes.moduleView.iconGrid,\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { moveModule } from '../../redux/modules/moduleActions'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { ModuleType } from '../../audioModules/moduleTypes'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const { modules } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules\n    }\n  })\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length === 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        if (e.dataTransfer.types.length === 3) {\n          setHL(false)\n        }\n      }}\n      onDrop={event => {\n        const id = event.dataTransfer.getData('id')\n        const fc = modules[window.fillContainerID] as ContainerModule\n        const currentChildren = fc.childModules.concat(fc.childModules)\n        const possiblyMod = modules[id]\n        const possiblyOccupyingID = isOccupied(row, col, currentChildren, modules)\n        if (!possiblyMod) {\n          if (!possiblyOccupyingID) {\n            const moduleType = event.dataTransfer.getData('moduleType') as ModuleType\n            const name = event.dataTransfer.getData('name')\n            setHL(false)\n            window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n            window.setFillIsExpanded(false)\n          }\n        } else if (possiblyOccupyingID) {\n          const fromRow = event.dataTransfer.getData('fromRow')\n          const fromCol = event.dataTransfer.getData('fromCol')\n          setHL(false)\n          window.setFillIsExpanded(false)\n          dispatch(moveModule(id, row, col))\n          dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n          window.setTimeout(window.refreshArcherContainer, 1)\n        } else {\n          setHL(false)\n          window.setFillIsExpanded(false)\n          dispatch(moveModule(id, row, col))\n          window.setTimeout(window.refreshArcherContainer, 1)\n        }\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport { Button } from '../all'\n\ndeclare global {\n  interface Window { \n    setFillIsExpanded: (isExpanded: boolean) => void\n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [isExpanded, setIsExpanded] = useState(false)\n  window.setFillIsExpanded = setIsExpanded\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${isExpanded ? maxRow + 2 : maxRow + 1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${isExpanded ? maxCol + 2 : maxCol + 1}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.currUnHighlight()\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <ArcherContainer ref={archerContainerRef}\n        svgContainerStyle={{ zIndex: -1 }}\n        strokeWidth={4}\n        arrowLength={0}\n      >\n        <div className={classes.Fill} style={gridStyle}>\n          {isEmpty ? <DropSquare row={0} col={0}/> :\n          range(0, isExpanded ? maxRow + 2 : maxRow + 1).map(row => {\n            return range(0, isExpanded ? maxCol + 2 : maxCol + 1).map(col => {\n              return (\n                <DropSquare\n                  key={`${row} ${col}`}\n                  row={row} \n                  col={col}\n                />\n              )\n            })\n          }).flat()}\n          {containerModule.childModules.map(moduleID => {\n            const mod = modules[moduleID]\n            return (\n              <ModuleViewIcon\n                key={mod.id}\n                mod={mod}\n                gridRow={mod.row + 1}\n                gridCol={mod.col + 1}\n              />\n            )\n          })}\n        </div>\n      </ArcherContainer>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import React, { ReactNode, WheelEvent, RefObject } from 'react'\nimport CSS from 'csstype'\n\ninterface Props {\n  children: ReactNode\n  className?: string\n  style?: CSS.Properties\n  ref: RefObject<HTMLDivElement>\n}\n\nconst baseStyle = {\n  overflowY: 'hidden',\n  overflowX: 'scroll',\n  display: 'flex',\n}\n\nfunction HorizontalScrollDiv({ children, className, style, ref }: Props) {\n  function onWheel(event: WheelEvent) {\n    if(ref && ref.current) {\n      ref.current.scrollLeft += event.deltaY\n    } \n  }\n  return (\n    <div ref={ref} className={className} style={Object.assign({}, baseStyle, style)} onWheel={onWheel}>\n      {children}\n    </div>\n  )\n}\n\nexport default HorizontalScrollDiv","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: 100,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'absolute',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: '1px solid white',\n    zIndex: 101,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  children: React.ReactNode\n  header: string\n  onClose: () => void\n}\n\nfunction CenterMenu({ children, header, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.CenterMenuBounder}\n      onPointerDown={e => {\n        e.stopPropagation()\n        onClose()\n      }}\n    >\n      <div className={classes.CenterMenu}\n        onPointerDown={(e) => {e.stopPropagation()}} \n      >\n        <div className={classes.Header}>\n          {header}\n        </div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default CenterMenu","import { createUseStyles } from 'react-jss'\n//import { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  TestingArea: {\n    backgroundColor: 'black',\n    position: 'absolute',\n    top: '45vh',\n    left: '25vw',\n    width: '45vw',\n    height: '50vh',\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 150,\n  },\n\n  ButtonDiv: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n  },\n\n  Button: {\n    margin: '2vmin',\n    padding: '1vmin',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport audioCtx from '../../audioCtx'\n\n/*\nvar splitter = audioCtx.createChannelSplitter(2)\n\nvar lpf = audioCtx.createBiquadFilter()\n  lpf.type = \"lowpass\"\n  lpf.frequency.value = 440\n  lpf.Q.value = 10\n\n\nnavigator.mediaDevices.getUserMedia({\n  audio: {\n    echoCancellation: false,\n    autoGainControl: false,\n    noiseSuppression: false,\n    latency: 0,\n    channelCount: 3,\n  }\n}).then(stream => {\n  const src = audioCtx.createMediaStreamSource(stream)\n  const splitter = audioCtx.createChannelSplitter(3)\n  const gain0 = audioCtx.createGain()\n  const gain1 = audioCtx.createGain()\n  const gain2 = audioCtx.createGain()\n  //const merger = audioCtx.createChannelMerger(3)\n  //const dly = audioCtx.createDelay(); dly.delayTime.value = .18\n  //const dlyFdbk = audioCtx.createGain(); dlyFdbk.gain.value = .6\n  //dly.connect(dlyFdbk); dlyFdbk.connect(dly)\n  const master = audioCtx.createGain(); master.gain.value = 1\n\n  console.log(stream.getAudioTracks()[0].getCapabilities())\n\n  master.gain.value = 1\n\n  src.connect(splitter)\n  splitter.connect(gain0, 0)\n  splitter.connect(gain1, 1)\n  splitter.connect(gain2, 2)\n  gain0.connect(master)\n  gain1.connect(master)\n  gain2.connect(master)\n  //merger.connect(master)\n  master.connect(audioCtx.destination)\n})\n*/\n\nfunction MrTesterr() {\n  const classes = useJSS()\n  return (\n    <div className={classes.TestingArea}>\n      {'mr testerrr'}\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'green' }}\n          onClick={() => {\n            audioCtx.resume()\n          }}\n        >start ctx</div>\n      </div>\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'red' }}\n          onClick={() => {\n            audioCtx.suspend()\n          }}\n        >stop ctx</div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MrTesterr","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '1vmin',\n    margin: '1vmin',\n    textAlign: 'center',\n  },\n})\n\nexport default useJSS","import React, { RefObject, KeyboardEvent } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children?: React.ReactNode\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n  ref?: RefObject<HTMLDivElement>\n  onKeyDown?: (e: KeyboardEvent<HTMLDivElement>) => void\n}\n\nfunction Button({ onClick, children, style, onPointerDown, ref, onKeyDown }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n      ref={ref}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    // control data is in makeAddModules\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n  },\n\n  Switch: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifySelf: 'flex-end',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n  },\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors } from '../../theme/theme'\n\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n}\n\nfunction Switch({ text, onSwitch, initState, style }: Props) {\n  const [state, setState] = useState(initState)\n  const classes = useJSS()\n  const spring = useSpring({\n    cx: state ? '65' : '25',\n    fill: state ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div\n        onClick={() => { onSwitch(!state); setState(!state) }}\n      >\n        {text}\n      </div>\n      <svg onClick={() => { onSwitch(!state); setState(!state) }} width={'90'} height={'30'}>\n        <rect width='50' height='20' x='20' y='5' rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={'15'} r={'15'} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          const newVal = clamp(Number(e.target.value), range)\n          if (onChange) {\n            onChange(newVal)\n          }\n          setInputVal(makeValString(newVal))\n        }}\n        onKeyDown={e => {\n          if (e.keyCode === 13) {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport StatelessKnob from './StatelessKnob'\nimport { clamp } from '../../helpers/genFuncs'\nimport { makeValString } from './helpers'\n\ninterface Props {\n  initValue: number\n  onChange?: (newVal: number) => void\n  onEveryChange: (newVal: number) => void\n  range: [number, number]\n  onSettingsClick?: () => void\n}\n\nfunction Knob({ initValue, range, onChange, onEveryChange, onSettingsClick }: Props) {\n  const [val, setVal] = useState(clamp(initValue, range))\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  return (\n    <StatelessKnob\n      initValue={val}\n      range={range}\n      onChange={newVal => {\n        if (onChange) { onChange(newVal) }\n        setVal(newVal)\n      }}\n      onEveryChange={onEveryChange}\n      onSettingsClick={onSettingsClick}\n      inputVal={inputVal}\n      setInputVal={setInputVal}\n    />\n  )\n}\n\nexport default Knob","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import { Range } from \"../../audioModules/moduleTypes\"\n\nexport function makeConnectionMenuData(isOpen: boolean, fromID = '', toID = '') {\n  return {\n    isOpen,\n    fromID,\n    toID,\n  }\n}\n\nexport function makeRangeSetMenuData(isOpen: boolean, modID = '', controlID = '', onChangeSubmit: (newRange: Range) => void = () => {}) {\n  return {\n    isOpen,\n    modID,\n    controlID,\n    onChangeSubmit,\n  }\n}\n\nexport function makeSaveMenuData(isOpen: boolean, saveList: string[] = [], onClose = () => {}) {\n  return {\n    isOpen,\n    saveList,\n    onClose,\n  }\n}","import { createUseStyles } from 'react-jss'\n\nconst indent = '2vmin'\n\nconst useJSS = createUseStyles({\n  IORecursionBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: '5vmin',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    height: '60vmin',\n    width: '90%',\n    overflowY: 'scroll',\n    overflowX: 'visible',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n      borderRadius: '2px'\n    },\n  },\n  IORecursionInnerBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: indent,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n})\n\nexport default useJSS","import React, { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  id: string\n  isOutput: boolean\n  setConnection: (actualIOID: string, ioIndex: number) => void \n}\n\nfunction IORecursion({ id, isOutput, setConnection }: Props) {\n  const [ isContainer, name, io ] = useSelector((state: RootState) => {\n    return [\n      state.modules[id].moduleType === CONTAINER,\n      state.modules[id].name,\n      isOutput ? state.modules[id].connectionOutputs : state.modules[id].connectionInputs\n    ]\n  })\n  const [open, setOpen] = useState(false)\n  const classes = useJSS()\n  if (isContainer) {\n    return (\n      <Fragment>\n        <Button style={{ color: colors.expandableName }}\n          onClick={() => { setOpen(!open) }}\n        >{name}</Button>\n        {!open ? null\n        :\n        <div className={classes.IORecursionInnerBounder}>\n          {io.map(ioID => {\n            return (\n              <IORecursion key={ioID} id={ioID} isOutput={isOutput} setConnection={setConnection}/>\n            )\n          })}\n        </div>\n        }\n      </Fragment>\n    )\n  } else { // base case\n    if (io.length > 1) {\n      return (\n        <Fragment>\n          <Button style={{ color: colors.expandableName }}\n            onClick={() => { setOpen(!open) }}\n          >{name}</Button>\n          {!open ? null\n          :\n          <div className={classes.IORecursionInnerBounder}>\n            {io.map((ioID, index) => {\n              return (\n                <Button style={{ color: colors.connectableName }}\n                  onClick={() => { setConnection(id, index) }}\n                >{ioID}</Button>\n              )\n            })}\n          </div>\n          }\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button\n          onClick={() => { setConnection(id, 0) }}\n        >{name}</Button>\n      )\n    }\n  }\n}\n\nexport default IORecursion","import { Module, Connections } from \"../../../redux/stateTSTypes\";\n\nexport function connectionExists(connections: Connections, fromMod: Module, actualToID: string, newParam = '') {\n  for(var i = 0; i < fromMod.outputs.length; i++) {\n    const { actualInputID, param } = connections[fromMod.outputs[i]]\n    if (actualInputID === actualToID && newParam === param) {\n      return true\n    }\n  }\n  return false\n}","import React, { Fragment, useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport { connect } from '../../../audioModules/connection'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConnectingAudioModule, CONTAINER } from '../../../audioModules/moduleTypes'\nimport { addConnection } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport IORecursion from './IORecursion'\nimport useJSS from './style'\nimport { connectionExists } from './helpers'\n\ninterface Props {\n  fromID: string\n  toID: string\n  onClose: () => void\n}\n\nexport const CHOOSE_OUTPUT = 'CHOOSE_OUTPUT'\nexport const CONNECT_TO = 'CONNECT_TO'\nexport const CHOOSE_PARAM = 'CHOOSE_PARAM'\nexport const CHOOSE_INPUT = 'CHOOSE_INPUT'\n\nconst buttonStyle: CSS.Properties = {\n  \n}\n\nfunction ConnectionMenu({ fromID, toID, onClose }: Props) {\n  const classes = useJSS()\n  const am = window.audioModules\n  const [ modules, connections ] = useSelector((state: RootState) => [ state.modules, state.connections ])\n  const fromMod = modules[fromID]\n  const toMod = modules[toID]\n  const [outputIndex, setOutputIndex] = useState(0)\n  const [inputIndex, setInputIndex] = useState(0)\n  const [actualFromID, setActualFromID] = useState(fromID)\n  const [actualToID, setActualToID] = useState(toID)\n  const dispatch = useDispatch()\n  const isFromContainer = fromMod.moduleType === CONTAINER\n  const isToContainer = toMod.moduleType === CONTAINER\n  const initMenu = fromMod.connectionOutputs.length > 1 || isFromContainer ? CHOOSE_OUTPUT :\n    toMod.connectionInputs.length > 1 || isToContainer ? CHOOSE_INPUT : CONNECT_TO\n  const [openMenu, setOpenMenu] = useState(initMenu)\n  return (\n    <Fragment>\n      {openMenu === CHOOSE_OUTPUT\n      ?\n      <CenterMenu header={'choose output'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {fromMod.connectionOutputs.map(outputID => {\n            return (\n              <IORecursion key={outputID + 'output'} id={isFromContainer ? outputID : fromID} isOutput={true} \n                setConnection={(actualIOID, ioIndex) => {\n                  setActualFromID(actualIOID)\n                  setOutputIndex(ioIndex)\n                  if (toMod.connectionInputs.length > 1 || toMod.moduleType === CONTAINER) {\n                    setOpenMenu(CHOOSE_INPUT)\n                  } else {\n                    setOpenMenu(CONNECT_TO)\n                  }\n                }}\n              />\n            )\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_INPUT\n      ?\n      <CenterMenu header={'choose input'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {toMod.connectionInputs.map(inputID => {\n            return (\n              <IORecursion key={inputID + 'input'} id={isToContainer ? inputID : toID} isOutput={false}\n                setConnection={(actualIOID, ioIndex) => {\n                  setActualToID(actualIOID)\n                  setInputIndex(ioIndex)\n                  setOpenMenu(CONNECT_TO)\n                }}\n              />\n            )\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CONNECT_TO\n      ?\n      <CenterMenu header={`connect ${isFromContainer ? fromMod.name + ' - ' + modules[actualFromID].name : fromMod.name} to ${isToContainer ? toMod.name + ' - ' + modules[actualToID].name : toMod.name}`} onClose={onClose}>\n        {(isToContainer ? modules[toMod.connectionInputs[inputIndex]].connectionInputs.length === 0 : toMod.connectionInputs.length === 0) ? null :\n        <Button style={buttonStyle}\n          onClick={() => {\n            if (!connectionExists(connections, fromMod, actualToID)) {\n              connect(\n                am[actualFromID] as ConnectingAudioModule,\n                am[actualToID] as ConnectingAudioModule,\n                '',\n                outputIndex,\n                inputIndex,\n              )\n              dispatch(addConnection(\n                fromID,\n                toID,\n                '',\n                outputIndex,\n                inputIndex,\n                isFromContainer ? actualFromID : undefined,\n                isToContainer ? actualToID : undefined,\n              ))\n            } else {\n              alert('modules already connected')\n            }\n            onClose()\n          }}\n        >module</Button>}\n        {\n        am[actualToID].connectingParamIDs.length === 0 ? null\n        :\n        <Button style={buttonStyle}\n          onClick={(e) => {\n            e.stopPropagation()\n            setOpenMenu(CHOOSE_PARAM)\n          }}\n        >params</Button>\n        }\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_PARAM\n      ?\n      <CenterMenu header={'props'} onClose={onClose}>\n        {am[actualToID].connectingParamIDs.map((paramID, key) => {\n          return (\n            <Button style={buttonStyle}\n              key={fromID + toID + key}\n              onClick={() => {\n                if (!connectionExists(connections, fromMod, actualToID, paramID)) {\n                  connect(\n                    am[actualFromID] as ConnectingAudioModule,\n                    am[actualToID] as ConnectingAudioModule,\n                    paramID,\n                    outputIndex,\n                    inputIndex,\n                  )\n                  dispatch(addConnection(\n                    fromID,\n                    toID,\n                    paramID,\n                    outputIndex,\n                    inputIndex,\n                    isFromContainer ? actualFromID : undefined,\n                    isToContainer ? actualToID : undefined,\n                  ))\n                } else {\n                  alert('modules already connected')\n                }\n                onClose()\n              }}\n            >{paramID}</Button>\n          )\n        })}\n      </CenterMenu>\n      :\n      null\n      }\n    </Fragment>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useRef, useState } from 'react'\nimport { CenterMenu } from '../../all'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\n\n\ninterface Props {\n  onClose: () => void\n  toRenameID: string\n}\n\nfunction RenameMenu({ toRenameID, onClose }: Props) {\n  const classes = useJSS()\n  const renameInputRef = useRef<HTMLInputElement>(null)\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  const [ isTooShort, setSubmitState] = useState(false)\n  function submitNewName() {\n    if (renameInputRef && renameInputRef.current) {\n      const newName = renameInputRef.current.value\n      if (newName.length === 0) {\n        setSubmitState(true)\n      } else {\n        dispatch(renameModule(toRenameID, newName))\n        onClose()\n      } \n    }\n  }\n  return (\n    <CenterMenu header='rename' onClose={onClose}>\n        <div className={classes.CMInputBounder}>\n          <input className={classes.CenterMenuInput}\n            placeholder={modules[toRenameID]?.name}\n            onKeyUp={event => {\n              if (event.keyCode === 13) {\n                submitNewName()\n              } else if (event.keyCode === 27) {\n                onClose()\n              }\n            }}\n            ref={renameInputRef}\n            autoFocus\n          />\n          <div className={classes.InputSubmit}\n            onClick={() => {submitNewName()}}\n          >enter</div>\n        </div>\n        {!isTooShort ? null :\n        <div className={classes.Error}>\n          please enter a name\n        </div>}\n      </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  onClose: () => void\n  onChangeSubmit: (newRange: Range) => void\n  modID: string\n  controlID: string\n}\n\nfunction RangeSetMenu({ onClose, modID, controlID, onChangeSubmit }: Props) {\n  const { maxRange, range } = useSelector((state: RootState) => state.modules[modID].controlData[controlID])\n  const [min, setMin] = useState((range as [number, number])[0])\n  const [max, setMax] = useState((range as [number, number])[1])\n  const classes = useJSS()\n  return (\n    <CenterMenu header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.keyCode === 27) {\n            onClose()\n          } else if (e.keyCode === 13) {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button onClick={() => {\n        if (maxRange) {\n          if (inRange(min, maxRange) && inRange(max, maxRange)) {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          } else {\n            alert('a value is not within maximum range bounds')\n          }\n        } else {\n          if (max > min) {\n            onChangeSubmit([min, max])\n            onClose()\n          } else {\n            alert('min must be less than max')\n          }\n        }\n      }}>\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default RangeSetMenu","import React, { useState, useRef } from 'react'\nimport CenterMenu from '../../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Button } from '../../all'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\n\ninterface Props {\n  saveList: string[]\n  onClose: () => void\n}\n\nfunction SaveMenu({ saveList, onClose }: Props) {\n  const [ baseContainerID, modules ] = useSelector((state: RootState) => [ state.baseContainerID, state.modules ])\n  const [saveName, setSaveName] = useState(modules[baseContainerID].name)\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const state = useSelector(state => state)\n  const inputRef = useRef<HTMLInputElement>(null)\n  return (\n    <CenterMenu header='save project' \n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n        <input style={{ fontSize: sizes.text.small }}\n          value={saveName}\n          placeholder={modules[baseContainerID].name}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.keyCode) {\n              case 13:\n                if (stringIn(saveName, saveList)) {\n                  setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n                } else {\n                  window.spaceDBSaveService.create({\n                    saveName,\n                    state\n                  })\n                  onClose()\n                }\n                break\n              case 27:\n                onClose()\n                break\n            }\n          }}\n          ref={inputRef}\n          autoFocus\n        />\n        <Button\n          onPointerDown={e => e.preventDefault()}\n          onClick={e => {\n            e.preventDefault()\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n            } else {\n              window.spaceDBSaveService.create({\n                saveName,\n                state\n              })\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n      </div>\n      {!confirmSaveData.isOpen ? null\n        :\n        <div>\n          <div>save already exists. do you want to replace it?</div>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n            <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n              onClick={() => {\n                inputRef.current?.focus()\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                window.spaceDBSaveService.update(saveName, state)\n                onClose()\n              }}\n            >yes</Button>\n          </div>\n        </div>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SaveMenu","import React, { useState, Fragment } from 'react'\nimport { makeConnectionMenuData, makeRangeSetMenuData, makeSaveMenuData } from './makeData'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport RenameMenu from './RenameMenu/RenameMenu'\nimport RangeSetMenu from './RangeSetMenu/RangeSetMenu'\nimport { Range } from '../../audioModules/moduleTypes'\nimport SaveMenu from './SaveMenu/SaveMenu'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (fromID: string, toID: string) => void\n    openRenameMenu: (toRenameID: string) => void\n    openRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n    openSaveMenu: (saveList: string[], onClose: () => void) => void\n  }\n}\n\nfunction CenterMenus() {\n  const [connectionMenuData, setConnectionMenuData] = useState(makeConnectionMenuData(false))\n  window.openConnectionMenu = (fromID, toID) => { setConnectionMenuData(makeConnectionMenuData(true, fromID, toID)) }\n  const [renameMenuData, setRenameMenuData] = useState({ isOpen: false, toRenameID: '' })\n  window.openRenameMenu = toRenameID => { setRenameMenuData({ isOpen: true, toRenameID }) }\n  const [rangeSetMenuData, setRangeSetMenuData] = useState(makeRangeSetMenuData(false))\n  window.openRangeSetMenu = (modID, controlID, onChangeSubmit) => { setRangeSetMenuData(makeRangeSetMenuData(true, modID, controlID, onChangeSubmit)) }\n  const [saveMenuData, setSaveMenuData] = useState(makeSaveMenuData(false))\n  window.openSaveMenu = (saveList, onClose) => { setSaveMenuData({ isOpen: true, saveList, onClose }) }\n  return (\n    <Fragment>\n      {\n        !connectionMenuData.isOpen ? null :\n        <ConnectionMenu fromID={connectionMenuData.fromID} toID={connectionMenuData.toID}\n          onClose={() => {\n            setConnectionMenuData(makeConnectionMenuData(false))\n          }}\n        />\n      }\n      {\n        !renameMenuData.isOpen ? null :\n        <RenameMenu toRenameID={renameMenuData.toRenameID} onClose={() => { setRenameMenuData({ isOpen: false, toRenameID: '' }) }} />\n      }\n      {\n        !rangeSetMenuData.isOpen ? null :\n        <RangeSetMenu modID={rangeSetMenuData.modID} \n          controlID={rangeSetMenuData.controlID}\n          onClose={() => {\n            setRangeSetMenuData(makeRangeSetMenuData(false))\n          }}\n          onChangeSubmit={newRange => {\n            rangeSetMenuData.onChangeSubmit(newRange)\n          }}\n        />\n      }\n      {\n        !saveMenuData.isOpen ? null :\n        <SaveMenu saveList={saveMenuData.saveList} \n          onClose={() => {\n            saveMenuData.onClose()\n            setSaveMenuData(makeSaveMenuData(false)) \n          }}\n        />\n      }\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  ControlType,\n  FILE,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\n\nfunction makeAddModule() {\n  return function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData: ControlData = {\n          'choose file': {\n            controlType: FILE as ControlType,\n            paramID: 'n/a'\n          }\n        }\n        window.addAudioTag(id); window.reRenderAudioTags(); \n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0'])); \n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { RightDrawer, ModuleViewFill, AudioTags, CenterMenus, PointerLayer } from '../components/all'\nimport { AudioModules, ModuleType } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { Dispatch } from 'redux'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\n\ndeclare global {\n  interface Window { \n    highlightedID: string\n    fillContainerID: string\n    audioModules: AudioModules\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.highlightedID = 'project' // make this '', for dev\nwindow.fillContainerID = 'project'\n\nwindow.audioModules = {}\nwindow.addModule = makeAddModule()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder} onPointerDown={() => {\n      window.currUnHighlight()\n      window.currUnHighlight = () => { }\n    }}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModuleAction = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModuleAction","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      toContainerControls: [ ...state[modID].toContainerControls, actualModID+controlID ]\n    },\n    [parentID]: {\n      ...state[parentID],\n      containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID }],\n    }\n  })\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      toContainerControls: state[modID].toContainerControls.filter(toContainerControlID => toContainerControlID !== actualModID+controlID)\n    },\n    [parentID]: {\n      ...state[parentID],\n      containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n        return containerControl.modID !== modID || \n          containerControl.controlID !== controlID || \n          containerControl.actualModID !== actualModID\n      }),\n    }\n  })\n}\n\nexport default unmarkContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  toContainerControls: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nlet connectionNumber = 0\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = `${fromID} ${toID} ${connectionNumber}`\n  connectionNumber++\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: [\n          ...modules[containerOutputChildID].outputs,\n          connectionID,\n        ]\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: [\n          ...modules[containerInputChildID].inputs,\n          connectionID,\n        ]\n      }\n    },),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","export function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    for (var i = 0; i < idsToFilterOut.length; i++) {\n      if (entry[0] === idsToFilterOut[i]) {\n        return false\n      }\n    }\n    return true\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    for (var i = 0; i < idsToKeep.length; i++) {\n      if (entry[0] === idsToKeep[i]) {\n        return true\n      }\n    }\n    return false\n  }))\n}\n\nexport function ObjFrom2Arrays(arr1: string[], arr2: any[]) {\n  if (arr1.length === arr2.length) {\n    return Object.fromEntries(arr1.map((id, index) => {\n      return [id, arr2[index]]\n    }))\n  }\n  return false\n}","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const trimmedModules = filterOutFromObj(modules, [ id ]) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, [...modules[id].inputs, ...modules[id].outputs]),\n  }\n}\n\nexport default removeModule","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action?: ConnectionAction): ConnectionReducerReturn => {\n  if (action) {\n    switch (action.type) {\n      case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n      case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n      case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n      default: return { newModules: modules, newConnections: connections }\n    }\n  } else {\n    return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\n\nconst initState = {\n  modules: moduleReducer(),\n  connections: {},\n  baseContainerID: bcidReducer(),\n}\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    const newState = (action as RootAction).state\n    return Object.assign(newState, newState.connections ? {} : {\n      connections: {}\n    })\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    return {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n  }\n}\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}