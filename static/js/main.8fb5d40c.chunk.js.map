{"version":3,"sources":["theme/theme.ts","App/style.ts","components/RightDrawer/style.ts","components/RightDrawer/DrawerRouteLink.tsx","components/RightDrawer/DrawerItem.tsx","audioModules/moduleTypes.ts","components/RightDrawer/ModuleIcons/BaseModules.tsx","components/RightDrawer/RightDrawer.tsx","components/LeftDrawer/style.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","components/LeftDrawer/RenameMenu.tsx","audioModules/connection.ts","components/LeftDrawer/LeftDrawer.tsx","components/ModuleView/style.ts","components/ModuleView/ConnectionMenu.tsx","components/ModuleView/Icon.tsx","helpers/genFuncs.ts","components/ModuleView/DropSquare.tsx","components/ModuleView/helpers.ts","components/ModuleView/Fill.tsx","components/HorizontalScrollDiv/HorizontalScrollDiv.tsx","components/CenterMenu/style.ts","components/CenterMenu/CenterMenu.tsx","components/MrTesterr/style.ts","components/MrTesterr/MrTesterr.tsx","components/Button/style.ts","components/Button/Button.tsx","audioCtx.ts","audioModules/modules/oscillator.ts","audioModules/modules/gain.ts","audioModules/modules/output.ts","audioModules/modules/autoFilter.ts","audioModules/modules/kompressor.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/constant.ts","audioModules/modules/mediaElement.ts","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","audioModules/makeAddModule.ts","App/App.tsx","serviceWorker.ts","redux/modules/reducers/addModule.ts","redux/modules/reducers/removeModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/addConnection.ts","redux/modules/reducers/removeConnection.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["colors","sizes","width","toggleWidth","item","iconGrid","gutterGrid","icon","large","medium","small","xsmall","size","borderRadius","useJSS","createUseStyles","Bounder","backgroundColor","height","display","fontSize","color","position","top","left","userSelect","zIndex","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","overflowX","overflowY","DrawerBounder","Drawer","DrawerHeader","DrawerHeaderItem","padding","textDecoration","whiteSpace","cursor","ItemRouter","flexFlow","alignContent","DrawerItem","boxShadow","margin","DrawerIcon","borderColor","borderStyle","marginBottom","DrawerItemText","Toggle","ToggleLine","DrawerRouteLink","className","text","onClick","linkStyle","selectedRoute","style","numAdds","fullName","id","moduleType","classes","draggable","onDragStart","event","dataTransfer","setData","window","setFillIsExpanded","onDragEnd","VALUE","BaseModules","RightDrawer","useState","open","setOpen","closed","drawerSpring","useSpring","right","config","tension","clamp","setSR","div","LeftDrawer","TopItems","maxHeight","HeaderScrollBounder","borderWidth","textAlign","justifyText","resize","MenuHeader","Connection","ControlMenu","ControlBounder","ControlInput","maxWidth","ControlTypeSelect","BottomItems","CMInputBounder","CenterMenuInput","InputSubmit","Error","moveModule","newRow","newCol","type","addConnection","fromID","toID","param","removeConnection","RenameMenu","setRMOpen","renameInputRef","useRef","modules","useSelector","state","dispatch","useDispatch","isTooShort","setSubmitState","submitNewName","current","newName","value","length","renameModule","highlightedID","reRenderLeftDrawer","header","onClose","placeholder","name","onKeyUp","keyCode","ref","autoFocus","connect","fromMod","toMod","audioNode","console","log","alert","disconnect","isOpen","setLeftDrawerOpen","springStyle","velocity","isRenameMenuOpen","selectedModule","am","audioModules","audioModule","toReRender","setReRender","Fragment","inputs","map","inputData","key","outputs","outputData","Object","keys","controlData","controlID","index","controlType","paramID","range","setFunc","controlSetFuncs","min","undefined","max","step","onChange","e","target","htmlFor","typeTypes","opacity","file","files","URL","createObjectURL","audioTags","srcName","reRenderAudioTags","overflowWrap","wordWrap","hyphens","forEach","FillBounder","FillHeader","marginLeft","Fill","minHeight","justifyItems","ArcherContainer","Icon","IconName","IconConnector","DropSquare","buttonStyle","ConnectionMenu","toType","openMenu","setOpenMenu","fromName","toName","connectingParamIDs","stopPropagation","currSetHighlighted","setHighlighted","ModuleViewIcon","mod","gridCol","gridRow","isHighlighted","iconStyle","gridColumn","cmState","setCMState","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","getData","fromRow","fromCol","row","col","Number","setTimeout","refreshArcherContainer","linkToOutputID","start","stop","out","i","push","isHL","setHL","dsStyle","fc","fillContainerID","currentChildren","childModules","concat","possiblyMod","possiblyOccupyingID","isOccupied","parentID","addModule","iconGridSize","gutterGridSize","ModuleViewFill","containerModule","isExpanded","setIsExpanded","gridStyle","maxRow","maxCol","moduleID","getGridRange","isEmpty","gridTemplateRows","gridTemplateColumns","archerContainerRef","refreshScreen","flat","arrowLength","placeSelf","bottom","relations","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","baseStyle","HorizontalScrollDiv","children","baseStyleCopy","assign","onWheel","scrollLeft","deltaY","CenterMenuBounder","CenterMenu","transform","border","Header","TestingArea","ButtonDiv","Button","MrTesterr","audioCtx","AudioContext","oscillatorTypes","makeOscillator","oscillator","createOscillator","newType","newFrequency","frequency","newDetune","detune","makeGain","gainAmount","gain","createGain","updateGain","newGain","newFineGain","makeOutput","arg","resume","suspend","destination","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","newQ","Q","makeKompressor","kompressor","createDynamicsCompressor","newThreshold","threshold","newKnee","knee","newRatio","ratio","newAttack","attack","newRelease","release","makeStereoPanner","stereoPanner","createStereoPanner","newPan","pan","makeSignalDelay","signalDelay","createDelay","newDelayTime","delayTime","constantSourceTypes","makeConstantSource","constantSource","createConstantSource","offset","setValFuncs","newValue","linearRampToValueAtTime","currentTime","exponentialRampToValueAtTime","makeMediaElement","audioRef","mediaElement","createMediaElementSource","url","src","AudioTag","useEffect","possiblyMediaElement","autoPlay","addAudioTag","AudioTags","reRender","ids","makeAddModule","App","Boolean","location","hostname","match","isBaseContainer","removeModule","trimmedState","fromEntries","entries","filter","entry","childID","moveModuleAction","renameContainer","initState","moduleReducer","action","addModuleReducer","removeModuleReducer","moveModuleReducer","renameModuleReducer","addConnectionReducer","removeConnectionReducer","bcidReducer","newID","rootReducer","combineReducers","baseContainerID","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yOAMaA,EAJA,UAIAA,EAKE,QALFA,EAMG,UANHA,EAOO,UAPPA,EASC,QATDA,EAWC,QAXDA,EAaC,UAbDA,EAcH,UAdGA,EAgBL,QAhBKA,EAiBG,UAjBHA,EAmBG,QAnBHA,EAqBI,QArBJA,EAsBG,UAtBHA,EAyBM,UAzBNA,EA2BM,MAGNC,EACE,CACXC,MAAO,OACPC,YAAa,UACbC,KAAM,UAJGH,EAMC,CACVC,MAAO,QAPED,EASC,CACVI,SAAU,SACVC,WAAY,QACZC,KAAM,SAZGN,EAcL,CACJO,MAAO,uBACPC,OAAQ,uBACRC,MAAO,uBACPC,OAAQ,qBAlBCV,EAoBA,CACTW,KAAM,QACNC,aAAc,WCvBHC,EAhCAC,YAAgB,CAC7BC,QAAS,CACPC,gBAAiBjB,EACjBE,MAAO,QACPgB,OAAQ,QACRC,QAAS,OACTC,SAAU,qBACVC,MAAO,QACPC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,OACZC,OAAQ,KACRC,SAAU,UAGZC,kBAAmB,CACjBC,SAAU,OACVX,OAAQ,QACRC,QAAS,OACTW,cAAe,MACfC,WAAY,aACZC,eAAgB,aAChBN,OAAQ,EACRO,UAAW,SACXC,UAAW,SACX,uBAAwB,CACtBhC,MAAO,U,OC+FEY,EA1HAC,YAAgB,CAC7BoB,cAAe,CACblB,gBAAiBjB,EACjBkB,OAAQ,QACRC,QAAS,OACTW,cAAe,MACfC,WAAY,SACZC,eAAgB,aAChBX,MAAO,QACPC,SAAU,WACVC,IAAK,MACLE,WAAY,OACZC,OAAQ,MAGVU,OAAQ,CACNlB,OAAQ,QACRhB,MAAOD,EAAkBC,MACzBiB,QAAS,OACTW,cAAe,SACfC,WAAY,SACZC,eAAgB,cAKlBK,aAAc,CACZlB,QAAS,OACTW,cAAe,MACfC,WAAY,SACZC,eAAgB,aAChB9B,MAAOD,EAAkBC,MACzB+B,UAAW,SACX,uBAAwB,CACtBf,OAAQ,OAEV,6BAA8B,CAC5BD,gBAAiB,UAIrBqB,iBAAkB,CAChBlB,SAAUnB,EAAWO,MACrB+B,QAAS,gBACTlB,MAAOrB,EACPwC,eAAgB,OAChBC,WAAY,SACZ,UAAW,CACTC,OAAQ,YAIZC,WAAY,CACVxB,QAAS,OACTyB,SAAU,WACVZ,eAAgB,aAChBD,WAAY,aACZc,aAAc,aACd3C,MAAOD,EAAkBC,MACzBgB,OAAQ,oBACRgB,UAAW,SACX,uBAAwB,CACtBhC,MAAO,OAET,6BAA8B,CAC5Be,gBAAiB,UAMrB6B,WAAY,CACV3B,QAAS,OACTW,cAAe,SACfC,WAAY,SACZC,eAAgB,eAChBnB,aAAc,OACdkC,UAAW,mEACXC,OAAQ,SAGVC,WAAY,CACVhC,gBAAiBjB,EACjBkD,YAAalD,EACbmD,YAAa,QACbjD,MAAOD,EAAkBG,KACzBc,OAAQjB,EAAkBG,KAC1BS,aAAc,UACdkC,UAAW,mEACXK,aAAc,UACd,UAAW,CACTV,OAAQ,UACRQ,YAAa,UAIjBG,eAAgB,CACdjC,SAAUnB,EAAWS,OAKvB4C,OAAQ,CACNrC,gBAAiBjB,EACjBE,MAAOD,EAAkBE,YACzBe,OAAQ,OACRC,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChB,UAAW,CACTU,OAAQ,YAIZa,WAAY,CACVtC,gBAAiBjB,EACjBa,aAAc,MACdX,MAAO,WACPgB,OAAQ,U,QC1FGsC,MApBf,YAA8E,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QACpCC,EAAY,CAChBvC,MAFyE,EAAxBwC,gBAEvBH,EAAQ1D,EAAsBA,GAW1D,OACE,yBAAKyD,UAAWA,EAAWE,QAASA,EAASG,MAAOF,GACjDF,ICjBHK,EAAU,EA2BCjB,MAzBf,YAA0D,IAApCkB,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,WAC5BC,EAAUrD,IAChB,OACE,yBAAK2C,UAAWU,EAAQrB,YACtB,yBACEW,UAAWU,EAAQlB,WACnBmB,WAAW,EACXC,YAAa,SAAAC,GACXA,EAAMC,aAAaC,QAAQ,KAA3B,UAAoCP,EAApC,YAA0CF,IAC1CO,EAAMC,aAAaC,QAAQ,aAAcN,GACzCI,EAAMC,aAAaC,QAAQ,OAAQP,GACnCQ,OAAOC,mBAAkB,GACzBX,GAAS,GAEXY,UAAW,WACTF,OAAOC,mBAAkB,MAG7B,yBAAKjB,UAAWU,EAAQd,gBACrBW,KCQIY,EAAQ,QCNNC,MAjBf,WACE,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYb,SAAS,aAAaC,GAAG,MAAMC,WDJvB,eCKpB,kBAAC,EAAD,CAAYF,SAAS,MAAMC,GAAG,QAAQC,WDEf,kBCDvB,kBAAC,EAAD,CAAYF,SAAS,OAAOC,GAAG,OAAOC,WDPxB,SCQd,kBAAC,EAAD,CAAYF,SAAS,SAASC,GAAG,MAAMC,WDNvB,WCOhB,kBAAC,EAAD,CAAYF,SAAS,cAAcC,GAAG,SAASC,WDN3B,eCOpB,kBAAC,EAAD,CAAYF,SAAS,aAAaC,GAAG,OAAOC,WDNxB,eCOpB,kBAAC,EAAD,CAAYF,SAAS,gBAAgBC,GAAG,MAAMC,WDNvB,kBCOvB,kBAAC,EAAD,CAAYF,SAAS,eAAeC,GAAG,MAAMC,WDNvB,iBCOtB,kBAAC,EAAD,CAAYF,SAAS,WAAWC,GAAG,QAAQC,WDNzB,aCOlB,kBAAC,EAAD,CAAYF,SAAS,YAAYC,GAAG,QAAQC,WDfzB,gBEkDVY,MAtDf,WACE,IAAMX,EAAUrD,IADK,EAEGiE,oBAAS,GAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAGfC,EAAS,IAAMjF,EAAkBC,MACjCiF,EAAeC,YAAU,CAC7BC,MAAOL,EAAO,MAAQE,EACtBI,OAAQ,CACNC,QAAS,IACTC,OAAO,KARU,EAWUT,mBAAS,gBAXnB,mBAWdlB,EAXc,KAWC4B,EAXD,KAYrB,OACE,kBAAC,IAASC,IAAV,CAAcjC,UAAWU,EAAQhC,cAAe2B,MAAOqB,GACrD,yBAAK1B,UAAWU,EAAQb,OAAQK,QAAS,WAAOsB,GAASD,KACvD,yBAAKvB,UAAWU,EAAQZ,WAAYI,QAAS,WAAOsB,GAASD,OAE/D,yBAAKvB,UAAWU,EAAQ/B,QACtB,kBAAC,GAAD,CAAqBqB,UAAWU,EAAQ9B,cACtC,kBAAC,EAAD,CACEoB,UAAWU,EAAQ7B,iBACnBoB,KAAK,eACLC,QAAS,WAAO8B,EAAM,iBACtB5B,cAAeA,IAEjB,kBAAC,EAAD,CACEJ,UAAWU,EAAQ7B,iBACnBoB,KAAK,eACLC,QAAS,WAAO8B,EAAM,iBACtB5B,cAAeA,IAEjB,kBAAC,EAAD,CACEJ,UAAWU,EAAQ7B,iBACnBoB,KAAK,WACLC,QAAS,WAAO8B,EAAM,aACtB5B,cAAeA,KAGnB,yBAAKJ,UAAWU,EAAQxB,YAEF,iBAAlBkB,EACA,kBAAC,EAAD,MACkB,iBAAlBA,GAEkB,aAAlBA,EADA,8BAGA,SC0JG/C,EA7MAC,YAAgB,CAC7B4E,WAAY,CACV1E,gBAAiBjB,EACjBkB,OAAQ,QACRC,QAAS,OACTW,cAAe,SACfC,WAAY,SACZC,eAAgB,gBAChBZ,SAAU,qBACVC,MAAO,QACPI,WAAY,OACZE,SAAU,SACVc,WAAY,SACZf,OAAQ,MAKVkE,SAAU,CACRzE,QAAS,OACTW,cAAe,SACfE,eAAgB,aAChBD,WAAY,SACZ7B,MAAO,OACP2F,UAAW,MACX5D,UAAW,SACXC,UAAW,SACX,uBAAwB,CACtBhC,MAAO,OAET,6BAA8B,CAC5Be,gBAAiB,UAMrB6E,oBAAqB,CACnB5F,MAAO,OACPiB,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChBkB,YAAa,QACbC,YAAa,uBACb,uBAAwB,CACtBjC,OAAQ,OAEV,6BAA8B,CAC5BD,gBAAiB,UAIrBoB,aAAc,CACZnC,MAAO,OACPgB,OAAQ,MACRuB,WAAY,SACZxB,gBAAiB,cACjBI,MAAO,QACPD,SAAUnB,EAAWO,MACrB+B,QAAS,cACTwD,YAAa,MACb5E,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChBgE,UAAW,SACXC,YAAa,SACbC,OAAQ,OACRvE,SAAU,SACV,UAAW,CACTe,OAAQ,YAIZyD,WAAY,CACV/E,SAAUnB,EAAWQ,OACrB0C,YAAa,uBACbH,OAAQ,QACR9C,MAAO,OAGTkG,WAAY,CACVhF,SAAUnB,EAAWS,MACrBO,gBAAiBjB,EACjBgD,OAAQ,eACRnC,aAAc,QACdqC,YAAa,cACbC,YAAa,QACbtB,SAAU,MACVU,QAAS,QACTpB,QAAS,OACTa,eAAgB,SAChBD,WAAY,SACZ,UAAW,CACTW,OAAQ,UACRQ,YAAalD,GAEf+C,UAAW,oEAKbsD,YAAa,CACXlF,QAAS,OACTW,cAAe,SACf5B,MAAO,OACP6B,WAAY,UAGduE,eAAgB,CACdnF,QAAS,OACTyB,SAAU,WACV1C,MAAO,OACP8B,eAAgB,eAChBD,WAAY,SACZQ,QAAS,QACTnB,SAAUnB,EAAWS,OAGvB6F,aAAc,CACZ1E,SAAU,QACV2E,SAAU,MACVxD,OAAQ,QACR5B,SAAUnB,EAAWS,OAGvB+F,kBAAmB,CACjB5E,SAAU,QACV2E,SAAU,MACVxD,OAAQ,QACR5B,SAAUnB,EAAWS,OAKvBgG,YAAa,CACXvF,QAAS,OACTW,cAAe,SACfE,eAAgB,aAChBD,WAAY,SACZ7B,MAAO,OACP2F,UAAW,MACX5D,UAAW,SACXC,UAAW,SACX,uBAAwB,CACtBhC,MAAO,OAET,6BAA8B,CAC5Be,gBAAiB,UAMrB0F,eAAgB,CACdxF,QAAS,OACTW,cAAe,MACfC,WAAY,SACZC,eAAgB,UAIlB4E,gBAAiB,CACf3F,gBAAiBjB,EACjBqB,MAAO,QACPH,OAAQ,QACRqB,QAAS,QACTS,OAAQ,kCACRG,YAAa,OACbtC,aAAc,QACdO,SAAUnB,EAAWS,MACrBR,MAAO,SACP,UAAW,CACTwC,OAAQ,SAIZmE,YAAa,CACX1F,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChBf,gBAAiBjB,EACjBkB,OAAQ,QACRqB,QAAS,QACTS,OAAQ,mCACRnC,aAAc,QACd,UAAW,CACT6B,OAAQ,WAEVtB,SAAUnB,EAAWS,OAGvBoG,MAAO,CACL7F,gBAAiBjB,EACjBE,MAAO,MACPmB,MAAO,QACPD,SAAUnB,EAAWS,MACrBS,QAAS,OACTa,eAAgB,SAChBD,WAAY,SACZlB,aAAc,QACd0B,QAAS,cACTa,aAAc,W,OC/KL2D,EAAa,SAAC9C,EAAY+C,EAAgBC,GACrD,MAAO,CACLC,KC7BuB,cD8BvBjD,KACA+C,SACAC,WAYSE,EAAgB,SAACC,EAAgBC,GAA8B,IAAhBC,EAAe,uDAAP,GAClE,MAAO,CACLJ,KC5C0B,iBD6C1BE,SACAC,OACAC,UAISC,EAAmB,SAACH,EAAgBC,GAA8B,IAAhBC,EAAe,uDAAP,GACrE,MAAO,CACLJ,KCpD6B,oBDqD7BE,SACAC,OACAC,UEHWE,MA7Cf,YAA2C,IAArBC,EAAoB,EAApBA,UACdtD,EAAUrD,IACV4G,EAAiBC,iBAAyB,MAC1CC,EAAUC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,WAClDG,EAAWC,cAJuB,EAKFjD,oBAAS,GALP,mBAKhCkD,EALgC,KAKpBC,EALoB,KAMxC,SAASC,IACP,GAAIT,GAAkBA,EAAeU,QAAS,CAC5C,IAAMC,EAAUX,EAAeU,QAAQE,MAChB,IAAnBD,EAAQE,OACVL,GAAe,IAEfH,EFcoB,SAAC9D,EAAYoE,GACvC,MAAO,CACLnB,KCrCyB,gBDsCzBjD,KACAoE,WElBaG,CAAa/D,OAAOgE,cAAeJ,IAC5C5D,OAAOiE,qBACPjB,GAAU,KAIhB,OACE,kBAAC,GAAD,CAAYkB,OAAO,SAASC,QAAS,WAAOnB,GAAU,KAClD,yBAAKhE,UAAWU,EAAQwC,gBACtB,2BAAOlD,UAAWU,EAAQyC,gBACxBiC,YAAajB,EAAQnD,OAAOgE,eAAeK,KAC3CC,QAAS,SAAAzE,GACe,KAAlBA,EAAM0E,QACRb,IAC2B,KAAlB7D,EAAM0E,SACfvB,GAAU,IAGdwB,IAAKvB,EACLwB,WAAS,IAEX,yBAAKzF,UAAWU,EAAQ0C,YACtBlD,QAAS,WAAOwE,MADlB,UAIAF,EACF,yBAAKxE,UAAWU,EAAQ2C,OAAxB,uBADe,OC/ChB,SAASqC,EAAQC,EAAgCC,GAAiC,IAAb/B,EAAY,uDAAJ,GAC7D,IAAjBA,EAAMiB,QACRa,EAAQE,UAAUH,QAAQE,EAAMC,WAChCC,QAAQC,IAAR,oBAAyBJ,EAAQE,UAAjC,eAAiDD,EAAMC,aAEnDD,EAAMC,UAAUhC,GAClB8B,EAAQE,UAAUH,QAAQE,EAAMC,UAAUhC,IAE1CmC,MAAM,wBAKL,SAASC,EAAWN,EAAgCC,GAAiC,IAAb/B,EAAY,uDAAJ,GAChE,IAAjBA,EAAMiB,OACRa,EAAQE,UAAUI,WAAWL,EAAMC,WAE/BD,EAAMC,UAAUhC,GAClB8B,EAAQE,UAAUI,WAAWL,EAAMC,UAAUhC,IAE7CmC,MAAM,wBCgMG9D,MAlMf,WACE,IAAMxB,EAAUrD,IADI,EAEMiE,oBAAS,GAFf,mBAEb4E,EAFa,KAEL1E,EAFK,KAGpBR,OAAOmF,kBAAoB3E,EAC3B,IAAM4E,EAAczE,YAAU,CAC5BlF,MAAOyJ,EAAS1J,EAAiBC,MAAQ,MACzCoF,OAAQ,CACNC,QAAS,IACTuE,SAAU,GACVtE,OAAO,KAGLuC,EAAWC,cAZG,EAakBjD,oBAAS,GAb3B,mBAabgF,EAba,KAaKtC,EAbL,KAcdG,EAAUC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,WAClDoC,EAAiBpC,EAAQnD,OAAOgE,eAChCwB,EAAKxF,OAAOyF,aACZC,EAAcF,EAAGxF,OAAOgE,eAjBV,EAkBc1D,oBAAS,GAlBvB,mBAkBbqF,EAlBa,KAkBDC,EAlBC,KAoBpB,OADA5F,OAAOiE,mBAAqB,WAAO2B,GAAaD,IAE9C,kBAAC,IAAME,SAAP,KACE,kBAAC,IAAS5E,IAAV,CAAcjC,UAAWU,EAAQwB,WAAY7B,MAAO+F,GAClD,yBAAKpG,UAAWU,EAAQyB,UACtB,kBAAC,GAAD,CAAqBnC,UAAWU,EAAQ2B,qBACtC,yBAAKrC,UAAWU,EAAQ9B,aAAcsB,QAAS,WAC7C8D,GAAU,KAETuC,EAAiBA,EAAelB,KAAO,OAG1CkB,EAAyD,IAAjCA,EAAeO,OAAOhC,OAAe,KAC7D,yBAAK9E,UAAWU,EAAQgC,YAAxB,UADiB,KAGjB6D,EAAwBA,EAAeO,OAAOC,KAAI,SAACC,EAAWC,GAC9D,IAAM5B,EAAOlB,EAAQ6C,EAAU,IAAI3B,KACnC,OACE,yBAAKrF,UAAWU,EAAQiC,WACtBsE,IAAKD,EAAU,GAAKC,EACpB/G,QAAS,WACPoE,EAASR,EAAiBkD,EAAU,GAAIT,EAAe/F,GAAIwG,EAAU,KACrEf,EAAWO,EAAGQ,EAAU,IAA8BR,EAAGD,EAAe/F,IAAKwG,EAAU,MAGhE,IAAxBA,EAAU,GAAGlC,OAAeO,EAA5B,UAAsCA,EAAtC,cAAgD2B,EAAU,QAV9C,KAcjBT,EAA0D,IAAlCA,EAAeW,QAAQpC,OAAe,KAC9D,yBAAK9E,UAAWU,EAAQgC,YAAxB,WADiB,KAGjB6D,EAAwBA,EAAeW,QAAQH,KAAI,SAACI,EAAYF,GAChE,IAAM5B,EAAOlB,EAAQgD,EAAW,IAAI9B,KACpC,OACE,yBAAKrF,UAAWU,EAAQiC,WACtBsE,IAAKE,EAAW,GAAKF,EACrB/G,QAAS,WACPoE,EAASR,EAAiByC,EAAe/F,GAAI2G,EAAW,GAAIA,EAAW,KACvElB,EAAWO,EAAGD,EAAe/F,IAA8BgG,EAAGW,EAAW,IAAKA,EAAW,MAElE,IAAzBA,EAAW,GAAGrC,OAAeO,EAA7B,UAAuCA,EAAvC,cAAiD8B,EAAW,QAT/C,MAarB,yBAAKnH,UAAWU,EAAQkC,aACtB,yBAAK5C,UAAWU,EAAQgC,YAAxB,YACCgE,EAAcU,OAAOC,KAAKX,EAAYY,aAAaP,KAAI,SAACQ,EAAWC,GAAW,IAAD,EAC7Bd,EAAYY,YAAYC,GAA/DE,EADoE,EACpEA,YAAaC,EADuD,EACvDA,QAAS7C,EAD8C,EAC9CA,MAAO8C,EADuC,EACvCA,MAC/BC,EAAUlB,EAAYmB,gBAAgBN,GACtC1B,EAAYa,EAAYb,UAC9B,OACE,yBAAK7F,UAAWU,EAAQmC,eAAgBoE,IAAKV,EAAe/F,GAAKgH,GAC9DC,IAAgBtG,EAEjB,kBAAC,WAAD,KACE,6BAAMoG,GACN,2BAAOvH,UAAWU,EAAQoC,aACxBW,KAAK,SACLoB,MAAyB,kBAAXA,EAAsBA,EAAQgB,EAAU6B,GAAS7C,MAC/DiD,IAAKH,EAAQA,EAAM,QAAKI,EACxBC,IAAKL,EAAQA,EAAM,QAAKI,EACxBE,KAAON,GAAoBA,EAAM,GAAKA,EAAM,QAA7BI,EACfG,SAAU,SAACC,GACTP,EAAQO,EAAEC,OAAOvD,OACjB7D,OAAOiE,yBRjEP,WQsENwC,EAEA,kBAAC,GAAD,CAAQpH,MAAO,CAEXZ,YAAalD,EACbE,MAAO,OAETyD,QAAS,WACP0H,EAAQ,MAEVL,GRlFE,SQoFJE,EAEA,kBAAC,WAAD,KACE,2BAAOY,QAAS,QAAhB,eACA,4BAAQrI,UAAWU,EAAQsC,kBACzBqC,KAAK,OAAO7E,GAAG,OACf0H,SAAU,SAACC,GACTP,EAAQO,EAAEC,OAAOvD,OACjB7D,OAAOiE,sBAETJ,MAAOA,GAAgBgB,EAAUpC,MAE/BiD,EAAqC4B,UAAUvB,KAAI,SAAAtD,GACnD,OACE,4BAAQoB,MAAOpB,EAAMwD,IAAKV,EAAe/F,GAAKiD,GAAOA,QR/FzD,SQqGJgE,EAEA,yBAAKzH,UAAWU,EAAQkC,aACtB,2BAAOvC,MAAO,CAAEjC,SAAU,OACxBiK,QAASrH,OAAOgE,cAAgBuC,GAEhC,kBAAC,GAAD,CAAQlH,MAAO,CAEbZ,YAAalD,IAFf,gBAMF,2BAAO8D,MAAO,CAAE5D,MAAO,EAAGgB,OAAQ,EAAG8K,QAAS,GAC5C9E,KAAK,OACLjD,GAAIQ,OAAOgE,cAAgBuC,EAC3BW,SAAU,SAACC,GACT,IAAMK,EAASL,EAAEC,OAA4BK,MAAmB,GAChEb,EAAQc,IAAIC,gBAAgBH,IAC5BxH,OAAO4H,UAAU5H,OAAOgE,eAAe6D,QAAUL,EAAKnD,KACtDrE,OAAO8H,oBACP9H,OAAOiE,wBAGX,uBAAG5E,MAAO,CACR1C,SAAUnB,EAAWU,OACrBqF,UAAW,SACXvD,WAAY,SACZT,eAAgB,SAChB9B,MAAO,OACPsM,aAAc,aACdC,SAAU,aACVC,QAAS,SAERjI,OAAO4H,UAAU5H,OAAOgE,eAAe6D,UAI5C,SAID,MAEP,yBAAK7I,UAAWU,EAAQuC,aACtB,kBAAC,GAAD,CAAQ5C,MAAO,CACbZ,YAAalD,EAEbE,MAAO,MACPkB,SAAUnB,EAAWS,OAErBiD,QAAS,WACPqG,EAAeO,OAAOoC,SAAQ,SAAAlC,GAC5Bf,EAAWO,EAAGQ,EAAU,IAA8BN,EAAaM,EAAU,IAC7E1C,EAASR,EAAiBkD,EAAU,GAAIT,EAAe/F,GAAIwG,EAAU,QAEvET,EAAeW,QAAQgC,SAAQ,SAAA/B,GAC7BlB,EAAWS,EAAsCF,EAAGW,EAAW,IAAKA,EAAW,IAC/E7C,EAASR,EAAiByC,EAAe/F,GAAI2G,EAAW,GAAIA,EAAW,QAEzE7C,EJjLL,CACLb,KCvByB,gBDwBzBjD,GI+KgCQ,OAAOgE,gBAC7BhE,OAAOmF,mBAAkB,GACzBnF,OAAOgE,cAAgB,KAjB3B,YAuBFsB,EACF,kBAAC,EAAD,CAAYtC,UAAWA,IADF,OCrHZ3G,EAxFAC,YAAgB,CAC7B6L,YAAa,CACX3L,gBAAiBjB,EACjBmB,QAAS,OACTW,cAAe,SACfkB,OAAQ,SACRD,UAAW,mEACXlC,aAAc,SAGhBgM,WAAY,CACV3J,YAAa,QACbC,YAAa,uBACbZ,QAAS,QACTuK,WAAY,QACZ,UAAW,CACTpK,OAAQ,YAIZqK,KAAM,CACJ5L,QAAS,OACTU,SAAU5B,EAAiBI,SAC3B2M,UAAW/M,EAAiBI,SAC5B0B,WAAY,SACZkL,aAAc,SACd1K,QAAS,QACTb,OAAQ,GAGVwL,gBAAiB,CACfhN,MAAO,OACPgB,OAAQ,OACRQ,OAAQ,EACRP,QAAS,QAGXgM,KAAM,CACJlM,gBAAiBjB,EACjBE,MAAOD,EAAiBM,KACxBW,OAAQjB,EAAiBM,KACzBM,aAAc,UACdsC,YAAa,OACbD,YAAa,QACbT,WAAY,OACZrB,SAAUnB,EAAWQ,OACrB8B,QAAS,QACTpB,QAAS,OACTyB,SAAU,gBACVb,WAAY,WACZC,eAAgB,gBAChBL,SAAU,SACVoB,UAAW,mEACX,UAAW,CACTL,OAAQ,UACRS,YAAa,SAEfzB,OAAQ,GAGV0L,SAAU,CACRhM,SAAUnB,EAAWS,OAGvB2M,cAAe,CACbpM,gBAAiBjB,EACjBE,MAAOD,EAAgBW,KACvBM,OAAQjB,EAAgBW,KACxBC,aAAcZ,EAAgBY,aAC9BkC,UAAW,mEACXI,YAAa,OACbD,YAAa,QACb,UAAW,CACTR,OAAQ,UACRS,YAAa,UAIjBmK,WAAY,CACVpN,MAAOD,EAAiBI,SACxBa,OAAQjB,EAAiBI,SACzB8C,YAAa,OACbD,YAAalD,EACba,aAAc,OACda,OAAQ,KCvEN6L,EAA8B,GA8DrBC,MA1Df,YAAmE,IAAzCpG,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,KAAMoG,EAA0B,EAA1BA,OAAQ7E,EAAkB,EAAlBA,QAAkB,EAChC7D,mBAAS,GADuB,mBACzD2I,EADyD,KAC/CC,EAD+C,KAE1D1D,EAAKxF,OAAOyF,aACZnC,EAAWC,cAH+C,EAInCH,aAAY,SAACC,GACxC,MAAO,CACL8F,SAAU9F,EAAMF,QAAQR,GAAQ0B,KAChC+E,OAAQ/F,EAAMF,QAAQP,GAAMyB,SAHxB8E,EAJwD,EAIxDA,SAAUC,EAJ8C,EAI9CA,OAMlB,OACE,kBAAC,WAAD,KACgB,IAAbH,EACC,kBAAC,GAAD,CAAY/E,OAAM,kBAAaiF,EAAb,eAA4BC,GAAUjF,QAAS,WAC/D+E,EAAY,GACZ/E,MVrBgB,eUuBf6E,GVjBa,aUiBYA,EAAsB,KAChD,kBAAC,GAAD,CAAQ3J,MAAOyJ,EACb5J,QAAS,WACPwF,EAAQc,EAAG7C,GAAkC6C,EAAG5C,IAChDU,EAASZ,EAAcC,EAAQC,IAC/BsG,EAAY,GACZ/E,MALJ,UAQwC,IAAvCqB,EAAG5C,GAAMyG,mBAAmBvF,OAAe,KAC5C,kBAAC,GAAD,CAAQzE,MAAOyJ,EACb5J,QAAS,SAACiI,GACRA,EAAEmC,kBACFJ,EAAY,KAHhB,WAQF,kBAAC,GAAD,CAAYhF,OAAQ,QAASC,QAAS,WACpC+E,EAAY,GACZ/E,MAECqB,EAAG5C,GAAMyG,mBAAmBtD,KAAI,SAACW,EAAST,GACzC,OACA,kBAAC,GAAD,CAAQA,IAAKtD,EAASC,EAAOqD,EAC3B/G,QAAS,WACPwF,EAAQc,EAAG7C,GAAkC6C,EAAG5C,GAAO8D,GACvDpD,EAASZ,EAAcC,EAAQC,EAAM8D,IACrCwC,EAAY,GACZ/E,MAEFuC,SCrDd1G,OAAOuJ,mBAAqB,SAACC,KA4HdC,MApHf,YAA2D,IAAjCC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,QAChClK,EAAUrD,IADwC,EAEhBiE,mBAASoJ,EAAIlK,KAAOQ,OAAOgE,eAFX,mBAEjD6F,EAFiD,KAElCL,EAFkC,KAGpDE,EAAIlK,KAAOQ,OAAOgE,gBACpBhE,OAAOuJ,mBAAqBC,GAE9B,IAAMM,EAA4B,CAChCC,WAAW,GAAD,OAAKJ,EAAL,aACVC,QAAQ,GAAD,OAAKA,EAAL,aACPlL,YAAamL,EAAgB,QAAU,QAEnC1G,EAAUC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,WAClDG,EAAWC,cAZuC,EAa1BjD,mBAAS,CACrC4E,QAAQ,EACRvC,OAAQ,KAf8C,mBAajDqH,EAbiD,KAaxCC,EAbwC,KAiBxD,OACE,kBAAC,WAAD,KACE,yBACEjL,UAAWU,EAAQgJ,KACnBrJ,MAAOyK,EACPI,WAAY,SAAArK,GACVA,EAAMsK,kBAERC,YAAa,WACXZ,GAAe,IAEjBa,YAAa,WACXb,GAAe,IAEjBc,OAAQ,SAAAnD,GACN,IAAM3H,EAAK2H,EAAErH,aAAayK,QAAQ,MAClC,GAAI/K,EAAI,CAEN,GADoB2D,EAAQ3D,GACX,CACf,IAAMgL,EAAUrD,EAAErH,aAAayK,QAAQ,WACjCE,EAAUtD,EAAErH,aAAayK,QAAQ,WACvCvK,OAAOC,mBAAkB,GACzBqD,EAAShB,EAAW9C,EAAIkK,EAAIgB,IAAKhB,EAAIiB,MACrCrH,EAAShB,EAAWoH,EAAIlK,GAAIoL,OAAOJ,GAAUI,OAAOH,KACpDzK,OAAO6K,WAAW7K,OAAO8K,uBAAwB,UAE9C,CACL,IAAMnI,EAASwE,EAAErH,aAAayK,QAAQ,UAClC5H,GACFsH,EAAW,CACT/E,QAAQ,EACRvC,WAIN6G,GAAe,IAEjB7J,WAAW,EACXC,YAAa,SAAAC,GACXA,EAAMC,aAAaC,QAAQ,KAAM2J,EAAIlK,IACrCK,EAAMC,aAAaC,QAAQ,UAA3B,UAAyC2J,EAAIgB,MAC7C7K,EAAMC,aAAaC,QAAQ,UAA3B,UAAyC2J,EAAIiB,MAC7C3K,OAAOC,mBAAkB,IAE3BC,UAAW,WACTF,OAAOC,mBAAkB,IAE3Bf,QAAS,SAAAiI,GACHA,EAAEmC,iBACJnC,EAAEmC,kBAEiC,IAAjCtJ,OAAO+K,eAAejH,OACpB4F,EAAIlK,KAAOQ,OAAOgE,eACpBhE,OAAOmF,mBAAkB,GACzBqE,GAAe,GACfxJ,OAAOgE,cAAgB,GACvBhE,OAAOuJ,mBAAqB,SAACC,OAE7BxJ,OAAOmF,mBAAkB,GACzBnF,OAAOiE,qBACPuF,GAAe,GACfxJ,OAAOgE,cAAgB0F,EAAIlK,GAC3BQ,OAAOuJ,oBAAmB,GAC1BvJ,OAAOuJ,mBAAqBC,GAG9BS,EAAW,CACT/E,QAAQ,EACRvC,OAAQ3C,OAAO+K,mBX7FP,WWkGbrB,EAAIjK,WACL,yBAAKT,UAAWU,EAAQkJ,cACtBjJ,WAAW,EACXC,YAAa,SAACuH,GACZA,EAAEmC,kBACFnC,EAAErH,aAAaC,QAAQ,SAAU2J,EAAIlK,OAEpC,yBAAKH,MAAO,CAAE5D,MAAO,QAASgB,OAAQ,WAC3C,yBAAKuC,UAAWU,EAAQiJ,UACrBe,EAAIrF,OAGP2F,EAAQ9E,OACV,kBAAC,EAAD,CAAgBvC,OAAQqH,EAAQrH,OAAQC,KAAM8G,EAAIlK,GAAIwJ,OAAQU,EAAIjK,WAChE0E,QAAS,WACP8F,EAAW,CACT/E,QAAQ,EACRvC,OAAQ,KAEV3C,OAAO+K,eAAiB,MAPT,OC/ElB,SAASpE,EAAMqE,EAAeC,GAGpC,IADA,IAAIC,EAAM,GACDC,EAAIH,EAAOG,EAAIF,EAAME,IAC7BD,EAAIE,KAAKD,GAEV,OAAOD,EC0BOrC,MA7Df,YAA0C,IAApB6B,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IACnBjL,EAAUrD,IACViH,EAAWC,cACTJ,EAAYC,aAAY,SAACC,GAC/B,MAAO,CACLF,QAASE,EAAMF,YAFXA,QAH+B,EAQjB7C,oBAAS,GARQ,mBAQhC+K,EARgC,KAQ1BC,EAR0B,KASjCC,EAA0B,CAC9BxB,WAAW,GAAD,OAAW,EAANY,EAAU,EAAf,aACVf,QAAQ,GAAD,OAAW,EAANc,EAAU,EAAf,aACPhM,YAAa2M,EAAO,QAAU,QAEhC,OACE,yBACErM,UAAWU,EAAQmJ,WACnBxJ,MAAOkM,EACPrB,WAAY,SAAArK,GACVA,EAAMsK,kBAERC,YAAa,WACXkB,GAAM,IAERjB,YAAa,WACXiB,GAAM,IAERhB,OAAQ,SAAAzK,GACN,IAAML,EAAKK,EAAMC,aAAayK,QAAQ,MAChCiB,EAAKrI,EAAQnD,OAAOyL,iBACpBC,EAAkBF,EAAGG,aAAaC,OAAOJ,EAAGG,cAC5CE,EAAc1I,EAAQ3D,GACtBsM,EChCP,SAAoBpB,EAAaC,EAAae,EAA2BvI,GAC9E,IAAK,IAAIgI,EAAI,EAAGA,EAAIO,EAAgB5H,OAAQqH,IAAK,CAC/C,IAAMzB,EAAMvG,EAAQuI,EAAgBP,IACpC,GAAIzB,EAAIgB,MAAQA,GAAOhB,EAAIiB,MAAQA,EACjC,OAAOjB,EAAIlK,GAGf,OAAO,EDyB2BuM,CAAWrB,EAAKC,EAAKe,EAAiBvI,GAClE,GAAK0I,EASE,GAAIC,EAAqB,CAC9B,IAAMtB,EAAU3K,EAAMC,aAAayK,QAAQ,WACrCE,EAAU5K,EAAMC,aAAayK,QAAQ,WAC3Ce,GAAM,GACNtL,OAAOC,mBAAkB,GACzBqD,EAAShB,EAAW9C,EAAIkL,EAAKC,IAC7BrH,EAAShB,EAAWwJ,EAAqBlB,OAAOJ,GAAUI,OAAOH,KACjEzK,OAAO6K,WAAW7K,OAAO8K,uBAAwB,QAEjDQ,GAAM,GACNtL,OAAOC,mBAAkB,GACzBqD,EAAShB,EAAW9C,EAAIkL,EAAKC,IAC7B3K,OAAO6K,WAAW7K,OAAO8K,uBAAwB,QApBjD,IAAKgB,EAAqB,CACxB,IAAMrM,EAAaI,EAAMC,aAAayK,QAAQ,cACxClG,EAAOxE,EAAMC,aAAayK,QAAQ,QACxCe,GAAM,GACNhI,ET7Ca,SAAC9D,EAAY6E,EAAc5E,EAAwBuM,EAAkBtB,EAAaC,GACzG,MAAO,CACLlI,KCZsB,aDatBhD,aACAD,KACA6E,OACAqG,MACAC,MACAqB,YSqCiBC,CAAUzM,EAAI6E,EAAM5E,EAAYO,OAAOyL,gBAAiBf,EAAKC,IACtE3K,OAAOiM,UAAUzM,EAAIC,GACrBO,OAAOC,mBAAkB,Q,QEhC/BiM,GAAe1Q,EAAiBI,SAChCuQ,GAAiB3Q,EAAiBK,WA+JzBuQ,OA7Jf,YAAqD,IAA3BC,EAA0B,EAA1BA,gBAClB3M,EAAUrD,IADkC,EAEdiE,oBAAS,GAFK,mBAE3CgM,EAF2C,KAE/BC,EAF+B,KAGlDvM,OAAOC,kBAAoBsM,EAHuB,IAU9CC,EANIrJ,EAAYC,aAAY,SAACC,GAC/B,MAAO,CACLF,QAASE,EAAMF,YAFXA,QAJ0C,ED1B7C,SAAsBwI,EAAwBxI,GACnD,IAAIsJ,EAAS,EACTC,EAAS,EAUb,OATAf,EAAazD,SAAQ,SAAAyE,GACnB,IAAMjD,EAAMvG,EAAQwJ,GAChBjD,EAAIgB,IAAM+B,IACZA,EAAS/C,EAAIgB,KAEXhB,EAAIiB,IAAM+B,IACZA,EAAShD,EAAIiB,QAGV,CAAE8B,SAAQC,UCuBUE,CAAaP,EAAgBV,aAAcxI,GAA9DsJ,EAT0C,EAS1CA,OAAQC,EATkC,EASlCA,OAEVG,EAAkD,IAAxCR,EAAgBV,aAAa7H,OAE3C0I,EADEK,EACU,CACVC,iBAAiB,UAAD,OAAY,EAAZ,KAAkBZ,GAAlB,YAAkCC,GAAlC,KAChBY,oBAAoB,UAAD,OAAY,EAAZ,KAAkBb,GAAlB,YAAkCC,GAAlC,MAGT,CACVW,iBAAiB,UAAD,OAAYR,EAAaG,EAAS,EAAIA,EAAS,EAA/C,aAAqDP,GAArD,YAAqEC,GAArE,KAChBY,oBAAoB,UAAD,OAAYT,EAAaI,EAAS,EAAIA,EAAS,EAA/C,aAAqDR,GAArD,YAAqEC,GAArE,MAGvB,IAAMa,EAAqB9J,iBAAwB,MAEnD,OADAlD,OAAO8K,uBAAyB,WAAO,IAAD,EAAC,UAAAkC,EAAmBrJ,eAAnB,SAA4BsJ,iBAEjE,yBAAKjO,UAAWU,EAAQyI,aACtB,yBAAKnJ,UAAWU,EAAQ0I,WACtB/I,MAAO,CAAE5D,MAAM,GAAD,OAAK4Q,EAAgBhI,KAAKP,OAAS,EAAnC,OACd5E,QAAS,SAACiI,GACRA,EAAEmC,kBACFtJ,OAAOgE,cAAgBqI,EAAgB7M,GACvCQ,OAAOmF,mBAAkB,KAE3BkH,EAAgBhI,MAClB,yBAAKrF,UAAWU,EAAQ4I,KAAMjJ,MAAOmN,EAAWtN,QAAS,WACvDc,OAAOgE,cAAgB,GACvBhE,OAAOuJ,oBAAmB,GAC1BvJ,OAAOuJ,mBAAqB,SAACC,KAC7BxJ,OAAOmF,mBAAkB,KAEvBmH,EACFO,EAAU,kBAAC,EAAD,CAAYnC,IAAK,EAAGC,IAAK,IACnChE,EAAM,EAAG2F,EAAaG,EAAS,EAAIA,EAAS,GAAG1G,KAAI,SAAA2E,GACjD,OAAO/D,EAAM,EAAG2F,EAAaI,EAAS,EAAIA,EAAS,GAAG3G,KAAI,SAAA4E,GACxD,OACE,kBAAC,EAAD,CACE1E,IAAG,UAAKyE,EAAL,YAAYC,GACfD,IAAKA,EACLC,IAAKA,UAIVuC,OAZY,KAadb,EAAgBV,aAAa5F,KAAI,SAAA4G,GAChC,IAAMjD,EAAMvG,EAAQwJ,GACpB,OACE,kBAAC,EAAD,CACE1G,IAAKyD,EAAIlK,GACTkK,IAAKA,EACLE,QAAmB,EAAVF,EAAIgB,IAAU,EACvBf,QAAmB,EAAVD,EAAIiB,IAAU,OAI7B,kBAAC,kBAAD,CAAiB3L,UAAWU,EAAQ+I,gBAClCpJ,MAAO,CACLuK,QAAQ,YAAD,OAAuB,EAAT6C,EAAa,GAClC1C,WAAW,YAAD,OAAuB,EAAT2C,EAAa,IAEvCS,YAAa,EACb3I,IAAKwI,GAEL,yBAAK3N,MAAO,CACV3C,QAAS,OACToQ,iBAAiB,UAAD,OAAYL,EAAS,EAArB,aAA2BP,GAA3B,YAA2CC,GAA3C,KAChBY,oBAAoB,UAAD,OAAYL,EAAS,EAArB,aAA2BR,GAA3B,YAA2CC,GAA3C,OAEpBE,EAAgBV,aAAa5F,KAAI,SAAA4G,GAChC,IAAMjD,EAAMvG,EAAQwJ,GACpB,OACE,kBAAC,WAAD,CAAU1G,IAAKyD,EAAIlK,IACjB,yBAAKH,MAAO,CACV0K,WAAW,GAAD,OAAe,EAAVL,EAAIiB,IAAU,EAAnB,aACVf,QAAQ,GAAD,OAAe,EAAVF,EAAIgB,IAAU,EAAnB,aACP0C,UAAW,cACXvQ,SAAU,WACVC,IAAK,OACLC,KAAM,QAEN,kBAAC,gBAAD,CACEyC,GAAIkK,EAAIlK,GAAK,UAEb,yBAAKH,MAAO,CACV5D,MAAO,OACPgB,OAAQ,YAKd,yBAAK4C,MAAO,CACV0K,WAAW,GAAD,OAAe,EAAVL,EAAIiB,IAAU,EAAnB,aACVf,QAAQ,GAAD,OAAe,EAAVF,EAAIgB,IAAU,EAAnB,aACP0C,UAAW,YACXvQ,SAAU,WACVwQ,OAAQ,OACRtQ,KAAM,QAEN,kBAAC,gBAAD,CACEyC,GAAIkK,EAAIlK,GAAK,aAEb,yBAAKH,MAAO,CACV5D,MAAO,OACPgB,OAAQ,YAKd,yBAAK4C,MAAO,CACV0K,WAAW,GAAD,OAAe,EAAVL,EAAIiB,IAAU,EAAnB,aACVf,QAAQ,GAAD,OAAe,EAAVF,EAAIgB,IAAU,EAAnB,aACP0C,UAAW,YACXvQ,SAAU,WACVC,IAAK,OACL8D,MAAO,QAEP,kBAAC,gBAAD,CACEpB,GAAIkK,EAAIlK,GAAK,UACb8N,UAAW5D,EAAIxD,QAAQH,KAAI,SAAAI,GACzB,MAAO,CACLoH,SAA4B,KAAlBpH,EAAW,GAAYA,EAAW,GAAK,SAAWA,EAAW,GAAK,YAC5EqH,aAAc,OACdC,aAAc,QACdpO,MAAO,CACLqO,YAA+B,KAAlBvH,EAAW,GAAY,MAAQ,OAC5CwH,aAAaxH,EAAW,GAAY,SAK1C,yBAAK9G,MAAO,CACV5D,MAAO,OACPgB,OAAQ,qBCjKxBmR,GAAY,CAChBnQ,UAAW,SACXD,UAAW,SACXd,QAAS,QAoBImR,OAjBf,YAAqE,IAAtCC,EAAqC,EAArCA,SAAU9O,EAA2B,EAA3BA,UAAWK,EAAgB,EAAhBA,MAC5CmF,EAAMtB,iBAAuB,MAQ7B6K,EAAgB3H,OAAO4H,OAAO,GAAIJ,IACxC,OACE,yBAAKpJ,IAAKA,EAAKxF,UAAWA,EAAWK,MAAO+G,OAAO4H,OAAOD,EAAe1O,GAAQ4O,QARnF,SAAiBpO,GACZ2E,GAAOA,EAAIb,UACZa,EAAIb,QAAQuK,YAAcrO,EAAMsO,UAO/BL,ICaQzR,GArCAC,YAAgB,CAC7B8R,kBAAmB,CACjB5R,gBAAiB,kBACjBK,SAAU,WACVC,IAAK,EACLC,KAAM,EACNtB,MAAO,QACPgB,OAAQ,QACRQ,OAAQ,KAGVoR,WAAY,CACV7R,gBAAiBjB,EACjBsB,SAAU,WACVC,IAAK,OACLC,KAAM,OACNuR,UAAW,qCACX5R,QAAS,OACTW,cAAe,SACfC,WAAY,SACZlB,aAAc,QACdkC,UAAW,mEACXlB,SAAU,OACVU,QAAS,0BACTyQ,OAAQ,kBACRtR,OAAQ,KAGVuR,OAAQ,CACN1Q,QAAS,cACTS,OAAQ,0BACRE,YAAa,QACbC,YAAa,uBACb/B,SAAUnB,EAAWO,SCNVsS,OArBf,YAA2D,IAArCP,EAAoC,EAApCA,SAAU5J,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAChCzE,EAAUrD,KAChB,OACE,yBAAK2C,UAAWU,EAAQ0O,kBACtBlP,QAAS,SAACiI,GACRA,EAAEmC,kBACFnF,MAGF,yBAAKnF,UAAWU,EAAQ2O,WACtBnP,QAAS,SAACiI,GAAOA,EAAEmC,oBAEnB,yBAAKtK,UAAWU,EAAQ8O,QACrBtK,GAEF4J,KCrBMxR,YAAgB,CAC7BmS,YAAa,CACXjS,gBAAiB,QACjBK,SAAU,WACVC,IAAK,OACLC,KAAM,OACNtB,MAAO,OACPgB,OAAQ,OACRC,QAAS,OACTW,cAAe,SACfJ,OAAQ,KAGVyR,UAAW,CACThS,QAAS,OACTyB,SAAU,YAGZwQ,OAAQ,CACNpQ,OAAQ,QACRT,QAAS,QACTpB,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChB,UAAW,CACTU,OAAQ,cC2CC2Q,IC9CAvS,GAtBAC,YAAgB,CAC7BqS,OAAQ,CACNnS,gBAAiBjB,EACjBkD,YAAa,cACbrC,aAAc,QACdsC,YAAa,QACb,WAAY,CACVD,YAAa,eAEf,UAAW,CACTR,OAAQ,UACRQ,YAAa,SAEf/B,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChBO,QAAS,QACTS,OAAQ,QACRgD,UAAW,YCCAoN,OAZf,YAAsD,IAApCzP,EAAmC,EAAnCA,QAAS4O,EAA0B,EAA1BA,SAAUzO,EAAgB,EAAhBA,MAC7BK,EAAUrD,KAChB,OACE,yBAAK2C,UAAWU,EAAQiP,OACtBzP,QAASA,EACTG,MAAOA,GAENyO,I,gBCfQe,GADE,IAAIC,EADA9O,OAAO8O,cCQtBC,GAAkB,CAAC,OAAQ,SAAU,WAAY,YAwCxCC,OAtCf,WACE,IAAMC,EAAaJ,GAASK,mBAItB5I,EAA2B,CAC/B,WAAY,CACVG,YxBoBc,OwBnBdC,QAAS,QAEX,gBAAiB,CACfD,YAAatG,EACbuG,QAAS,aAEX,aAAc,CACZD,YAAatG,EACbuG,QAAS,WAIPG,EAAmC,CACvC,WAAY,SAACsI,GAAsBF,EAAWxM,KAAO0M,GACrD,gBAAiB,SAACC,GAA2BH,EAAWI,UAAUxL,MAAQ+G,OAAOwE,IACjF,aAAc,SAACE,GAAwBL,EAAWM,OAAO1L,MAAQ+G,OAAO0E,IACxE,KAAQ,WAAgBL,EAAWhE,SAKrC,OAFAgE,EAAWjE,QAEJ,CACLnG,UAAWoK,EACX3H,UAAWyH,GACX1F,mBA7ByB,CAAC,YAAa,UA8BvC/C,cACAO,oBCEW2I,OAvCf,WAA+C,IAA7BC,EAA4B,uDAAf,EACvBC,EAAOb,GAASc,aACtBD,EAAKA,KAAK7L,MAAQ4L,EAElB,IAAMpG,EAAqB,CAAC,QAEtB/C,EAA2B,CAC/B,WAAY,CACVG,YAAatG,EACbuG,QAAS,OACT7C,MAAO,EACP8C,MAAO,EAAE,IAAO,IAAO,IAEzB,gBAAiB,CACfF,YAAatG,EACbuG,QAAS,OACT7C,MAAO,EACP8C,MAAO,EAAE,EAAG,EAAG,OAInB,SAASiJ,IACPF,EAAKA,KAAK7L,MAASyC,EAAY,YAAYzC,MAAoByC,EAAY,iBAAiBzC,MAG9F,IAAMgD,EAAmC,CACvC,WAAY,SAACgJ,GACXvJ,EAAY,YAAYzC,MAAQ+G,OAAOiF,GACvCD,KAEF,gBAAiB,SAACE,GAChBxJ,EAAY,iBAAiBzC,MAAQ+G,OAAOkF,GAC5CF,MAIJ,MAAO,CAAE/K,UAAW6K,EAAMrG,qBAAoB/C,cAAaO,oBCV9CkJ,OA1Bf,WACE,IAAMzJ,EAA2B,CAC/B,OAAU,CACRG,Y1B6BgB,S0B5BhBC,QAAS,OAEX,QAAW,CACTD,Y1ByBgB,S0BxBhBC,QAAS,QAIPG,EAAkB,CACtB,OAAU,SAACmJ,GAAkBnB,GAASoB,UACtC,QAAW,SAACD,GAAkBnB,GAASqB,YAIzC,OADArB,GAASoB,SACF,CACLpL,UAAWgK,GAASsB,YACpB9G,mBAAoB,GACpB/C,cACAO,oBCrBEuJ,GAAc,CAAC,UAAW,WAAY,WAAY,YAAa,UAAW,WAAY,QAAS,WA+CtFC,OA7Cf,WACE,IAAMC,EAAazB,GAAS0B,qBA2BtB1J,EAAmC,CACvC,WAAY,SAACsI,GAAsBmB,EAAW7N,KAAO0M,GACrD,gBAAiB,SAACC,GAA2BkB,EAAWjB,UAAUxL,MAAQ+G,OAAOwE,IACjF,aAAc,SAACE,GAAwBgB,EAAWf,OAAO1L,MAAQ+G,OAAO0E,IACxE,QAAS,SAACkB,GAAmBF,EAAWG,EAAE5M,MAAQ+G,OAAO4F,IACzD,WAAY,SAACX,GAAsBS,EAAWZ,KAAK7L,MAAQ+G,OAAOiF,KAGpE,MAAO,CACLhL,UAAWyL,EACXhJ,UAAW8I,GACX/G,mBApCyB,CAAC,YAAa,SAAU,IAAK,QAqCtD/C,YAnC+B,CAC/B,WAAY,CACVG,Y3BoBc,O2BnBdC,QAAS,QAEX,gBAAiB,CACfD,YAAatG,EACbuG,QAAS,aAEX,aAAc,CACZD,YAAatG,EACbuG,QAAS,UAEX,QAAS,CACPD,YAAatG,EACbuG,QAAS,KAEX,WAAY,CACVD,YAAatG,EACbuG,QAAS,SAiBXG,oBCAW6J,OA5Cf,WACE,IAAMC,EAAa9B,GAAS+B,2BA2BtB/J,EAAmC,CACvC,gBAAiB,SAACgK,GAA2BF,EAAWG,UAAUjN,MAAQ+G,OAAOiG,IACjF,WAAY,SAACE,GAAsBJ,EAAWK,KAAKnN,MAAQ+G,OAAOmG,IAClE,YAAa,SAACE,GAAuBN,EAAWO,MAAMrN,MAAQ+G,OAAOqG,IACrE,aAAc,SAACE,GAAwBR,EAAWS,OAAOvN,MAAQ+G,OAAOuG,IACxE,cAAe,SAACE,GAAyBV,EAAWW,QAAQzN,MAAQ+G,OAAOyG,KAG7E,MAAO,CACLxM,UAAW8L,EACXtH,mBAnCyB,CAAC,YAAa,OAAQ,QAAS,SAAU,WAoClE/C,YAlC+B,CAC/B,gBAAiB,CACfG,YAAatG,EACbuG,QAAS,aAEX,WAAY,CACVD,YAAatG,EACbuG,QAAS,QAEX,YAAa,CACXD,YAAatG,EACbuG,QAAS,SAEX,aAAc,CACZD,YAAatG,EACbuG,QAAS,UAEX,cAAe,CACbD,YAAatG,EACbuG,QAAS,YAgBXG,oBCfW0K,OAzBf,WACE,IAAMC,EAAe3C,GAAS4C,qBAWxB5K,EAAmC,CACvC,UAAW,SAAC6K,GAAoBF,EAAaG,IAAI9N,MAAQ+G,OAAO8G,KAGlE,MAAO,CACL7M,UAAW2M,EACXnI,mBAfyB,CAAC,OAgB1B/C,YAd+B,CAC/B,UAAW,CACTG,YAAatG,EACbuG,QAAS,QAYXG,oBCIW+K,OAxBf,WACE,IAAMC,EAAchD,GAASiD,cAWvBjL,EAAmC,CACvC,iBAAkB,SAACkL,GAA2BF,EAAYG,UAAUnO,MAAQ+G,OAAOmH,KAGrF,MAAO,CACLlN,UAAWgN,EACXxI,mBAfyB,CAAC,aAgB1B/C,YAd+B,CAC/B,iBAAkB,CAChBG,YAAatG,EACbuG,QAAS,cAYXG,oBCfEoL,GAAsB,CAAC,UAAW,SAAU,eA+DnCC,OA7Df,WACE,IAAMC,EAAiBtD,GAASuD,uBAChCD,EAAeE,OAAOxO,MAAQ,EAE9B,IAEMyC,EAA2B,CAC/B,YAAa,CACXG,YAAatG,EACbuG,QAAS,SACT7C,MAAO,GAET,WAAY,CACV4C,Y/BUc,O+BTdC,QAAS,MACT7C,MAAO,WAET,kBAAmB,CACjB4C,YAAatG,EACbuG,QAAS,MACT7C,MAAO,EACP8C,MAAO,CAAC,EAAG,IAAO,MAEpB,KAAQ,CACNF,Y/BCgB,S+BAhBC,QAAS,QAIP4L,EAA2B,CAC/B,UAAW,SAACC,GACVjM,EAAY,aAAazC,MAAQ+G,OAAO2H,GACxCJ,EAAeE,OAAOxO,MAAQ+G,OAAO2H,IAEvC,OAAU,SAACA,GACTjM,EAAY,aAAazC,MAAQ+G,OAAO2H,GACxCJ,EAAeE,OAAOG,wBAAwB5H,OAAO2H,GAAW1D,GAAS4D,YAAenM,EAAY,mBAAmBzC,QACzH,YAAe,SAAC0O,GACdjM,EAAY,aAAazC,MAAQ+G,OAAO2H,GACxCJ,EAAeE,OAAOK,6BAA6B9H,OAAO2H,GAAW1D,GAAS4D,YAAenM,EAAY,mBAAmBzC,SAG1HgD,EAAmC,CACvC,YAAa,SAAC0L,GAAuBD,EAAYhM,EAAY,YAAYzC,OAAiB0O,IAC1F,WAAY,SAACpD,GAAsB7I,EAAY,YAAYzC,MAAQsL,GACnE,kBAAmB,SAACoD,GAAuBjM,EAAY,mBAAmBzC,MAAQ+G,OAAO2H,IACzF,KAAQ,WAAgBJ,EAAelH,SAKzC,OAFAkH,EAAenH,QAER,CACLnG,UAAWsN,EACX9I,mBAjDyB,CAAC,UAkD1B/C,cACAO,kBACAS,UAAW2K,KC9BAU,OA/Bf,SAA0BC,GACxB,GAAIA,EAASjP,QAAS,CACpB,IAAMkP,EAAehE,GAASiE,yBAAyBF,EAASjP,SAEhEmB,QAAQC,IAAI6N,GAEZ,IAOM/L,EAAmC,CACvC,WAAY,SAACkM,GACVH,EAASjP,QAA6BqP,IAAMD,IAIjD,MAAO,CACLlO,UAAWgO,EACXrO,IAAKoO,EACLvJ,mBAAoB,GACpB/C,YAjB+B,CAC/B,WAAY,CACVG,YhCuBY,OgCtBZC,QAAS,QAeXG,mBAGF,OAAO,MCXIoM,OAlBf,YAAkC,IAAdzT,EAAa,EAAbA,GACZoT,EAAW1P,iBAAyB,MAS1C,OARAgQ,qBAAU,WACR,IAAKlT,OAAOyF,aAAajG,GAAK,CAC5B,IAAM2T,EAAuBR,GAAiBC,GAC1CO,IACFnT,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAK2T,SAK1D,2BACE3O,IAAKoO,EACLQ,UAAQ,KCCdpT,OAAOqT,YAAc,SAAC7T,GACpBQ,OAAO4H,UAAUpI,GAAM,CACrBA,GAAIA,EACJqI,QAAS,KAIb7H,OAAO4H,UAAY,GAoBJ0L,OAlBf,WAAsB,IAAD,EACYhT,oBAAS,GADrB,mBACZiT,EADY,KACF5N,EADE,KAEnB3F,OAAO8H,kBAAoB,WAAQnC,GAAY4N,IAC/C,IAAMC,EAAMpN,OAAOC,KAAKrG,OAAO4H,WAC/B,OACE,kBAAC,WAAD,KACG4L,EAAIzN,KAAI,SAACvG,GACR,OACE,kBAAC,GAAD,CACEyG,IAAKzG,EACLA,GAAIA,SCrBDiU,OAhBf,WACE,OAAO,SAASjU,EAAYC,GAC1B,OAAOA,GACL,InCQoB,amCRHO,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAKwP,OAAoB,MAC3F,InCMc,OmCNHhP,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAKgQ,OAAc,MAC/E,InCOgB,SmCPHxP,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAKuQ,OAAgB,MACnF,InCOoB,amCPH/P,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAK6Q,OAAoB,MAC3F,InCOoB,amCPHrQ,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAKkR,OAAoB,MAC3F,InCOuB,gBmCPH1Q,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAK+R,OAAsB,MAChG,InCOsB,emCPHvR,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAKoS,OAAqB,MAC9F,InCOkB,WmCPH5R,OAAOyF,aAAP,6BAA2BzF,OAAOyF,cAAlC,mBAAiDjG,EAAK0S,OAAwB,MAC7F,InCOuB,gBmCPHlS,OAAOqT,YAAY7T,GAAKQ,OAAO8H,uBCQzD9H,OAAOgE,cAAgB,UACvBhE,OAAOyL,gBAAkB,UACzBzL,OAAO+K,eAAiB,GAExB/K,OAAOyF,aAAe,GACtBzF,OAAOiM,UAAYwH,KAmBJC,OAjBf,WACE,IAAMhU,EAAUrD,IACV8G,EAAUC,aAAY,SAACC,GAC3B,OAAOA,EAAMF,WAEf,OACE,yBAAKnE,UAAWU,EAAQnD,SACtB,kBAAC,EAAD,MACA,yBAAKyC,UAAWU,EAAQvC,mBACtB,kBAAC,GAAD,CAAgBkP,gBAAiBlJ,EAAQnD,OAAOyL,oBAElD,kBAAC,EAAD,MACA,kBAAC,GAAD,QC7BckI,QACW,cAA7B3T,OAAO4T,SAASC,UAEe,UAA7B7T,OAAO4T,SAASC,UAEhB7T,OAAO4T,SAASC,SAASC,MACvB,2D,8BC+BS7H,GA7CG,SAAC5I,EAAD,GAAoF,IAAD,IAAhE7D,EAAgE,EAAhEA,GAAI6E,EAA4D,EAA5DA,KAAM5E,EAAsD,EAAtDA,WAAYiL,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,IAAKqB,EAAgC,EAAhCA,SACnE,OAAOvM,GACL,ItCMqB,YsCNL,OAAO2G,OAAO4H,OAAO,GAAI3K,GAAlB,KAAA+C,OAAA,KAAAA,CAAA,EACpB5G,EAAK,CACJA,KACA6E,OACAqG,MACAC,MACAqB,WACAvM,aACAqG,OAAQ,GACRI,QAAS,GACTyF,aAAc,GACdoI,iBAAiB,IAXE3N,OAAA,KAAAA,CAAA,EAapB4F,EAboB5F,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAchB/C,EAAM2I,IAdU,IAenBL,aAAa,GAAD,oBACNtI,EAAM2I,GAA8BL,cAD9B,CAEVnM,OAjBiB,IAqBvB,QAAS,OAAO4G,OAAO4H,OAAO,GAAI3K,GAAlB,KAAA+C,OAAA,KAAAA,CAAA,EACb5G,EAAK,CACJA,KACA6E,OACAqG,MACAC,MACAqB,WACAvM,aACAqG,OAAQ,GACRI,QAAS,KATGE,OAAA,KAAAA,CAAA,EAWb4F,EAXa5F,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAYT/C,EAAM2I,IAZG,IAaZL,aAAa,GAAD,oBACNtI,EAAM2I,GAA8BL,cAD9B,CAEVnM,OAfU,MCPLwU,GAjBM,SAAC3Q,EAAD,GAAiD,IAA9B7D,EAA6B,EAA7BA,GAChCwM,EAAW3I,EAAM7D,GAAIwM,SACrBiI,EAAe7N,OAAO8N,YAAY9N,OAAO+N,QAAQ9Q,GAAO+Q,QAAO,SAAAC,GAAK,OAAIA,EAAM,KAAO7U,MAC3F,OAAO4G,OAAO4H,OAAO,GAAIiG,EAAc7N,OAAO8N,YAAY9N,OAAO+N,QAAQF,GAAclO,KAAI,SAAAsO,GACzF,MAAO,CAACA,EAAM,GAAP,6BACAA,EAAM,IADN,IAEHvO,OAAQuO,EAAM,GAAGvO,OAAOsO,QAAO,SAAApO,GAAS,OAAIA,EAAU,KAAOxG,KAC7D0G,QAASmO,EAAM,GAAGnO,QAAQkO,QAAO,SAAAjO,GAAU,OAAIA,EAAW,KAAO3G,YAJhE4G,OAAA,KAAAA,CAAA,GAOJ4F,EAPI5F,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAQA/C,EAAM2I,IARN,IASHL,aAAetI,EAAM2I,GAA8BL,aAAayI,QAAO,SAAAE,GAAO,OAAIA,IAAY9U,UCFrF+U,GAVU,SAAClR,EAAD,GAA+D,IAA5C7D,EAA2C,EAA3CA,GAAI+C,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OACtD,OAAO4D,OAAO4H,OAAO,GAAI3K,EAAlB+C,OAAA,KAAAA,CAAA,GACJ5G,EADI4G,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAEA/C,EAAM7D,IAFN,IAGHkL,IAAKnI,EACLoI,IAAKnI,OCIIgS,GATS,SAACnR,EAAD,GAA0D,IAAvC7D,EAAsC,EAAtCA,GAAIoE,EAAkC,EAAlCA,QAC7C,OAAOwC,OAAO4H,OAAO,GAAI3K,EAAlB+C,OAAA,KAAAA,CAAA,GACJ5G,EADI4G,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAEA/C,EAAM7D,IAFN,IAGH6E,KAAMT,OCeGlB,GAnBO,SAACW,EAAD,GAAmE,IAAD,EAA/CV,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MACrD,OAAOuD,OAAO4H,OAAO,GAAI3K,GAAlB,KAAA+C,OAAA,KAAAA,CAAA,EACJxD,EADIwD,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAEA/C,EAAMT,IAFN,IAGHkD,OAAO,GAAD,oBACDzC,EAAMT,GAAMkD,QADX,CAEJ,CAACnD,EAAQE,QALRuD,OAAA,KAAAA,CAAA,EAQJzD,EARIyD,OAAA,KAAAA,QAAA,KAAAA,CAAA,GASA/C,EAAMV,IATN,IAUHuD,QAAQ,GAAD,oBACF7C,EAAMV,GAAQuD,SADZ,CAEL,CAACtD,EAAMC,QAZN,KCYMC,GAbU,SAACO,EAAD,GAAsE,IAAD,EAAlDV,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MACxD,OAAOuD,OAAO4H,OAAO,GAAI3K,GAAlB,KAAA+C,OAAA,KAAAA,CAAA,EACJxD,EADIwD,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAEA/C,EAAMT,IAFN,IAGHkD,OAAQzC,EAAMT,GAAMkD,OAAOsO,QAAO,SAAApO,GAAS,OAAIA,EAAU,KAAOrD,GAAUqD,EAAU,KAAOnD,QAHxFuD,OAAA,KAAAA,CAAA,EAKJzD,EALIyD,OAAA,KAAAA,QAAA,KAAAA,CAAA,GAMA/C,EAAMV,IANN,IAOHuD,QAAS7C,EAAMV,GAAQuD,QAAQkO,QAAO,SAAAjO,GAAU,OAAIA,EAAW,KAAOvD,GAAQuD,EAAW,KAAOtD,QAP7F,KCeH4R,GAAqB,CACzB,QAdkC,CAClCjV,GAAI,UACJ6E,KAAM,UACNqG,IAAK,EACLC,IAAK,EACLlL,W5CCuB,Y4CAvBqG,OAAQ,GACRI,QAAS,GACT8F,SAAU,KACVL,aAAc,GACdoI,iBAAiB,IAmBJW,GAZO,WAA8C,IAA7CrR,EAA4C,uDAApCoR,GAAWE,EAAyB,uCACjE,OAAQA,EAAOlS,MACb,IvCzBsB,auCyBL,OAAOmS,GAAiBvR,EAAOsR,GAChD,IvCzByB,gBuCyBL,OAAOE,GAAoBxR,EAAOsR,GACtD,IvCzBuB,cuCyBL,OAAOG,GAAkBzR,EAAOsR,GAClD,IvCzByB,gBuCyBL,OAAOI,GAAoB1R,EAAOsR,GACtD,IvCzB0B,iBuCyBL,OAAOK,GAAqB3R,EAAOsR,GACxD,IvCzB6B,oBuCyBL,OAAOM,GAAwB5R,EAAOsR,GAC9D,QAAS,OAAOtR,ICpBL6R,GARK,WAA4C,IAA3C7R,EAA0C,uDAAlC,UAAWsR,EAAuB,uCAC7D,OAAQA,EAAOlS,MACb,ICLuB,cDMvB,ICLuB,cDKL,OAAOkS,EAAOQ,MAChC,QAAS,OAAO9R,IEEL+R,GALKC,2BAAgB,CAClClS,QAASuR,GACTY,gBAAiBJ,KCAJK,GAFDC,uBAAYJ,GAAaK,kCCIvCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QAGJM,SAASC,eAAe,SZ6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxR,QAAQwR,MAAMA,EAAMC,c","file":"static/js/main.8fb5d40c.chunk.js","sourcesContent":["import { Colors, Sizes } from './types'\r\n\r\nconst grey = '#282c34' // grey\r\nconst secondary = '#281c34' //purple\r\nconst tertiary = '#182c54' // blue\r\n\r\nexport const colors: Colors = {\r\n  grey: grey,\r\n  secondary: secondary,\r\n  tertiary: tertiary,\r\n\r\n  rightDrawer: 'black',\r\n  drawerToggle: '#00347d',\r\n  drawerToggleLine: '#001b40',\r\n\r\n  leftDrawer: 'black',\r\n\r\n  centerMenu: 'black',\r\n\r\n  fillModule: '#1b1e24',\r\n  module: '#37538a',\r\n\r\n  text: 'white',\r\n  selectedText: '#007ab3',\r\n\r\n  dropSquareHL: 'white',\r\n\r\n  defaultButton: 'black',\r\n  deleteButton: '#cc0000',\r\n  deleteButtonText: 'white',\r\n\r\n  errorBackground: '#cc0000',\r\n\r\n  outputConnector: 'red',\r\n}\r\n\r\nexport const sizes: Sizes = {\r\n  rightDrawer: {\r\n    width: '21vw',\r\n    toggleWidth: '1.5vmin',\r\n    item: '10vmin'\r\n  },\r\n  leftDrawer: {\r\n    width: '20vw',\r\n  },\r\n  moduleView: {\r\n    iconGrid: '12vmin',\r\n    gutterGrid: '6vmin',\r\n    icon: '9vmin',\r\n  },\r\n  text: {\r\n    large: 'calc(25px + 2.8vmin)',\r\n    medium: 'calc(20px + 2.4vmin)',\r\n    small: 'calc(12px + 1.4vmin)',\r\n    xsmall: 'calc(8px + 1vmin)',\r\n  },\r\n  connector: {\r\n    size: '3vmin',\r\n    borderRadius: '1.5vmin'\r\n  },\r\n}","import { createUseStyles } from 'react-jss'\r\nimport { colors } from '../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  Bounder: {\r\n    backgroundColor: colors.grey,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    fontSize: 'calc(20px + 2vmin)',\r\n    color: 'white',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    left: '0px',\r\n    userSelect: 'none',\r\n    zIndex: '-1',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  ModuleViewBounder: {\r\n    minWidth: '60vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 0,\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '0px',\r\n    },\r\n  }\r\n})\r\n\r\nexport default useJSS","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  DrawerBounder: {\r\n    backgroundColor: colors.rightDrawer,\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    color: 'white',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    userSelect: 'none',\r\n    zIndex: '10',\r\n  },\r\n\r\n  Drawer: {\r\n    height: '100vh',\r\n    width: sizes.rightDrawer.width,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n\r\n  // header\r\n\r\n  DrawerHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: sizes.rightDrawer.width,\r\n    overflowX: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      height: '3px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerHeaderItem: {\r\n    fontSize: sizes.text.large,\r\n    padding: '1vmin 1.5vmin',\r\n    color: colors.text,\r\n    textDecoration: 'none',\r\n    whiteSpace: 'nowrap',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  ItemRouter: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    width: sizes.rightDrawer.width,\r\n    height: 'calc(100% - 60px)',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '1px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  // Drawer items\r\n\r\n  DrawerItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    margin: '4vmin',\r\n  },\r\n\r\n  DrawerIcon: {\r\n    backgroundColor: colors.grey,\r\n    borderColor: colors.grey,\r\n    borderStyle: 'solid',\r\n    width: sizes.rightDrawer.item,\r\n    height: sizes.rightDrawer.item,\r\n    borderRadius: '1.5vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    marginBottom: '1.5vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerItemText: {\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  // toggle\r\n\r\n  Toggle: {\r\n    backgroundColor: colors.drawerToggle,\r\n    width: sizes.rightDrawer.toggleWidth,\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  ToggleLine: {\r\n    backgroundColor: colors.drawerToggleLine,\r\n    borderRadius: '4px',\r\n    width: '0.75vmin',\r\n    height: '80px',\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\n//import { animated, useSpring } from 'react-spring'\r\nimport { colors } from '../../theme/theme'\r\n\r\ninterface Props {\r\n  className: string\r\n  text: string\r\n  onClick: () => void\r\n  selectedRoute: string\r\n}\r\n\r\nfunction DrawerRouteLink({ className, text, onClick, selectedRoute }: Props) {\r\n  const linkStyle = {\r\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\r\n  }\r\n  /*\r\n  const linkStyle = useSpring({\r\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\r\n    config: {\r\n      tension: 300,\r\n      clamp: true,\r\n    }\r\n  })\r\n  */\r\n  return (\r\n    <div className={className} onClick={onClick} style={linkStyle}>\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerRouteLink","import React from 'react'\r\nimport useJSS from './style'\r\n\r\ninterface Props {\r\n  fullName: string\r\n  id: string\r\n  moduleType: string\r\n}\r\n\r\nlet numAdds = 0\r\n\r\nfunction DrawerItem({ fullName, id, moduleType }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.DrawerItem}>\r\n      <div \r\n        className={classes.DrawerIcon}\r\n        draggable={true}\r\n        onDragStart={event => {\r\n          event.dataTransfer.setData('id', `${id} ${numAdds}`)\r\n          event.dataTransfer.setData('moduleType', moduleType)\r\n          event.dataTransfer.setData('name', id)\r\n          window.setFillIsExpanded(true)\r\n          numAdds+=1\r\n        }}\r\n        onDragEnd={() => {\r\n          window.setFillIsExpanded(false)\r\n        }}\r\n      />\r\n      <div className={classes.DrawerItemText}>\r\n        {fullName}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawerItem","import { OscillatorModule } from './modules/oscillator'\r\nimport { GainModule } from './modules/gain'\r\nimport { OutputModule } from './modules/output'\r\nimport { AutoFilterModule } from './modules/autoFilter'\r\nimport { KompressorModule } from './modules/kompressor'\r\nimport { StereoPannerModule } from './modules/stereoPanner'\r\nimport { SignalDelayModule } from './modules/signalDelay'\r\nimport { ConstantModule } from './modules/constant'\r\nimport { MediaElementModule } from './modules/mediaElement'\r\n\r\n// module type\r\n\r\nexport const CONTAINER = 'CONTAINER'\r\nexport const GAIN = 'GAIN'\r\nexport const OSCILLATOR = 'OSCILLATOR'\r\nexport const OUTPUT = 'OUTPUT'\r\nexport const AUTOFILTER = 'AUTOFILTER'\r\nexport const KOMPRESSOR = 'KOMPRESSOR'\r\nexport const STEREO_PANNER = 'STEREO_PANNER'\r\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\r\nexport const CONSTANT = 'CONSTANT'\r\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\r\n\r\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT'\r\n\r\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\r\n\r\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule\r\n\r\nexport type AudioModule = ConnectingAudioModule | OutputModule\r\n\r\nexport interface AudioModules {\r\n  [index: string]: AudioModule\r\n}\r\n\r\n// control type\r\n\r\nexport const TYPE = 'TYPE'\r\nexport const VALUE = 'VALUE'\r\nexport const BUTTON = 'BUTTON'\r\nexport const FILE = 'FILE'\r\n\r\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE'\r\ntype Value = number | string\r\ntype SetFunc = (arg: string) => void\r\ntype Range = [number, number, number?] // min / max / step\r\n\r\nexport interface ControlDataPacket {\r\n  controlType: ControlType\r\n  paramID: string\r\n  value?: Value // need either paramID or value\r\n  range?: Range\r\n}\r\n\r\nexport interface ControlData {\r\n  [name: string]: ControlDataPacket\r\n}\r\n\r\nexport interface ControlSetFuncs {\r\n  [name: string]: SetFunc\r\n}\r\n\r\nexport interface BaseAM {\r\n  connectingParamIDs: string[]\r\n  controlData: ControlData\r\n  controlSetFuncs: ControlSetFuncs\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react'\r\nimport DrawerItem from '../DrawerItem'\r\nimport { \r\n  CONTAINER,\r\n  OSCILLATOR,\r\n  AUTOFILTER,\r\n  GAIN,\r\n  OUTPUT,\r\n  KOMPRESSOR,\r\n  SIGNAL_DELAY,\r\n  STEREO_PANNER,\r\n  CONSTANT,\r\n  MEDIA_ELEMENT\r\n} from '../../../audioModules/moduleTypes'\r\n\r\nfunction BaseModules() {\r\n  return (\r\n    <Fragment>\r\n      <DrawerItem fullName='oscillator' id='osc' moduleType={OSCILLATOR}/>\r\n      <DrawerItem fullName='mp3' id='local' moduleType={MEDIA_ELEMENT} />\r\n      <DrawerItem fullName='gain' id='gain' moduleType={GAIN}/>\r\n      <DrawerItem fullName='output' id='out' moduleType={OUTPUT}/>\r\n      <DrawerItem fullName='auto filter' id='filter' moduleType={AUTOFILTER}/>\r\n      <DrawerItem fullName='kompressor' id='komp' moduleType={KOMPRESSOR}/>\r\n      <DrawerItem fullName='stereo panner' id='pan' moduleType={STEREO_PANNER}/>\r\n      <DrawerItem fullName='signal delay' id='dly' moduleType={SIGNAL_DELAY}/>\r\n      <DrawerItem fullName='constant' id='const' moduleType={CONSTANT} />\r\n      <DrawerItem fullName='container' id='cntnr' moduleType={CONTAINER} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BaseModules","import React, { useState } from 'react'\r\nimport useJSS from './style'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { sizes } from '../../theme/theme'\r\nimport DrawerRouteLink from './DrawerRouteLink'\r\nimport BaseModules from './ModuleIcons/BaseModules'\r\nimport { HorizontalScrollDiv } from '../all'\r\n\r\nfunction RightDrawer() {\r\n  const classes = useJSS()\r\n  const [open, setOpen] = useState(true)\r\n  const closed = '-' + sizes.rightDrawer.width\r\n  const drawerSpring = useSpring({\r\n    right: open ? '0vw' : closed,\r\n    config: {\r\n      tension: 220,\r\n      clamp: true,\r\n    }\r\n  })\r\n  const [selectedRoute, setSR] = useState('base modules')\r\n  return (\r\n    <animated.div className={classes.DrawerBounder} style={drawerSpring}>\r\n      <div className={classes.Toggle} onClick={() => {setOpen(!open)}}>\r\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\r\n      </div>\r\n      <div className={classes.Drawer}>\r\n        <HorizontalScrollDiv className={classes.DrawerHeader}>\r\n          <DrawerRouteLink\r\n            className={classes.DrawerHeaderItem} \r\n            text='base modules'\r\n            onClick={() => {setSR('base modules')}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n          <DrawerRouteLink\r\n            className={classes.DrawerHeaderItem} \r\n            text='higher order' \r\n            onClick={() => {setSR('higher order')}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n          <DrawerRouteLink \r\n            className={classes.DrawerHeaderItem} \r\n            text='settings' \r\n            onClick={() => {setSR('settings')}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n        </HorizontalScrollDiv>\r\n        <div className={classes.ItemRouter}>\r\n          {\r\n            selectedRoute === 'base modules' ?\r\n            <BaseModules /> :\r\n            selectedRoute === 'higher order' ?\r\n            <div/> :\r\n            selectedRoute === 'settings' ?\r\n            <div/> :\r\n            null\r\n          }\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport default RightDrawer","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  LeftDrawer: {\r\n    backgroundColor: colors.leftDrawer,\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontSize: 'calc(20px + 2vmin)',\r\n    color: 'white',\r\n    userSelect: 'none',\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    zIndex: '20',\r\n  },\r\n\r\n  // TopItems\r\n\r\n  TopItems: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxHeight: '50%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  //header\r\n\r\n  HeaderScrollBounder: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    '&::-webkit-scrollbar': {\r\n      height: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerHeader: {\r\n    width: '100%',\r\n    height: '1em',\r\n    whiteSpace: 'nowrap',\r\n    backgroundColor: 'transparent',\r\n    color: 'white',\r\n    fontSize: sizes.text.large,\r\n    padding: '1vmin 0vmin',\r\n    borderWidth: '1px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    justifyText: 'center',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  MenuHeader: {\r\n    fontSize: sizes.text.medium,\r\n    borderStyle: 'none none solid none',\r\n    margin: '1vmin',\r\n    width: '90%'\r\n  }, \r\n\r\n  Connection: {\r\n    fontSize: sizes.text.small,\r\n    backgroundColor: colors.fillModule,\r\n    margin: '.5vmin 3vmin',\r\n    borderRadius: '1vmin',\r\n    borderColor: 'transparent',\r\n    borderStyle: 'solid',\r\n    minWidth: '30%',\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: colors.deleteButton,\r\n    },\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n\r\n  //control menu (in the center of left drawer)\r\n\r\n  ControlMenu: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  ControlBounder: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    padding: '1vmin',\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  ControlInput: {\r\n    minWidth: '9vmin',\r\n    maxWidth: '5em',\r\n    margin: '1vmin',\r\n    fontSize: sizes.text.small\r\n  },\r\n\r\n  ControlTypeSelect: {\r\n    minWidth: '9vmin',\r\n    maxWidth: '5em',\r\n    margin: '1vmin',\r\n    fontSize: sizes.text.small\r\n  },\r\n\r\n  // bottom items\r\n\r\n  BottomItems: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxHeight: '50%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  // Center Menu\r\n\r\n  CMInputBounder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n\r\n  CenterMenuInput: {\r\n    backgroundColor: colors.grey,\r\n    color: 'white',\r\n    height: '2vmin',\r\n    padding: '1vmin',\r\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\r\n    borderStyle: 'none',\r\n    borderRadius: '1vmin',\r\n    fontSize: sizes.text.small,\r\n    width: '23vmin',\r\n    '&:hover': {\r\n      cursor: 'text',\r\n    },\r\n  },\r\n\r\n  InputSubmit: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: colors.grey,\r\n    height: '2vmin',\r\n    padding: '1vmin',\r\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\r\n    borderRadius: '1vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  Error: {\r\n    backgroundColor: colors.errorBackground,\r\n    width: '90%',\r\n    color: 'white',\r\n    fontSize: sizes.text.small,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '1vmin',\r\n    padding: '1vmin 0vmin',\r\n    marginBottom: '1vmin',\r\n  },\r\n})\r\n\r\nexport default useJSS","import { \r\n  ADD_MODULE,\r\n  REMOVE_MODULE,\r\n  MOVE_MODULE, \r\n  RENAME_MODULE,\r\n  ADD_CONNECTION,\r\n  REMOVE_CONNECTION\r\n} from './moduleActionTypes'\r\nimport { ModuleType } from '../../audioModules/moduleTypes'\r\n\r\nexport const addModule = (id: string, name: string, moduleType: ModuleType, parentID: string, row: number, col: number) => {\r\n  return {\r\n    type: ADD_MODULE,\r\n    moduleType,\r\n    id,\r\n    name,\r\n    row,\r\n    col,\r\n    parentID,\r\n  }\r\n}\r\n\r\nexport const removeModule = (id: string) => {\r\n  return {\r\n    type: REMOVE_MODULE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const moveModule = (id: string, newRow: number, newCol: number) => {\r\n  return {\r\n    type: MOVE_MODULE,\r\n    id,\r\n    newRow,\r\n    newCol,\r\n  }\r\n}\r\n\r\nexport const renameModule = (id: string, newName: string) => {\r\n  return {\r\n    type: RENAME_MODULE,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const addConnection = (fromID: string, toID: string, param = '') => {\r\n  return {\r\n    type: ADD_CONNECTION,\r\n    fromID,\r\n    toID,\r\n    param,\r\n  }\r\n}\r\n\r\nexport const removeConnection = (fromID: string, toID: string, param = '') => {\r\n  return {\r\n    type: REMOVE_CONNECTION,\r\n    fromID,\r\n    toID,\r\n    param,\r\n  }\r\n}","export const ADD_MODULE = 'ADD_MODULE'\r\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\r\nexport const MOVE_MODULE = 'MOVE_MODULE'\r\nexport const RENAME_MODULE = 'RENAME_MODULE'\r\nexport const ADD_CONNECTION = 'ADD_CONNECTION'\r\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'","import React, { useRef, useState } from 'react'\r\nimport { CenterMenu } from '../all'\r\nimport useJSS from './style'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\nimport { renameModule } from '../../redux/allActions'\r\n\r\n\r\ninterface Props {\r\n  setRMOpen: (bool: boolean) => void\r\n}\r\n\r\nfunction RenameMenu({ setRMOpen }: Props) {\r\n  const classes = useJSS()\r\n  const renameInputRef = useRef<HTMLInputElement>(null)\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const dispatch = useDispatch()\r\n  const [ isTooShort, setSubmitState] = useState(false)\r\n  function submitNewName() {\r\n    if (renameInputRef && renameInputRef.current) {\r\n      const newName = renameInputRef.current.value\r\n      if (newName.length === 0) {\r\n        setSubmitState(true)\r\n      } else {\r\n        dispatch(renameModule(window.highlightedID, newName))\r\n        window.reRenderLeftDrawer()\r\n        setRMOpen(false)\r\n      } \r\n    }\r\n  }\r\n  return (\r\n    <CenterMenu header='rename' onClose={() => {setRMOpen(false)}}>\r\n        <div className={classes.CMInputBounder}>\r\n          <input className={classes.CenterMenuInput}\r\n            placeholder={modules[window.highlightedID].name}\r\n            onKeyUp={event => {\r\n              if (event.keyCode === 13) {\r\n                submitNewName()\r\n              } else if (event.keyCode === 27) {\r\n                setRMOpen(false)\r\n              }\r\n            }}\r\n            ref={renameInputRef}\r\n            autoFocus\r\n          />\r\n          <div className={classes.InputSubmit}\r\n            onClick={() => {submitNewName()}}\r\n          >enter</div>\r\n        </div>\r\n        {!isTooShort ? null :\r\n        <div className={classes.Error}>\r\n          please enter a name\r\n        </div>}\r\n      </CenterMenu>\r\n  )\r\n}\r\n\r\nexport default RenameMenu","import { ConnectingAudioModule, AudioModule } from \"./moduleTypes\";\r\n\r\nexport function connect(fromMod: ConnectingAudioModule, toMod: AudioModule, param = '') {\r\n  if (param.length === 0) {\r\n    fromMod.audioNode.connect(toMod.audioNode)\r\n    console.log(`connected ${fromMod.audioNode} to ${toMod.audioNode}`)\r\n  } else {\r\n    if (toMod.audioNode[param]) {\r\n      fromMod.audioNode.connect(toMod.audioNode[param])\r\n    } else {\r\n      alert('param does not exist')\r\n    }\r\n  }\r\n}\r\n\r\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: AudioModule, param = '') {\r\n  if (param.length === 0) {\r\n    fromMod.audioNode.disconnect(toMod.audioNode)\r\n  } else {\r\n    if (toMod.audioNode[param]) {\r\n      fromMod.audioNode.disconnect(toMod.audioNode[param])\r\n    } else {\r\n      alert('param does not exist')\r\n    }\r\n  }\r\n}","import React, { useState, Fragment } from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport useJSS from './style'\r\nimport { colors, sizes } from '../../theme/theme'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeModule, removeConnection } from '../../redux/allActions'\r\nimport { HorizontalScrollDiv, Button } from '../all'\r\nimport RenameMenu from './RenameMenu'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\nimport { disconnect } from '../../audioModules/connection'\r\nimport { ConnectingAudioModule, TYPE, BUTTON, VALUE, FILE } from '../../audioModules/moduleTypes'\r\nimport { AudioModuleWithTypes } from '../../audioModules/moduleTypes'\r\n\r\ndeclare global {\r\n  interface Window { \r\n    setLeftDrawerOpen: (isOpen: boolean) => void\r\n    reRenderLeftDrawer: () => void\r\n  }\r\n}\r\n\r\nfunction LeftDrawer() {\r\n  const classes = useJSS()\r\n  const [isOpen, setOpen] = useState(false)\r\n  window.setLeftDrawerOpen = setOpen\r\n  const springStyle = useSpring({\r\n    width: isOpen ? sizes.leftDrawer.width : '0vw',\r\n    config: {\r\n      tension: 300,\r\n      velocity: 10,\r\n      clamp: true,\r\n    }\r\n  })\r\n  const dispatch = useDispatch()\r\n  const [isRenameMenuOpen, setRMOpen] = useState(false)\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const selectedModule = modules[window.highlightedID]\r\n  const am = window.audioModules\r\n  const audioModule = am[window.highlightedID]\r\n  const [toReRender, setReRender] = useState(false)\r\n  window.reRenderLeftDrawer = () => {setReRender(!toReRender)}\r\n  return (\r\n    <React.Fragment>\r\n      <animated.div className={classes.LeftDrawer} style={springStyle}>\r\n        <div className={classes.TopItems}>\r\n          <HorizontalScrollDiv className={classes.HeaderScrollBounder}>\r\n            <div className={classes.DrawerHeader} onClick={() => {\r\n              setRMOpen(true)\r\n            }}>\r\n              {selectedModule ? selectedModule.name : null}\r\n            </div>\r\n          </HorizontalScrollDiv>\r\n          {!selectedModule ? null : selectedModule.inputs.length === 0 ? null : \r\n            <div className={classes.MenuHeader}>inputs</div>\r\n          }\r\n          {!selectedModule ? null : selectedModule.inputs.map((inputData, key) => {\r\n            const name = modules[inputData[0]].name\r\n            return (\r\n              <div className={classes.Connection}\r\n                key={inputData[0] + key}\r\n                onClick={() => {\r\n                  dispatch(removeConnection(inputData[0], selectedModule.id, inputData[1]))\r\n                  disconnect(am[inputData[0]] as ConnectingAudioModule, am[selectedModule.id], inputData[1])\r\n                }}\r\n              >\r\n                {inputData[1].length === 0 ? name : `${name} - ${inputData[1]}`}\r\n              </div>\r\n            )\r\n          })}\r\n          {!selectedModule ? null : selectedModule.outputs.length === 0 ? null :\r\n            <div className={classes.MenuHeader}>outputs</div>\r\n          }\r\n          {!selectedModule ? null : selectedModule.outputs.map((outputData, key) => {\r\n            const name = modules[outputData[0]].name\r\n            return (\r\n              <div className={classes.Connection}\r\n                key={outputData[0] + key}\r\n                onClick={() => {\r\n                  dispatch(removeConnection(selectedModule.id, outputData[0], outputData[1]))\r\n                  disconnect(am[selectedModule.id] as ConnectingAudioModule, am[outputData[0]], outputData[1])\r\n                }}\r\n              >{outputData[1].length === 0 ? name : `${name} - ${outputData[1]}`}</div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={classes.ControlMenu}>\r\n          <div className={classes.MenuHeader}>controls</div>\r\n          {audioModule ? Object.keys(audioModule.controlData).map((controlID, index) => {\r\n            const { controlType, paramID, value, range } = audioModule.controlData[controlID]\r\n            const setFunc = audioModule.controlSetFuncs[controlID]\r\n            const audioNode = audioModule.audioNode\r\n            return (\r\n              <div className={classes.ControlBounder} key={selectedModule.id + index}>\r\n                {controlType === VALUE\r\n                ?\r\n                <Fragment>\r\n                  <div>{controlID}</div>\r\n                  <input className={classes.ControlInput}\r\n                    type='number'\r\n                    value={typeof(value) === 'number' ? value : audioNode[paramID].value}\r\n                    min={range ? range[0] : undefined}\r\n                    max={range ? range[1] : undefined}\r\n                    step={!range ? undefined : range[2] ? range[2] : undefined}\r\n                    onChange={(e) => {\r\n                      setFunc(e.target.value)\r\n                      window.reRenderLeftDrawer()\r\n                    }}\r\n                  />\r\n                </Fragment>\r\n                :\r\n                controlType === BUTTON\r\n                ?\r\n                <Button style={{\r\n                    //backgroundColor: colors.fillModule,\r\n                    borderColor: colors.deleteButton,\r\n                    width: '50%',\r\n                  }}\r\n                  onClick={() => {\r\n                    setFunc('')\r\n                  }}\r\n                >{controlID}</Button>\r\n                :\r\n                controlType === TYPE\r\n                ?\r\n                <Fragment>\r\n                  <label htmlFor={'type'}>choose type</label>\r\n                  <select className={classes.ControlTypeSelect}\r\n                    name='type' id='type'\r\n                    onChange={(e) => {\r\n                      setFunc(e.target.value)\r\n                      window.reRenderLeftDrawer()\r\n                    }}\r\n                    value={value ? value : audioNode.type as string}\r\n                  >\r\n                    {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\r\n                      return (\r\n                        <option value={type} key={selectedModule.id + type}>{type}</option>\r\n                      )\r\n                    })}\r\n                  </select>\r\n                </Fragment>\r\n                :\r\n                controlType === FILE\r\n                ?\r\n                <div className={classes.ControlMenu}>\r\n                  <label style={{ minWidth: '50%', }}\r\n                    htmlFor={window.highlightedID + controlID}\r\n                  >\r\n                    <Button style={{\r\n                      //backgroundColor: colors.fillModule,\r\n                      borderColor: colors.deleteButton,\r\n                    }}\r\n                    >choose file</Button>\r\n                  </label>\r\n                  <input style={{ width: 0, height: 0, opacity: 0 }}\r\n                    type='file'\r\n                    id={window.highlightedID + controlID}\r\n                    onChange={(e) => {\r\n                      const file = ((e.target as HTMLInputElement).files as FileList)[0]\r\n                      setFunc(URL.createObjectURL(file))\r\n                      window.audioTags[window.highlightedID].srcName = file.name\r\n                      window.reRenderAudioTags()\r\n                      window.reRenderLeftDrawer()\r\n                    }}\r\n                  />\r\n                  <p style={{ \r\n                    fontSize: sizes.text.xsmall,\r\n                    textAlign: 'center',\r\n                    whiteSpace: 'normal',\r\n                    justifyContent: 'center',\r\n                    width: '100%',\r\n                    overflowWrap: 'break-word', \r\n                    wordWrap: 'break-word',\r\n                    hyphens: 'auto',\r\n                  }}>\r\n                    {window.audioTags[window.highlightedID].srcName}\r\n                  </p>\r\n                </div>\r\n                :\r\n                null\r\n                }\r\n              </div>\r\n            )\r\n          }) : null}\r\n        </div>\r\n        <div className={classes.BottomItems}>\r\n          <Button style={{ \r\n            borderColor: colors.deleteButton,\r\n            //backgroundColor: colors.fillModule,\r\n            width: '50%',\r\n            fontSize: sizes.text.small\r\n          }}\r\n            onClick={() => {\r\n              selectedModule.inputs.forEach(inputData => {\r\n                disconnect(am[inputData[0]] as ConnectingAudioModule, audioModule, inputData[1])\r\n                dispatch(removeConnection(inputData[0], selectedModule.id, inputData[1]))\r\n              })\r\n              selectedModule.outputs.forEach(outputData => {\r\n                disconnect(audioModule as ConnectingAudioModule, am[outputData[0]], outputData[1])\r\n                dispatch(removeConnection(selectedModule.id, outputData[0], outputData[1]))\r\n              })\r\n              dispatch(removeModule(window.highlightedID))\r\n              window.setLeftDrawerOpen(false)\r\n              window.highlightedID = ''\r\n              \r\n            }}\r\n          >delete</Button>\r\n        </div>\r\n      </animated.div>\r\n      {!isRenameMenuOpen ? null :\r\n      <RenameMenu setRMOpen={setRMOpen}/>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default LeftDrawer","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  FillBounder: {\r\n    backgroundColor: colors.fillModule,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '10vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    borderRadius: '2vmin',\r\n  },\r\n\r\n  FillHeader: {\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    padding: '1vmin',\r\n    marginLeft: '2vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n\r\n  Fill: {\r\n    display: 'grid',\r\n    minWidth: sizes.moduleView.iconGrid,\r\n    minHeight: sizes.moduleView.iconGrid,\r\n    alignItems: 'center',\r\n    justifyItems: 'center',\r\n    padding: '2vmin',\r\n    zIndex: 1,\r\n  },\r\n\r\n  ArcherContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 0,\r\n    display: 'grid',\r\n  },\r\n\r\n  Icon: {\r\n    backgroundColor: colors.module,\r\n    width: sizes.moduleView.icon,\r\n    height: sizes.moduleView.icon,\r\n    borderRadius: '1.5vmin',\r\n    borderStyle: 'none',\r\n    borderColor: 'white',\r\n    whiteSpace: 'wrap',\r\n    fontSize: sizes.text.medium,\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderStyle: 'solid',\r\n    },\r\n    zIndex: 2,\r\n  },\r\n\r\n  IconName: {\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  IconConnector: {\r\n    backgroundColor: colors.outputConnector,\r\n    width: sizes.connector.size,\r\n    height: sizes.connector.size,\r\n    borderRadius: sizes.connector.borderRadius,\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    borderStyle: 'none',\r\n    borderColor: 'white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n\r\n  DropSquare: {\r\n    width: sizes.moduleView.iconGrid,\r\n    height: sizes.moduleView.iconGrid,\r\n    borderStyle: 'none',\r\n    borderColor: colors.dropSquareHL,\r\n    borderRadius: '10px',\r\n    zIndex: 1,\r\n  },\r\n})\r\n\r\nexport default useJSS","import React, { Fragment, useState } from 'react'\r\nimport { CenterMenu, Button } from '../all'\r\nimport { connect } from '../../audioModules/connection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ConnectingAudioModule, OSCILLATOR, CONSTANT } from '../../audioModules/moduleTypes'\r\nimport { addConnection } from '../../redux/allActions'\r\nimport CSS from 'csstype'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\n\r\ninterface Props {\r\n  fromID: string\r\n  toID: string\r\n  toType: string\r\n  onClose: () => void\r\n}\r\n\r\nconst buttonStyle: CSS.Properties = {\r\n  \r\n}\r\n\r\nfunction ConnectionMenu({ fromID, toID, toType, onClose }: Props) {\r\n  const [openMenu, setOpenMenu] = useState(0)\r\n  const am = window.audioModules\r\n  const dispatch = useDispatch()\r\n  const { fromName, toName } = useSelector((state: RootState) => {\r\n    return {\r\n      fromName: state.modules[fromID].name,\r\n      toName: state.modules[toID].name,\r\n    }\r\n  })\r\n  return (\r\n    <Fragment>\r\n      {openMenu === 0 ?\r\n        <CenterMenu header={`connect ${fromName} to ${toName}`} onClose={() => {\r\n          setOpenMenu(0)\r\n          onClose()\r\n        }}>\r\n          {toType === OSCILLATOR || toType === CONSTANT ? null :\r\n          <Button style={buttonStyle}\r\n            onClick={() => {\r\n              connect(am[fromID] as ConnectingAudioModule, am[toID])\r\n              dispatch(addConnection(fromID, toID))\r\n              setOpenMenu(0)\r\n              onClose()\r\n            }}\r\n          >module</Button>}\r\n          {am[toID].connectingParamIDs.length === 0 ? null :\r\n          <Button style={buttonStyle}\r\n            onClick={(e) => {\r\n              e.stopPropagation()\r\n              setOpenMenu(1)\r\n            }}\r\n          >params</Button>}\r\n        </CenterMenu>\r\n        :\r\n        <CenterMenu header={'props'} onClose={() => {\r\n          setOpenMenu(0)\r\n          onClose()\r\n        }}>\r\n          {am[toID].connectingParamIDs.map((paramID, key) => {\r\n            return (\r\n            <Button key={fromID + toID + key}\r\n              onClick={() => {\r\n                connect(am[fromID] as ConnectingAudioModule, am[toID], paramID)\r\n                dispatch(addConnection(fromID, toID, paramID))\r\n                setOpenMenu(0)\r\n                onClose()\r\n              }}\r\n            >{paramID}</Button>\r\n            )\r\n          })}\r\n        </CenterMenu>\r\n      }\r\n      \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ConnectionMenu","import React, { useState, Fragment } from 'react'\r\nimport { Module, RootState } from '../../redux/stateTSTypes'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { moveModule } from '../../redux/allActions'\r\nimport ConnectionMenu from './ConnectionMenu'\r\nimport { OUTPUT } from '../../audioModules/moduleTypes'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    currSetHighlighted: (setHighlighted: boolean) => void\r\n  }\r\n}\r\n\r\nwindow.currSetHighlighted = (setHighlighted) => {}\r\n\r\ninterface Props {\r\n  mod: Module\r\n  gridCol: number\r\n  gridRow: number\r\n}\r\n\r\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\r\n  const classes = useJSS()\r\n  const [isHighlighted, setHighlighted] = useState(mod.id === window.highlightedID)\r\n  if (mod.id === window.highlightedID) {\r\n    window.currSetHighlighted = setHighlighted\r\n  }\r\n  const iconStyle: CSS.Properties = {\r\n    gridColumn: `${gridCol} / span 1`,\r\n    gridRow: `${gridRow} / span 1`,\r\n    borderStyle: isHighlighted ? 'solid' : 'none'\r\n  }\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const dispatch = useDispatch()\r\n  const [cmState, setCMState] = useState({ // connectionMenuState\r\n    isOpen: false,\r\n    fromID: '',\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <div \r\n        className={classes.Icon} \r\n        style={iconStyle}\r\n        onDragOver={event => {\r\n          event.preventDefault()\r\n        }}\r\n        onDragEnter={() => {\r\n          setHighlighted(true)\r\n        }}\r\n        onDragLeave={() => {\r\n          setHighlighted(false)\r\n        }}\r\n        onDrop={e => {\r\n          const id = e.dataTransfer.getData('id')\r\n          if (id) {\r\n            const possiblyMod = modules[id]\r\n            if (possiblyMod) {\r\n              const fromRow = e.dataTransfer.getData('fromRow')\r\n              const fromCol = e.dataTransfer.getData('fromCol')\r\n              window.setFillIsExpanded(false)\r\n              dispatch(moveModule(id, mod.row, mod.col))\r\n              dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\r\n              window.setTimeout(window.refreshArcherContainer, 500)\r\n            }\r\n          } else {\r\n            const fromID = e.dataTransfer.getData('fromID')\r\n            if (fromID) {\r\n              setCMState({\r\n                isOpen: true,\r\n                fromID\r\n              })\r\n            }\r\n          }\r\n          setHighlighted(false)\r\n        }}\r\n        draggable={true}\r\n        onDragStart={event => {\r\n          event.dataTransfer.setData('id', mod.id)\r\n          event.dataTransfer.setData('fromRow', `${mod.row}`)\r\n          event.dataTransfer.setData('fromCol', `${mod.col}`)\r\n          window.setFillIsExpanded(true)\r\n        }}\r\n        onDragEnd={() => {\r\n          window.setFillIsExpanded(false)\r\n        }}\r\n        onClick={e => {\r\n          if (e.stopPropagation) {\r\n            e.stopPropagation()\r\n          }\r\n          if (window.linkToOutputID.length === 0) {\r\n            if (mod.id === window.highlightedID) {\r\n              window.setLeftDrawerOpen(false)\r\n              setHighlighted(false)\r\n              window.highlightedID = ''\r\n              window.currSetHighlighted = (setHighlighted) => {}\r\n            } else {\r\n              window.setLeftDrawerOpen(true)\r\n              window.reRenderLeftDrawer()\r\n              setHighlighted(true)\r\n              window.highlightedID = mod.id\r\n              window.currSetHighlighted(false)\r\n              window.currSetHighlighted = setHighlighted\r\n            }\r\n          } else {\r\n            setCMState({\r\n              isOpen: true,\r\n              fromID: window.linkToOutputID\r\n            })\r\n          }\r\n        }}\r\n      >\r\n        {mod.moduleType !== OUTPUT ? \r\n        <div className={classes.IconConnector}\r\n          draggable={true}\r\n          onDragStart={(e) => {\r\n            e.stopPropagation()\r\n            e.dataTransfer.setData('fromID', mod.id)\r\n          }}\r\n        /> : <div style={{ width: '1vmin', height: '1vmin' }}/>}\r\n        <div className={classes.IconName}>\r\n          {mod.name}\r\n        </div>\r\n      </div>\r\n      {!cmState.isOpen ? null :\r\n      <ConnectionMenu fromID={cmState.fromID} toID={mod.id} toType={mod.moduleType}\r\n        onClose={() => {\r\n          setCMState({\r\n            isOpen: false,\r\n            fromID: '',\r\n          })\r\n          window.linkToOutputID = ''\r\n        }}\r\n      />}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ModuleViewIcon","export function stringIn(str: string, ar: any[]) {\r\n\t// returns true if string is an element of array\r\n\t// false otherwise\r\n\tfor (var i = 0; i < ar.length; i++) {\r\n\t\tif (ar[i] === str) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}\r\n\r\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\r\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\r\n}\r\n\r\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\r\n\t// variable is set to list[index]\r\n\t// puts variable into list at index (replacing what's there)\r\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\r\n\tvar temp = list[index]\r\n\tlist[index] = variable\r\n\t\r\n\treturn temp\r\n}\r\n\r\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\r\n\tvar wrapped: () => T = function () {\r\n\t\treturn func(...args)\r\n\t}\r\n\t\r\n\treturn wrapped\r\n}\r\n\r\nexport function arrayEqual(arr1: any[], arr2: any[]) {\r\n\tif (arr1.length === arr2.length) {\r\n\t\tfor(var i = 0; i < arr1.length; i++) {\r\n\t\t\tif (arr1[i] !== arr2[i]) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport function range(start: number, stop: number) {\r\n\t// returns list of integers from start (inclusive) to stop (exclusive)\r\n\tvar out = []\r\n\tfor (var i = start; i < stop; i++) {\r\n\t\tout.push(i)\r\n\t}\r\n\treturn out\r\n}","import React, { useState } from 'react'\r\nimport CSS from 'csstype'\r\nimport useJSS from './style'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addModule } from '../../redux/allActions'\r\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\r\nimport { moveModule } from '../../redux/modules/moduleActions'\r\nimport { isOccupied } from './helpers'\r\nimport { ModuleType } from '../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  row: number\r\n  col: number\r\n}\r\n\r\n\r\n\r\nfunction DropSquare({ row, col }: Props) {\r\n  const classes = useJSS()\r\n  const dispatch = useDispatch()\r\n  const { modules } = useSelector((state: RootState) => {\r\n    return {\r\n      modules: state.modules\r\n    }\r\n  })\r\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\r\n  const dsStyle: CSS.Properties = {\r\n    gridColumn: `${col * 2 + 1} / span 1`,\r\n    gridRow: `${row * 2 + 1} / span 1`,\r\n    borderStyle: isHL ? 'solid' : 'none',\r\n  }\r\n  return (\r\n    <div \r\n      className={classes.DropSquare} \r\n      style={dsStyle}\r\n      onDragOver={event => {\r\n        event.preventDefault()\r\n      }}\r\n      onDragEnter={() => {\r\n        setHL(true)\r\n      }}\r\n      onDragLeave={() => {\r\n        setHL(false)\r\n      }}\r\n      onDrop={event => {\r\n        const id = event.dataTransfer.getData('id')\r\n        const fc = modules[window.fillContainerID] as ContainerModule\r\n        const currentChildren = fc.childModules.concat(fc.childModules)\r\n        const possiblyMod = modules[id]\r\n        const possiblyOccupyingID = isOccupied(row, col, currentChildren, modules)\r\n        if (!possiblyMod) {\r\n          if (!possiblyOccupyingID) {\r\n            const moduleType = event.dataTransfer.getData('moduleType') as ModuleType\r\n            const name = event.dataTransfer.getData('name')\r\n            setHL(false)\r\n            dispatch(addModule(id, name, moduleType, window.fillContainerID, row, col))\r\n            window.addModule(id, moduleType)\r\n            window.setFillIsExpanded(false)\r\n          }\r\n        } else if (possiblyOccupyingID) {\r\n          const fromRow = event.dataTransfer.getData('fromRow')\r\n          const fromCol = event.dataTransfer.getData('fromCol')\r\n          setHL(false)\r\n          window.setFillIsExpanded(false)\r\n          dispatch(moveModule(id, row, col))\r\n          dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\r\n          window.setTimeout(window.refreshArcherContainer, 1)\r\n        } else {\r\n          setHL(false)\r\n          window.setFillIsExpanded(false)\r\n          dispatch(moveModule(id, row, col))\r\n          window.setTimeout(window.refreshArcherContainer, 1)\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DropSquare","import { Modules } from \"../../redux/stateTSTypes\"\r\n\r\nexport function getGridRange(childModules: string[], modules: Modules) {\r\n  let maxRow = 0\r\n  let maxCol = 0 // min col is always 0\r\n  childModules.forEach(moduleID => {\r\n    const mod = modules[moduleID]\r\n    if (mod.row > maxRow) {\r\n      maxRow = mod.row\r\n    }\r\n    if (mod.col > maxCol) {\r\n      maxCol = mod.col\r\n    }\r\n  })\r\n  return { maxRow, maxCol }\r\n}\r\n\r\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\r\n  for (var i = 0; i < currentChildren.length; i++) {\r\n    const mod = modules[currentChildren[i]]\r\n    if (mod.row === row && mod.col === col) {\r\n      return mod.id\r\n    }\r\n  }\r\n  return false\r\n}","import React, { useState, Fragment, useRef } from 'react'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\nimport { sizes } from '../../theme/theme'\r\nimport ModuleViewIcon from './Icon'\r\nimport { ContainerModule } from '../../redux/stateTSTypes'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\nimport { getGridRange } from './helpers'\r\nimport { range } from '../../helpers/genFuncs'\r\nimport DropSquare from './DropSquare'\r\nimport { ArcherContainer, ArcherElement } from 'react-archer'\r\n\r\ndeclare global {\r\n  interface Window { \r\n    setFillIsExpanded: (isExpanded: boolean) => void\r\n    refreshArcherContainer: () => void\r\n    reRenderFillContainer: () => void\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  containerModule: ContainerModule\r\n}\r\n\r\nconst iconGridSize = sizes.moduleView.iconGrid\r\nconst gutterGridSize = sizes.moduleView.gutterGrid\r\n\r\nfunction ModuleViewFill({ containerModule }: Props) {\r\n  const classes = useJSS()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  window.setFillIsExpanded = setIsExpanded\r\n  const { modules } = useSelector((state: RootState) => {\r\n    return {\r\n      modules: state.modules,\r\n    }\r\n  })\r\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\r\n  let gridStyle: CSS.Properties\r\n  const isEmpty = containerModule.childModules.length === 0\r\n  if (isEmpty) {\r\n    gridStyle = {\r\n      gridTemplateRows: `repeat(${1}, ${iconGridSize} ${gutterGridSize})`,\r\n      gridTemplateColumns: `repeat(${1}, ${iconGridSize} ${gutterGridSize})`,\r\n    }\r\n  } else {\r\n    gridStyle = {\r\n      gridTemplateRows: `repeat(${isExpanded ? maxRow + 2 : maxRow + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n      gridTemplateColumns: `repeat(${isExpanded ? maxCol + 2 : maxCol + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n    }\r\n  }\r\n  const archerContainerRef = useRef<ArcherContainer>(null)\r\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\r\n  return (\r\n    <div className={classes.FillBounder}>\r\n      <div className={classes.FillHeader}\r\n        style={{ width: `${containerModule.name.length / 2}em` }}\r\n        onClick={(e) => {\r\n          e.stopPropagation()\r\n          window.highlightedID = containerModule.id // need to add cases to on rename reducer to rename fill/base containers\r\n          window.setLeftDrawerOpen(true)\r\n        }}\r\n      >{containerModule.name}</div>\r\n      <div className={classes.Fill} style={gridStyle} onClick={() => {\r\n        window.highlightedID = ''\r\n        window.currSetHighlighted(false)\r\n        window.currSetHighlighted = (setHighlighted) => {}\r\n        window.setLeftDrawerOpen(false)\r\n      }}>\r\n        {!isExpanded ? null : \r\n        isEmpty ? <DropSquare row={0} col={0}/> :\r\n        range(0, isExpanded ? maxRow + 2 : maxRow + 1).map(row => {\r\n          return range(0, isExpanded ? maxCol + 2 : maxCol + 1).map(col => {\r\n            return (\r\n              <DropSquare\r\n                key={`${row} ${col}`}\r\n                row={row} \r\n                col={col}\r\n              />\r\n            )\r\n          })\r\n        }).flat()}\r\n        {containerModule.childModules.map(moduleID => {\r\n          const mod = modules[moduleID]\r\n          return (\r\n            <ModuleViewIcon\r\n              key={mod.id}\r\n              mod={mod}\r\n              gridRow={mod.row * 2 + 1}\r\n              gridCol={mod.col * 2 + 1}\r\n            />\r\n          )\r\n        })}\r\n        <ArcherContainer className={classes.ArcherContainer}\r\n          style={{ \r\n            gridRow: `1 / span ${maxRow * 2 + 2}`, \r\n            gridColumn: `1 / span ${maxCol * 2 + 2}`,\r\n          }}\r\n          arrowLength={0}\r\n          ref={archerContainerRef}\r\n        >\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateRows: `repeat(${maxRow + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n            gridTemplateColumns: `repeat(${maxCol + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n          }}>\r\n          {containerModule.childModules.map(moduleID => {\r\n            const mod = modules[moduleID]\r\n            return (\r\n              <Fragment key={mod.id}>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'start start',\r\n                  position: 'relative',\r\n                  top: '10px',\r\n                  left: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' input'}\r\n                  >\r\n                    <div style={{ \r\n                      width: '10px', \r\n                      height: '10px', \r\n                      //backgroundColor: 'blue',\r\n                    }}></div>\r\n                  </ArcherElement>\r\n                </div>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'end start',\r\n                  position: 'relative',\r\n                  bottom: '10px',\r\n                  left: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' controls'}\r\n                  >\r\n                    <div style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                      //backgroundColor: 'yellow',\r\n                    }}></div>\r\n                  </ArcherElement>\r\n                </div>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'start end',\r\n                  position: 'relative',\r\n                  top: '10px',\r\n                  right: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' output'}\r\n                    relations={mod.outputs.map(outputData => {\r\n                      return {\r\n                        targetId: outputData[1] === '' ? outputData[0] + ' input' : outputData[0] + ' controls',\r\n                        targetAnchor: 'left',\r\n                        sourceAnchor: 'right',\r\n                        style: {\r\n                          strokeColor: outputData[1] === '' ? 'red' : 'blue',\r\n                          strokeWidth: outputData[1] === '' ? 1 : 1,\r\n                        }\r\n                      }\r\n                    })}\r\n                  >\r\n                    <div style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                      //backgroundColor: 'red',\r\n                    }}></div>\r\n                  </ArcherElement>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          })}\r\n          </div>\r\n        </ArcherContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModuleViewFill","import React, { ReactNode, useRef, WheelEvent } from 'react'\r\nimport CSS from 'csstype'\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n  className?: string\r\n  style?: CSS.Properties\r\n}\r\n\r\nconst baseStyle = {\r\n  overflowY: 'hidden',\r\n  overflowX: 'scroll',\r\n  display: 'flex',\r\n}\r\n\r\nfunction HorizontalScrollDiv({ children, className, style }: Props) {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  function onWheel(event: WheelEvent) {\r\n    if(ref && ref.current) {\r\n      ref.current.scrollLeft += event.deltaY\r\n    } \r\n  }\r\n\r\n  const baseStyleCopy = Object.assign({}, baseStyle)\r\n  return (\r\n    <div ref={ref} className={className} style={Object.assign(baseStyleCopy, style)} onWheel={onWheel}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalScrollDiv","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  CenterMenuBounder: {\r\n    backgroundColor: 'rgba(0,0,0,0.7)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: 100,\r\n  },\r\n\r\n  CenterMenu: {\r\n    backgroundColor: colors.centerMenu,\r\n    position: 'absolute',\r\n    top: '50vh',\r\n    left: '50vw',\r\n    transform: 'translate(-50%, calc(-50% - 50px))',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderRadius: '2vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    minWidth: '15vw',\r\n    padding: '1vmin 2vmin 2vmin 2vmin',\r\n    border: '1px solid white',\r\n    zIndex: 101,\r\n  },\r\n\r\n  Header: {\r\n    padding: '1vmin 2vmin',\r\n    margin: '0vmin 0vmin 2vmin 0vmin',\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    fontSize: sizes.text.large,\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  header: string\r\n  onClose: () => void\r\n}\r\n\r\nfunction CenterMenu({ children, header, onClose }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.CenterMenuBounder}\r\n      onClick={(e) => {\r\n        e.stopPropagation()\r\n        onClose()\r\n      }}\r\n    >\r\n      <div className={classes.CenterMenu}\r\n        onClick={(e) => {e.stopPropagation()}} \r\n      >\r\n        <div className={classes.Header}>\r\n          {header}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CenterMenu","import { createUseStyles } from 'react-jss'\r\n//import { colors } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  TestingArea: {\r\n    backgroundColor: 'black',\r\n    position: 'absolute',\r\n    top: '45vh',\r\n    left: '25vw',\r\n    width: '45vw',\r\n    height: '50vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 150,\r\n  },\r\n\r\n  ButtonDiv: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n  },\r\n\r\n  Button: {\r\n    margin: '2vmin',\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\n//import { makeOscillator, makeGain, makeOutput, makeAutoFilter } from '../../audioModules/all'\r\n//import { connect } from '../../audioModules/connection'\r\n\r\n// Successful FM Synth implementation!\r\n// done using new dynamic module connect function\r\n\r\n/*\r\nconst osc = makeOscillator('sine', 440, 0)\r\nconst oscGain = makeGain (1)\r\nconst lpf = makeAutoFilter('lowpass', 300, 0, 0, 1)\r\nconst output = makeOutput()\r\n\r\nconnect(osc, oscGain)\r\nconnect(oscGain, lpf)\r\nconnect(lpf, output)\r\n*/\r\n\r\nfunction MrTesterr() {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.TestingArea}>\r\n      {'mr testerrr'}\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'green' }}\r\n          onClick={() => {\r\n            //output.controls.resume('')\r\n          }}\r\n        >start ctx</div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'blue' }}\r\n        >\r\n          {'osc freq'}\r\n          <input style={{ height: '2em' }}\r\n            \r\n            onChange={(e) => {\r\n              //osc.controls['set frequency'](e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'blue' }}\r\n        >\r\n          {'lpf freq'}\r\n          <input style={{ height: '2em' }}\r\n            \r\n            onChange={(e) => {\r\n              //lpf.controls['set frequency'](e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'red' }}\r\n          onClick={() => {\r\n            //output.controls.suspend('')\r\n          }}\r\n        >stop ctx</div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MrTesterr","import { createUseStyles } from 'react-jss'\r\nimport { colors } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  Button: {\r\n    backgroundColor: colors.defaultButton,\r\n    borderColor: 'transparent',\r\n    borderRadius: '1vmin',\r\n    borderStyle: 'solid',\r\n    '&:active': {\r\n      borderColor: 'transparent',\r\n    },\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: 'white',\r\n    },\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '1vmin',\r\n    margin: '1vmin',\r\n    textAlign: 'center',\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n  style?: CSS.Properties\r\n}\r\n\r\nfunction Button({ onClick, children, style }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.Button}\r\n      onClick={onClick}\r\n      style={style}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button","const AudioContext = window.AudioContext\r\nconst audioCtx = new AudioContext()\r\nexport default audioCtx","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\r\n\r\nexport interface OscillatorModule extends BaseAM {\r\n  audioNode: OscillatorNode\r\n  typeTypes: string[]\r\n}\r\n\r\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\r\n\r\nfunction makeOscillator(): OscillatorModule {\r\n  const oscillator = audioCtx.createOscillator()\r\n   \r\n  const connectingParamIDs = ['frequency', 'detune']\r\n\r\n  const controlData: ControlData = {\r\n    'set type': {\r\n      controlType: TYPE,\r\n      paramID: 'type',\r\n    },\r\n    'set frequency': {\r\n      controlType: VALUE,\r\n      paramID: 'frequency'\r\n    },\r\n    'set detune': {\r\n      controlType: VALUE,\r\n      paramID: 'detune'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\r\n    'set frequency': (newFrequency: string) => { oscillator.frequency.value = Number(newFrequency) },\r\n    'set detune': (newDetune: string) => { oscillator.detune.value = Number(newDetune) },\r\n    'kill': (arg = '') => { oscillator.stop() }\r\n  }\r\n\r\n  oscillator.start()\r\n  \r\n  return { \r\n    audioNode: oscillator,\r\n    typeTypes: oscillatorTypes,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeOscillator","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface GainModule extends BaseAM {\r\n  audioNode: GainNode\r\n}\r\n\r\nfunction makeGain(gainAmount = 0): GainModule {\r\n  const gain = audioCtx.createGain()\r\n  gain.gain.value = gainAmount\r\n\r\n  const connectingParamIDs = ['gain']\r\n\r\n  const controlData: ControlData = {\r\n    'set gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain',\r\n      value: 0,\r\n      range: [-10000, 10000, 1]\r\n    },\r\n    'set fine gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain',\r\n      value: 0,\r\n      range: [-1, 1, .01]\r\n    }\r\n  }\r\n\r\n  function updateGain() {\r\n    gain.gain.value = (controlData['set gain'].value as number) + (controlData['set fine gain'].value as number)\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set gain': (newGain: string) => {\r\n      controlData['set gain'].value = Number(newGain)\r\n      updateGain()\r\n    },\r\n    'set fine gain': (newFineGain: string) => {\r\n      controlData['set fine gain'].value = Number(newFineGain)\r\n      updateGain()\r\n    },\r\n  }\r\n  \r\n  return { audioNode: gain, connectingParamIDs, controlData, controlSetFuncs }\r\n}\r\n\r\nexport default makeGain","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, BUTTON } from '../moduleTypes'\r\n\r\nexport interface OutputModule extends BaseAM {\r\n  audioNode: AudioNode\r\n}\r\n\r\nfunction makeOutput(): OutputModule {\r\n  const controlData: ControlData = {\r\n    'resume': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a'\r\n    },\r\n    'suspend': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs = {\r\n    'resume': (arg: string) => { audioCtx.resume() },\r\n    'suspend': (arg: string) => { audioCtx.suspend() }\r\n  }\r\n\r\n  audioCtx.resume()\r\n  return { \r\n    audioNode: audioCtx.destination, \r\n    connectingParamIDs: [],\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeOutput","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\r\n\r\nexport interface AutoFilterModule extends BaseAM {\r\n  audioNode: BiquadFilterNode\r\n  typeTypes: string[]\r\n}\r\n\r\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\r\n\r\nfunction makeAutoFilter (): AutoFilterModule {\r\n  const autoFilter = audioCtx.createBiquadFilter()\r\n\r\n  const connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\r\n\r\n  const controlData: ControlData = {\r\n    'set type': {\r\n      controlType: TYPE,\r\n      paramID: 'type',\r\n    },\r\n    'set frequency': {\r\n      controlType: VALUE,\r\n      paramID: 'frequency'\r\n    },\r\n    'set detune': {\r\n      controlType: VALUE,\r\n      paramID: 'detune'\r\n    },\r\n    'set Q': {\r\n      controlType: VALUE,\r\n      paramID: 'Q'\r\n    },\r\n    'set gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\r\n    'set frequency': (newFrequency: string) => { autoFilter.frequency.value = Number(newFrequency) },\r\n    'set detune': (newDetune: string) => { autoFilter.detune.value = Number(newDetune) },\r\n    'set Q': (newQ: string) => { autoFilter.Q.value = Number(newQ) },\r\n    'set gain': (newGain: string) => { autoFilter.gain.value = Number(newGain) },\r\n  }\r\n\r\n  return {\r\n    audioNode: autoFilter,\r\n    typeTypes: filterTypes,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }  \r\n}\r\n\r\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface KompressorModule extends BaseAM {\r\n  audioNode: DynamicsCompressorNode\r\n}\r\n\r\nfunction makeKompressor(): KompressorModule {\r\n  const kompressor = audioCtx.createDynamicsCompressor()\r\n\r\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\r\n\r\n  const controlData: ControlData = {\r\n    'set threshold': {\r\n      controlType: VALUE,\r\n      paramID: 'threshold',\r\n    },\r\n    'set knee': {\r\n      controlType: VALUE,\r\n      paramID: 'knee'\r\n    },\r\n    'set ratio': {\r\n      controlType: VALUE,\r\n      paramID: 'ratio'\r\n    },\r\n    'set attack': {\r\n      controlType: VALUE,\r\n      paramID: 'attack'\r\n    },\r\n    'set release': {\r\n      controlType: VALUE,\r\n      paramID: 'release'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set threshold': (newThreshold: string) => { kompressor.threshold.value = Number(newThreshold) },\r\n    'set knee': (newKnee: string) => { kompressor.knee.value = Number(newKnee) },\r\n    'set ratio': (newRatio: string) => { kompressor.ratio.value = Number(newRatio) },\r\n    'set attack': (newAttack: string) => { kompressor.attack.value = Number(newAttack)},\r\n    'set release': (newRelease: string) => { kompressor.release.value = Number(newRelease) },\r\n  }\r\n\r\n  return {\r\n    audioNode: kompressor,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeKompressor","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\r\n\r\nexport interface StereoPannerModule extends BaseAM {\r\n  audioNode: StereoPannerNode\r\n}\r\n\r\nfunction makeStereoPanner(): StereoPannerModule {\r\n  const stereoPanner = audioCtx.createStereoPanner()\r\n\r\n  const connectingParamIDs = ['pan']\r\n\r\n  const controlData: ControlData = {\r\n    'set pan': {\r\n      controlType: VALUE,\r\n      paramID: 'pan'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set pan': (newPan: string) => {stereoPanner.pan.value = Number(newPan)}\r\n  }\r\n\r\n  return {\r\n    audioNode: stereoPanner,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n\r\n}\r\n\r\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface SignalDelayModule extends BaseAM {\r\n  audioNode: DelayNode\r\n}\r\n\r\nfunction makeSignalDelay(): SignalDelayModule {\r\n  const signalDelay = audioCtx.createDelay()\r\n\r\n  const connectingParamIDs = ['delayTime']\r\n\r\n  const controlData: ControlData = {\r\n    'set delay time': {\r\n      controlType: VALUE,\r\n      paramID: 'delayTime'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = { \r\n    'set delay time': (newDelayTime: string) => { signalDelay.delayTime.value = Number(newDelayTime)}\r\n  }\r\n\r\n  return {\r\n    audioNode: signalDelay,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE, BUTTON } from '../moduleTypes'\r\n\r\nexport interface ConstantModule extends BaseAM {\r\n  audioNode: ConstantSourceNode\r\n  typeTypes: string[]\r\n}\r\n\r\ninterface SetValFuncs {\r\n  [index: string]: (arg: string) => void\r\n}\r\n\r\nconst constantSourceTypes = ['no ramp', 'linear', 'exponential']\r\n\r\nfunction makeConstantSource(): ConstantModule {\r\n  const constantSource = audioCtx.createConstantSource()\r\n  constantSource.offset.value = 0\r\n\r\n  const connectingParamIDs = ['offset']\r\n\r\n  const controlData: ControlData = {\r\n    'set value': {\r\n      controlType: VALUE,\r\n      paramID: 'offset',\r\n      value: 0,\r\n    },\r\n    'set ramp': {\r\n      controlType: TYPE,\r\n      paramID: 'n/a',\r\n      value: 'no ramp',\r\n    },\r\n    'set ramp length': {\r\n      controlType: VALUE,\r\n      paramID: 'n/a',\r\n      value: 1,\r\n      range: [0, 10000, 0.01],\r\n    },\r\n    'kill': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a',\r\n    }\r\n  }\r\n\r\n  const setValFuncs: SetValFuncs = {\r\n    'no ramp': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.value = Number(newValue) \r\n    },\r\n    'linear': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.linearRampToValueAtTime(Number(newValue), audioCtx.currentTime + (controlData['set ramp length'].value as number))},\r\n    'exponential': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.exponentialRampToValueAtTime(Number(newValue), audioCtx.currentTime + (controlData['set ramp length'].value as number))}\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set value': (newValue: string) => { setValFuncs[controlData['set ramp'].value as string](newValue) },\r\n    'set ramp': (newType: string) => { controlData['set ramp'].value = newType },\r\n    'set ramp length': (newValue: string) => { controlData['set ramp length'].value = Number(newValue) },\r\n    'kill': (arg = '') => { constantSource.stop() }\r\n  }\r\n\r\n  constantSource.start()\r\n\r\n  return { \r\n    audioNode: constantSource, \r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n    typeTypes: constantSourceTypes\r\n  }\r\n\r\n}\r\n\r\nexport default makeConstantSource","import audioCtx from \"../../audioCtx\"\r\nimport { RefObject } from 'react'\r\nimport { BaseAM, ControlData, ControlSetFuncs, FILE } from \"../moduleTypes\"\r\n\r\nexport interface MediaElementModule extends BaseAM {\r\n  audioNode: MediaElementAudioSourceNode\r\n  ref: RefObject<HTMLAudioElement>\r\n}\r\n\r\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\r\n  if (audioRef.current) {\r\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\r\n\r\n    console.log(audioRef)\r\n\r\n    const controlData: ControlData = {\r\n      'set file': {\r\n        controlType: FILE,\r\n        paramID: 'n/a'\r\n      }\r\n    }\r\n\r\n    const controlSetFuncs: ControlSetFuncs = {\r\n      'set file': (url: string) => {\r\n        (audioRef.current as HTMLAudioElement).src = url\r\n      }\r\n    }\r\n\r\n    return {\r\n      audioNode: mediaElement,\r\n      ref: audioRef,\r\n      connectingParamIDs: [],\r\n      controlData,\r\n      controlSetFuncs,\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeMediaElement","import React, { useRef, useEffect } from 'react'\r\nimport { makeMediaElement } from '../../audioModules/all'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\n\r\nfunction AudioTag({ id }: Props) {\r\n  const audioRef = useRef<HTMLAudioElement>(null)\r\n  useEffect(() => {\r\n    if (!window.audioModules[id]) {\r\n      const possiblyMediaElement = makeMediaElement(audioRef)\r\n      if (possiblyMediaElement) {\r\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <audio\r\n      ref={audioRef}\r\n      autoPlay\r\n    />\r\n  )\r\n}\r\n\r\nexport default AudioTag","import React, { Fragment, useState } from 'react'\r\nimport AudioTag from './AudioTag'\r\n\r\ninterface AudioTag {\r\n  id: string\r\n  srcName: string\r\n  ref?: React.RefObject<HTMLAudioElement>\r\n}\r\n\r\ninterface AudioTags {\r\n  [id: string]: AudioTag\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    audioTags: AudioTags\r\n    addAudioTag: (id: string) => void\r\n    reRenderAudioTags: () => void\r\n  }\r\n}\r\n\r\nwindow.addAudioTag = (id: string) => {\r\n  window.audioTags[id] = {\r\n    id: id,\r\n    srcName: ''\r\n  }\r\n}\r\n\r\nwindow.audioTags = {}\r\n\r\nfunction AudioTags() {\r\n  const [reRender, toReRender] = useState(false)\r\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\r\n  const ids = Object.keys(window.audioTags)\r\n  return (\r\n    <Fragment>\r\n      {ids.map((id) => {\r\n        return (\r\n          <AudioTag\r\n            key={id}\r\n            id={id}\r\n          />\r\n        )\r\n      })}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AudioTags","import { ModuleType, OSCILLATOR, OUTPUT, GAIN, AUTOFILTER, KOMPRESSOR, STEREO_PANNER, SIGNAL_DELAY, CONSTANT, MEDIA_ELEMENT } from './moduleTypes'\r\nimport { makeOscillator, makeOutput, makeGain, makeAutoFilter, makeKompressor, makeStereoPanner, makeSignalDelay, makeConstantSource } from './all'\r\n\r\nfunction makeAddModule() {\r\n  return function(id: string, moduleType: ModuleType) {\r\n    switch(moduleType) {\r\n      case OSCILLATOR: window.audioModules = { ...window.audioModules, [id]: makeOscillator() }; break\r\n      case GAIN: window.audioModules = { ...window.audioModules, [id]: makeGain() }; break\r\n      case OUTPUT: window.audioModules = { ...window.audioModules, [id]: makeOutput() }; break\r\n      case AUTOFILTER: window.audioModules = { ...window.audioModules, [id]: makeAutoFilter() }; break\r\n      case KOMPRESSOR: window.audioModules = { ...window.audioModules, [id]: makeKompressor() }; break\r\n      case STEREO_PANNER: window.audioModules = { ...window.audioModules, [id]: makeStereoPanner() }; break\r\n      case SIGNAL_DELAY: window.audioModules = { ...window.audioModules, [id]: makeSignalDelay() }; break\r\n      case CONSTANT: window.audioModules = { ...window.audioModules, [id]: makeConstantSource() }; break\r\n      case MEDIA_ELEMENT: window.addAudioTag(id); window.reRenderAudioTags(); break\r\n    }\r\n  }\r\n}\r\n\r\nexport default makeAddModule","import React from 'react'\r\nimport useJSS from './style'\r\nimport { RightDrawer, LeftDrawer, ModuleViewFill, AudioTags } from '../components/all'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState, ContainerModule } from '../redux/stateTSTypes'\r\nimport { AudioModules, ModuleType } from '../audioModules/moduleTypes'\r\nimport makeAddModule from '../audioModules/makeAddModule'\r\n\r\ndeclare global {\r\n  interface Window { \r\n    highlightedID: string\r\n    fillContainerID: string\r\n    linkToOutputID: string\r\n    audioModules: AudioModules\r\n    addModule: (id: string, moduleType: ModuleType) => void\r\n  }\r\n\r\n  interface AudioNode {\r\n    [index: string]: AudioParam\r\n  }\r\n}\r\n\r\nwindow.highlightedID = 'project' // make this '', for dev\r\nwindow.fillContainerID = 'project'\r\nwindow.linkToOutputID = ''\r\n\r\nwindow.audioModules = {}\r\nwindow.addModule = makeAddModule()\r\n\r\nfunction App() {\r\n  const classes = useJSS()\r\n  const modules = useSelector((state: RootState) => {\r\n    return state.modules\r\n  })\r\n  return (\r\n    <div className={classes.Bounder}>\r\n      <LeftDrawer />\r\n      <div className={classes.ModuleViewBounder}>\r\n        <ModuleViewFill containerModule={modules[window.fillContainerID] as ContainerModule}/>\r\n      </div>\r\n      <RightDrawer />\r\n      <AudioTags />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Modules, ContainerModule } from '../../stateTSTypes'\r\nimport { AddModuleAction } from '../moduleTSTypes'\r\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\r\n\r\nconst addModule = (state: Modules, { id, name, moduleType, row, col, parentID }: AddModuleAction) => {\r\n  switch(moduleType) {\r\n    case CONTAINER: return Object.assign({}, state, {\r\n      [id]: {\r\n        id,\r\n        name,\r\n        row,\r\n        col,\r\n        parentID,\r\n        moduleType,\r\n        inputs: [],\r\n        outputs: [],\r\n        childModules: [],\r\n        isBaseContainer: false,\r\n      },\r\n      [parentID]: {\r\n        ...state[parentID],\r\n        childModules: [\r\n          ...(state[parentID] as ContainerModule).childModules,\r\n          id\r\n        ]\r\n      }\r\n    })\r\n    default: return Object.assign({}, state, {\r\n      [id]: {\r\n        id,\r\n        name,\r\n        row,\r\n        col,\r\n        parentID,\r\n        moduleType,\r\n        inputs: [],\r\n        outputs: [],\r\n      },\r\n      [parentID]: {\r\n        ...state[parentID],\r\n        childModules: [\r\n          ...(state[parentID] as ContainerModule).childModules,\r\n          id\r\n        ]\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default addModule","import { Modules, ContainerModule } from \"../../stateTSTypes\"\r\nimport { RemoveModuleAction } from \"../moduleTSTypes\"\r\n\r\nconst removeModule = (state: Modules, { id }: RemoveModuleAction) => {\r\n  const parentID = state[id].parentID as string\r\n  const trimmedState = Object.fromEntries(Object.entries(state).filter(entry => entry[0] !== id))\r\n  return Object.assign({}, trimmedState, Object.fromEntries(Object.entries(trimmedState).map(entry => {\r\n    return [entry[0], { \r\n        ...entry[1],\r\n        inputs: entry[1].inputs.filter(inputData => inputData[0] !== id),\r\n        outputs: entry[1].outputs.filter(outputData => outputData[0] !== id)\r\n      }]\r\n    })), {\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      childModules: (state[parentID] as ContainerModule).childModules.filter(childID => childID !== id)\r\n    }\r\n  },)\r\n}\r\n\r\nexport default removeModule","import { Modules } from \"../../stateTSTypes\";\r\nimport { MoveModuleAction } from \"../moduleTSTypes\";\r\n\r\nconst moveModuleAction = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      row: newRow,\r\n      col: newCol,\r\n    }\r\n  })\r\n}\r\n\r\nexport default moveModuleAction","import { Modules } from \"../../stateTSTypes\"\r\nimport { RenameModuleAction } from \"../moduleTSTypes\"\r\n\r\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      name: newName\r\n    },\r\n  })\r\n}\r\n\r\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\r\nimport { AddConnectionAction } from \"../moduleTSTypes\";\r\n\r\nconst addConnection = (state: Modules, { fromID, toID, param }: AddConnectionAction) => {\r\n  return Object.assign({}, state, {\r\n    [toID]: {\r\n      ...state[toID],\r\n      inputs: [\r\n        ...state[toID].inputs,\r\n        [fromID, param]\r\n      ],\r\n    },\r\n    [fromID]: {\r\n      ...state[fromID],\r\n      outputs: [\r\n        ...state[fromID].outputs,\r\n        [toID, param],\r\n      ],\r\n    }\r\n  })\r\n}\r\n\r\nexport default addConnection","import { Modules } from \"../../stateTSTypes\";\r\nimport { RemoveConnectionAction } from \"../moduleTSTypes\";\r\n\r\nconst removeConnection = (state: Modules, { fromID, toID, param }: RemoveConnectionAction) => {\r\n  return Object.assign({}, state, {\r\n    [toID]: {\r\n      ...state[toID],\r\n      inputs: state[toID].inputs.filter(inputData => inputData[0] !== fromID || inputData[1] !== param)\r\n    },\r\n    [fromID]: {\r\n      ...state[fromID],\r\n      outputs: state[fromID].outputs.filter(outputData => outputData[0] !== toID || outputData[1] !== param)\r\n    },\r\n  })\r\n}\r\n\r\nexport default removeConnection","import { ContainerModule, Modules } from \"../stateTSTypes\"\r\nimport { ADD_MODULE, REMOVE_MODULE, MOVE_MODULE, RENAME_MODULE, ADD_CONNECTION, REMOVE_CONNECTION } from './moduleActionTypes'\r\nimport { ModuleAction, AddModuleAction, RemoveModuleAction, MoveModuleAction, RenameModuleAction, AddConnectionAction, RemoveConnectionAction } from './moduleTSTypes'\r\nimport { removeModuleReducer, addModuleReducer, moveModuleReducer, renameModuleReducer, addConnectionReducer, removeConnectionReducer } from \"./reducers/allModuleReducers\"\r\nimport { CONTAINER } from \"../../audioModules/moduleTypes\"\r\n\r\nconst initBaseCM: ContainerModule = {\r\n  id: 'project',\r\n  name: 'project',\r\n  row: 0,\r\n  col: 0,\r\n  moduleType: CONTAINER,\r\n  inputs: [],\r\n  outputs: [],\r\n  parentID: null,\r\n  childModules: [],\r\n  isBaseContainer: true\r\n}\r\n\r\nconst initState: Modules = {\r\n  'project': initBaseCM\r\n}\r\n\r\nconst moduleReducer = (state = initState, action: ModuleAction) => {\r\n  switch (action.type) {\r\n    case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\r\n    case REMOVE_MODULE: return removeModuleReducer(state, action as RemoveModuleAction)\r\n    case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\r\n    case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\r\n    case ADD_CONNECTION: return addConnectionReducer(state, action as AddConnectionAction)\r\n    case REMOVE_CONNECTION: return removeConnectionReducer(state, action as RemoveConnectionAction)\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\r\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\r\n\r\nconst bcidReducer = (state = 'project', action: BCIDAction) => {\r\n  switch (action.type) {\r\n    case DOWN_1_BASE: return action.newID\r\n    case CHANGE_BASE: return action.newID\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\r\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { combineReducers } from 'redux'\r\nimport moduleReducer from './modules/moduleReducer'\r\nimport bcidReducer from './baseContainerID/bcidReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  modules: moduleReducer,\r\n  baseContainerID: bcidReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools())\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}