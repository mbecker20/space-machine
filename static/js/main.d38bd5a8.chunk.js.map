{"version":3,"sources":["icons/settings.svg","App/style.ts","theme/theme.ts","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/moduleTypes.ts","components/RightDrawer/ModuleIcons/moduleData.ts","helpers/genFuncs.ts","theme/moduleColor.ts","components/RightDrawer/DrawerItem.tsx","components/RightDrawer/ModuleIcons/ModuleIcons.tsx","components/RightDrawer/FileMenu.tsx","components/RightDrawer/RightDrawer.tsx","components/ModuleView/style.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Type.tsx","components/Knob/helpers.ts","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/ControlMenu.tsx","audioModules/connection.ts","components/LargeIcon/InputOutputView.tsx","components/LargeIcon/MarkContainerControls.tsx","components/LargeIcon/MarkContainerIO.tsx","components/LargeIcon/DeleteButton.tsx","components/LargeIcon/ContainerControlMenu.tsx","components/ModuleView/Icon.tsx","components/DropSquare/style.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/helpers.ts","components/ModuleView/Fill.tsx","components/HorizontalScrollDiv/HorizontalScrollDiv.tsx","components/CenterMenu/style.ts","components/CenterMenu/CenterMenu.tsx","audioCtx.ts","components/MrTesterr/style.ts","components/MrTesterr/MrTesterr.tsx","components/Button/style.ts","components/Button/Button.tsx","audioModules/modules/mediaElement.ts","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/Knob/Knob.tsx","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","components/CenterMenus/makeData.ts","components/CenterMenus/ConnectionMenu/style.ts","components/CenterMenus/ConnectionMenu/IORecursion.tsx","components/CenterMenus/ConnectionMenu/ConnectionMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/RangeSetMenu/RangeSetMenu.tsx","components/CenterMenus/SaveMenu/SaveMenu.tsx","components/CenterMenus/CenterMenus.tsx","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","App/App.tsx","serviceWorker.ts","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/helpers.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","redux/root/rootActionTypes.ts","redux/store.ts","index.tsx"],"names":["module","exports","useJSS","createUseStyles","Bounder","backgroundImage","width","height","display","fontSize","color","position","top","left","userSelect","zIndex","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","overflowX","overflowY","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIcon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","DrawerBounder","right","Drawer","backgroundColor","DrawerHeader","DrawerHeaderItem","padding","textDecoration","whiteSpace","cursor","ItemRouter","flexFlow","alignContent","DrawerItem","boxShadow","margin","DrawerIcon","borderColor","borderStyle","marginBottom","DrawerItemText","Toggle","ToggleLine","HeaderItem","className","text","onClick","linkStyle","selectedRoute","style","VALUE","effectModuleData","sourceModuleData","utilityModuleData","stringIn","str","ar","i","length","range","start","stop","out","push","clamp","val","Math","min","max","inRange","getModuleColor","moduleType","numAdds","fullName","id","classes","draggable","onDragStart","event","dataTransfer","setData","window","setFillIsExpanded","onDragEnd","ModuleIcons","moduleData","map","modDat","index","key","FileMenu","useState","saveList","spaceDBConnection","saveName","openSaveMenu","drawerWidth","RightDrawer","open","setOpen","setWidth","drawerSpring","useSpring","transform","config","tension","setSR","drawerRef","useRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","clientWidth","innerWidth","adjusting","toReRender","useEffect","addEventListener","setTimeout","div","onPointerDown","e","stopPropagation","ref","shiftKey","current","setPointerCapture","pointerId","onPointerMove","clientX","onPointerUp","releasePointerCapture","onWheel","scrollLeft","deltaY","FillBounder","FillHeaderBounder","FillHeader","marginLeft","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","IconControlContainer","maxHeight","justifySelf","ArcherElement","gridTemplateRows","gridTemplateColumns","IconName","IconConnector","alignSelf","addModule","name","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","MenuHeader","Connection","ControlBounder","ControlMenu","ControlTypeSelect","maxWidth","textAlign","ControlInput","File","setFunc","reRenderIcon","modName","htmlFor","highlightedID","opacity","onChange","file","target","files","URL","createObjectURL","audioTags","srcName","reRenderAudioTags","overflowWrap","wordWrap","hyphens","Type","audioModule","value","audioNode","dispatch","useDispatch","typeTypes","getRotation","makeValString","roundedNumString","floor","toString","slice","ValueControl","displayModName","useSelector","state","modules","currRange","inputVal","setInputVal","initValue","onEveryChange","newVal","onSettingsClick","openRangeSetMenu","newRange","updateControlRange","ButtonControl","SwitchControl","initState","onSwitch","newState","selectedModule","Object","keys","controlType","controlSetFuncs","Value","Button","Switch","connect","fromMod","toMod","alert","disconnect","InputOutputView","am","audioModules","connections","inputs","actualOutputID","actualInputID","outputs","MarkContainerControls","marginTop","toContainerControls","isMarked","containerControls","switchStyle","MarkContainerIO","baseContainerID","fillContainerID","isContainerInput","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","DeleteButton","forEach","inputData","outputData","ContainerControlMenu","currUnHighlight","ModuleViewIcon","mod","gridCol","gridRow","isHighlighted","setHighlighted","controlMenuOpen","setControlMenuOpen","reRender","iconStyle","gridColumn","archerElementStyle","iconSpring","onFrame","refreshArcherContainer","onRest","nameSpring","assign","onDragOver","preventDefault","onDrop","getData","fromRow","fromCol","Number","connectingParamIDs","openConnectionMenu","openRenameMenu","relations","targetId","targetAnchor","sourceAnchor","strokeColor","DropSquare","isHL","setHL","dsStyle","onDragEnter","types","onDragLeave","fc","currentChildren","childModules","concat","possiblyMod","possiblyOccupyingID","isOccupied","ModuleViewFill","isExpanded","setIsExpanded","reRenderFillContainer","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","strokeWidth","arrowLength","flat","HorizontalScrollDiv","CenterMenuBounder","CenterMenu","border","Header","children","header","onClose","audioCtx","TestingArea","ButtonDiv","AudioContext","MrTesterr","makeMediaElement","audioRef","url","src","createMediaElementSource","AudioTag","possiblyMediaElement","autoPlay","addAudioTag","AudioTags","ids","setState","spring","cx","fill","x","y","rx","ry","circle","cy","r","KnobContainer","placeItems","KnobSVG","KnobText","InteractionLayer","SettingsButton","placeSelf","StatelessKnob","svgRef","scale","tempVal","textRef","movementY","stroke","onBlur","onKeyDown","keyCode","blur","title","placeholder","focus","openPointerLayer","settingsSVG","alt","Knob","PointerLayer","pointerLayerData","resetPointerLayerData","pointerLayerRef","makeConnectionMenuData","isOpen","makeRangeSetMenuData","onChangeSubmit","IORecursionBounder","IORecursionInnerBounder","IORecursion","isOutput","setConnection","isContainer","io","ioID","buttonStyle","ConnectionMenu","setOutputIndex","setInputIndex","actualFromID","setActualFromID","actualToID","setActualToID","isFromContainer","isToContainer","initMenu","openMenu","setOpenMenu","outputID","actualIOID","ioIndex","inputID","undefined","paramID","CMInputBounder","CenterMenuInput","InputSubmit","Error","RenameMenu","toRenameID","renameInputRef","isTooShort","setSubmitState","submitNewName","newName","renameModule","onKeyUp","autoFocus","RangeSetMenu","maxRange","setMin","setMax","SaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","CenterMenus","connectionMenuData","setConnectionMenuData","renameMenuData","setRenameMenuData","rangeSetMenuData","setRangeSetMenuData","saveMenuData","setSaveMenuData","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","makeOutput","resume","masterGain","createGain","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","makeContainer","makeAddModule","osc","oscControlData","gainControlData","output","outputControlData","filter","filterControlData","sampleRate","komp","kompControlData","panner","pannerControlData","delay","delayControlData","constant","constantControlData","mediaControlData","container","containerControlData","makePointerLayerData","App","setPointerLayerData","Boolean","location","hostname","match","isBaseContainer","moveModuleAction","renameContainer","markContainerInput","markContainerOutput","toContainerControlID","containerControl","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","bcidReducer","newID","connectionNumber","newModules","newConnections","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","removeModule","trimmedModules","childID","connectionReducer","combinedModuleConnectionReducer","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d38bd5a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","import { createUseStyles } from 'react-jss'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: '-1',\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: 0,\n    overflowX: 'hidden',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: 'black',\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n\n  dropSquareHL: 'white',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  connectableName: 'white',\n  expandableName: '#85adad',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C'\n}\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400px',\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIcon: '27vmin',\n    bigIconWidth: '30vmin',\n    bigIconHeight: '50vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '1.5vmin'\n  },\n  knob: {\n    size: 9, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: sizes.rightDrawer.width,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: sizes.rightDrawer.width,\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    height: 'calc(100% - 60px)',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // Drawer items\n\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    margin: '3vmin',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: sizes.rightDrawer.width,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\n\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT } from \"../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, id, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n]","export function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1] \n}","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG \n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n  }\n}\n\nexport default getModuleColor ","import React from 'react'\nimport useJSS from './style'\nimport getModuleColor from '../../theme/moduleColor'\n\n\ninterface Props {\n  fullName: string\n  id: string\n  moduleType: string\n}\n\nlet numAdds = 0\n\nfunction DrawerItem({ fullName, id, moduleType }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.DrawerItem}>\n      <div \n        className={classes.DrawerIcon}\n        style={{ backgroundColor: getModuleColor(moduleType) }}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData('id', `${id} ${numAdds}`)\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', id)\n          window.setFillIsExpanded(true)\n          numAdds+=1\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default DrawerItem","import React, { Fragment } from 'react'\nimport DrawerItem from '../DrawerItem'\nimport { DrawerModuleData } from './moduleData'\n\ninterface Props {\n  moduleData: DrawerModuleData\n}\n\nfunction ModuleIcons({ moduleData }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map((modDat, index) => {\n        return (\n          <DrawerItem fullName={modDat[0]} id={modDat[1]} moduleType={ modDat[2]} key={index}/>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import React, { useState } from 'react'\nimport { Button } from '../all'\nimport { RootState } from '../../redux/stateTSTypes'\n\ndeclare global {\n  interface Window {\n    spaceDBConnection: string\n  }\n}\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\n\nfunction FileMenu() {\n  const [ saveList,  ] = useState<string[]>([])\n  if (window.spaceDBConnection) {\n    \n  }\n  return (\n    <div>\n      <div>\n        {saveList.map(saveName => {\n          return (\n            <div key={saveName}>\n              {saveName}\n            </div>\n          )\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          window.openSaveMenu(saveList)\n        }}\n      >\n        save project\n      </Button>\n    </div>\n  )\n}\n\nexport default FileMenu","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { sourceModuleData, effectModuleData, utilityModuleData } from './ModuleIcons/moduleData'\nimport { clamp } from '../../helpers/genFuncs'\nimport ModuleIcons from './ModuleIcons/ModuleIcons'\nimport FileMenu from './FileMenu'\n\nconst SOURCES = 'sources'\nconst EFFECTS = 'effects'\nconst UTILITY = 'utility'\nconst FILE = 'file'\n\nlet drawerWidth = sizes.rightDrawer.width\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(SOURCES)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  })\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}px`\n            if (drawerRef.current) { drawerRef.current.style.width = drawerWidth }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = drawerWidth }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = drawerWidth }\n            if (toggleRef.current) { toggleRef.current.style.right = drawerWidth }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={SOURCES}\n            onClick={() => {setSR(SOURCES)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={EFFECTS} \n            onClick={() => {setSR(EFFECTS)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem \n            className={classes.DrawerHeaderItem} \n            text={UTILITY} \n            onClick={() => {setSR(UTILITY)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={FILE}\n            onClick={() => { setSR(FILE) }}\n            selectedRoute={selectedRoute}\n          />\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SOURCES\n            ?\n            <ModuleIcons moduleData={sourceModuleData} />\n            :\n            selectedRoute === EFFECTS\n            ?\n            <ModuleIcons moduleData={effectModuleData} />\n            :\n            selectedRoute === UTILITY\n            ?\n            <ModuleIcons moduleData={utilityModuleData} />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default useJSS","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction } from \"./connectionTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\n","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  Connection: {\n    fontSize: sizes.text.small,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    margin: '0vmin 1vmin'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport { Button } from '../../all'\nimport { colors, sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n}\n\nfunction File({ controlID, setFunc, reRenderIcon, modName }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={window.highlightedID + controlID}\n      >\n        <Button style={{\n          //backgroundColor: colors.fillModule,\n          borderColor: colors.deleteButton,\n        }}\n        >{modName ? `${modName} - ${controlID}` : controlID}</Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={window.highlightedID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[window.highlightedID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <p style={{\n        fontSize: sizes.text.xsmall,\n        textAlign: 'center',\n        whiteSpace: 'normal',\n        justifyContent: 'center',\n        width: '100%',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        hyphens: 'auto',\n      }}>\n        {window.audioTags[window.highlightedID].srcName}\n      </p>\n    </div>\n  )\n}\n\nexport default File","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { SetFunc, Value, AudioModuleWithTypes } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\n\ninterface Props {\n  setFunc: SetFunc\n  audioModule: AudioModuleWithTypes\n  value: Value | undefined\n  modID: string\n  modName?: string\n  controlID: string\n}\n\nfunction Type({ setFunc, audioModule, controlID, value, modID, modName }: Props) {\n  const classes = useJSS()\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <label htmlFor={'type'}>{modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={(e) => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(modID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={modID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </Fragment>\n  )\n}\n\nexport default Type","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { StatelessKnob } from '../../all'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID?: string\n  displayModName?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName }: Props) {\n  const modID = actualModID ? actualModID : window.highlightedID\n  const [ val, currRange ] = useSelector((state: RootState) => {\n    return [\n      state.modules[modID].controlData[controlID].value as number,\n      state.modules[modID].controlData[controlID].range as [number, number],\n    ]\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(modID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openRangeSetMenu(modID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(modID, controlID, newRange))\n          })\n        }}\n      />\n      <div>{displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { Button } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName }: Props) {\n  return (\n    <Button style={{\n      //backgroundColor: colors.fillModule,\n      borderColor: colors.deleteButton,\n      width: '50%',\n    }}\n      onClick={() => {\n        setFunc('')\n      }}\n    >{modName ? `${modName} - ${controlID}` : controlID}</Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport { Switch } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, AudioModuleWithTypes } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl } from './controls/all'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType, value } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} />\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} audioModule={audioModule as AudioModuleWithTypes} controlID={controlID} value={value} modID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} />\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { Module, Modules, RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../redux/allActions'\nimport { disconnect } from '../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../audioModules/moduleTypes'\n\ninterface Props {\n  selectedModule: Module\n  modules: Modules\n}\n\nfunction InputOutputView({ selectedModule, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  return (\n    <Fragment>\n\n      {!selectedModule ? null : selectedModule.inputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>inputs</div>\n      }\n\n      {!selectedModule ? null : selectedModule.inputs.map((connectionID, index) => {\n        const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[fromID].name\n        return (\n          <div className={classes.Connection}\n            key={fromID + param + 'inp' + index}\n            onClick={() => {\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n            }}\n          >\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n\n      {!selectedModule ? null : selectedModule.outputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>outputs</div>\n      }\n\n      {!selectedModule ? null : selectedModule.outputs.map((connectionID, index) => {\n        const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[toID].name\n        return (\n          <div className={classes.Connection}\n            key={toID + param + 'out' + index}\n            onClick={() => {\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n            }}\n          >\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default InputOutputView","import React, { useState, Fragment } from 'react'\nimport { Button, Switch } from '../all'\nimport { sizes } from '../../theme/theme'\nimport { Module, ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../redux/allActions'\nimport { stringIn } from '../../helpers/genFuncs'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const [open, setOpen] = useState(false)\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <Fragment>\n      <Button style={{ fontSize: sizes.text.xsmall, marginTop: '2vmin' }}\n        onClick={() => {\n          setOpen(!open)\n        }}\n      >mark container controls</Button>\n      <div>\n        {\n        !open ? null :\n        Object.keys(selectedModule.controlData).map((controlID, index) => {\n          return (\n            <Switch initState={stringIn(selectedModule.id + controlID, selectedModule.toContainerControls)} text={controlID}\n              style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n              key={controlID + index}\n              onSwitch={isMarked => {\n                if (isMarked) {\n                  dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                } else {\n                  dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                }\n              }} \n            />\n          )\n        })\n        }\n        {\n        open && selectedModule.moduleType === CONTAINER ?\n          (selectedModule as ContainerModule).containerControls.map(({ modID, controlID, actualModID }, index) => {\n            const name = modules[modID].name\n            return (\n              <Switch initState={stringIn(actualModID + controlID, selectedModule.toContainerControls)} text={`${name} - ${controlID}`}\n                style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                key={modID + index}\n                onSwitch={isMarked => {\n                  if (isMarked) {\n                    dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                  } else {\n                    dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                  }\n                }}\n              />\n            )\n          }) : null\n        }\n\n      </div>\n    </Fragment>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { Module } from '../../redux/stateTSTypes'\nimport { Switch } from '../all'\nimport { useDispatch } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\n\ninterface Props {\n  baseContainerID: string\n  selectedModule: Module\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.xsmall,\n  padding: '1vmin',\n}\n\nfunction MarkContainerIO({ baseContainerID, selectedModule }: Props) {\n  const dispatch = useDispatch()\n  return (\n    (selectedModule && window.fillContainerID !== baseContainerID) ?\n    <Fragment>\n      {\n      Object.keys(window.audioModules[selectedModule.id]).length === 0 ? null :\n      <MarkContainerControls selectedModule={selectedModule} />\n      }\n      {\n      selectedModule.connectionInputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'inputSwitch'}\n        text={'mark as container input'} \n        initState={selectedModule.isContainerInput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerInput(window.highlightedID))\n          } else {\n            dispatch(unmarkContainerInput(window.highlightedID))\n          }\n        }}\n      />\n      }\n      {\n      selectedModule.connectionOutputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'outputSwitch'}\n        text={'mark as container output'}\n        initState={selectedModule.isContainerOutput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerOutput(window.highlightedID))\n          } else {\n            dispatch(unmarkContainerOutput(window.highlightedID))\n          }\n        }}\n      />\n      }\n    </Fragment>\n    :\n    null\n  )\n}\n\nexport default MarkContainerIO","import React from 'react'\nimport { Button } from '../all'\nimport { colors, sizes } from '../../theme/theme'\nimport { ContainerModule, Module, RootState } from '../../redux/stateTSTypes'\nimport { disconnect } from '../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../redux/allActions'\nimport { useSelector } from 'react-redux'\n\ninterface Props {\n  selectedModule: Module | ContainerModule\n}\n\nfunction DeleteButton({ selectedModule }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  return (\n    <Button style={{\n      backgroundColor: colors.deleteButton,\n      width: '50%',\n      fontSize: sizes.text.small\n    }}\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(window.highlightedID)) // should remove all connections\n        window.highlightedID = ''\n      }}\n    >delete</Button>\n  )\n}\n\nexport default DeleteButton","import React from 'react'\nimport useJSS from './style'\nimport { AudioModuleWithTypes } from '../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl } from './controls/all'\nimport { useSelector } from 'react-redux'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <div className={classes.ControlMenu}>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType, value } = modules[modID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const name = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={name} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} audioModule={audioModule as AudioModuleWithTypes} controlID={controlID} value={value} modID={selectedModule.id} modName={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} modName={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={name} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveModule } from '../../redux/allActions'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport InputOutputView from '../LargeIcon/InputOutputView'\nimport MarkContainerIO from '../LargeIcon/MarkContainerIO'\nimport DeleteButton from '../LargeIcon/DeleteButton'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\n\ndeclare global {\n  interface Window {\n    currUnHighlight: () => void\n  }\n}\n\nwindow.currUnHighlight = () => {}\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isHighlighted, setHighlighted] = useState(mod.id === window.highlightedID)\n  const [controlMenuOpen, setControlMenuOpen] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  function reRenderIcon() {\n    toReRender(!reRender)\n  }\n\n  const iconStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    borderStyle: isHighlighted ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n  }\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n  }\n  \n  const iconSpring = useSpring({\n    width: isHighlighted ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isHighlighted ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon,\n    config: {\n      tension: 350,\n      clamp: true,\n    },\n    onFrame: window.refreshArcherContainer,\n    onRest: () => { setControlMenuOpen(isHighlighted) }\n  })\n\n  const nameSpring = useSpring({\n    fontSize: isHighlighted ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n\n  const { modules, baseContainerID, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <animated.div \n        className={classes.Icon} \n        style={Object.assign({}, iconSpring, iconStyle)}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          const id = e.dataTransfer.getData('id')\n          if (id) {\n            const possiblyMod = modules[id]\n            if (possiblyMod) {\n              const fromRow = e.dataTransfer.getData('fromRow')\n              const fromCol = e.dataTransfer.getData('fromCol')\n              window.setFillIsExpanded(false)\n              dispatch(moveModule(id, mod.row, mod.col))\n              dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n              window.setTimeout(window.refreshArcherContainer, 100)\n            }\n          } else {\n            if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n              alert('mod cannot accept input')\n            } else {\n              const fromID = e.dataTransfer.getData('fromID')\n              if (fromID) {\n                window.openConnectionMenu(fromID, mod.id)\n              }\n            }\n          }\n          setHighlighted(false)\n        }}\n        draggable={!isHighlighted}\n        onDragStart={event => {\n          event.dataTransfer.setData('id', mod.id)\n          event.dataTransfer.setData('fromRow', `${mod.row}`)\n          event.dataTransfer.setData('fromCol', `${mod.col}`)\n          window.setFillIsExpanded(true)\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n        onClick={e => {\n          if (e.stopPropagation) {\n            e.stopPropagation()\n          }\n          if (mod.id === window.highlightedID) {\n            window.currUnHighlight()\n            window.currUnHighlight = () => {}\n          } else {\n            window.currUnHighlight()\n            setHighlighted(true)\n            window.highlightedID = mod.id\n            window.currUnHighlight = () => {\n              window.highlightedID = ''\n              setControlMenuOpen(false)\n              setHighlighted(false)\n            }\n          }\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <animated.div className={classes.IconName} style={nameSpring} onClick={e => {\n          if (isHighlighted) {\n            e.stopPropagation()\n            window.openRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </animated.div>\n        {\n        !controlMenuOpen ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} />\n          <InputOutputView selectedModule={mod} modules={modules} />\n          <MarkContainerIO baseContainerID={baseContainerID} selectedModule={mod} />\n          <DeleteButton selectedModule={mod} />\n        </div>\n        }\n      </animated.div>\n      <animated.div className={classes.ArcherElement}\n        style={Object.assign({}, iconSpring, archerElementStyle)}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </animated.div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.iconGrid,\n    height: sizes.moduleView.iconGrid,\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { moveModule } from '../../redux/modules/moduleActions'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { ModuleType } from '../../audioModules/moduleTypes'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const { modules } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules\n    }\n  })\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length === 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        if (e.dataTransfer.types.length === 3) {\n          setHL(false)\n        }\n      }}\n      onDrop={event => {\n        const id = event.dataTransfer.getData('id')\n        const fc = modules[window.fillContainerID] as ContainerModule\n        const currentChildren = fc.childModules.concat(fc.childModules)\n        const possiblyMod = modules[id]\n        const possiblyOccupyingID = isOccupied(row, col, currentChildren, modules)\n        if (!possiblyMod) {\n          if (!possiblyOccupyingID) {\n            const moduleType = event.dataTransfer.getData('moduleType') as ModuleType\n            const name = event.dataTransfer.getData('name')\n            setHL(false)\n            window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n            window.setFillIsExpanded(false)\n          }\n        } else if (possiblyOccupyingID) {\n          const fromRow = event.dataTransfer.getData('fromRow')\n          const fromCol = event.dataTransfer.getData('fromCol')\n          setHL(false)\n          window.setFillIsExpanded(false)\n          dispatch(moveModule(id, row, col))\n          dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n          window.setTimeout(window.refreshArcherContainer, 1)\n        } else {\n          setHL(false)\n          window.setFillIsExpanded(false)\n          dispatch(moveModule(id, row, col))\n          window.setTimeout(window.refreshArcherContainer, 1)\n        }\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport { Button } from '../all'\n\ndeclare global {\n  interface Window { \n    setFillIsExpanded: (isExpanded: boolean) => void\n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [isExpanded, setIsExpanded] = useState(false)\n  window.setFillIsExpanded = setIsExpanded\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${isExpanded ? maxRow + 2 : maxRow + 1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${isExpanded ? maxCol + 2 : maxCol + 1}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.currUnHighlight()\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <ArcherContainer ref={archerContainerRef}\n        svgContainerStyle={{ zIndex: -1 }}\n        strokeWidth={4}\n        arrowLength={0}\n      >\n        <div className={classes.Fill} style={gridStyle}>\n          {isEmpty ? <DropSquare row={0} col={0}/> :\n          range(0, isExpanded ? maxRow + 2 : maxRow + 1).map(row => {\n            return range(0, isExpanded ? maxCol + 2 : maxCol + 1).map(col => {\n              return (\n                <DropSquare\n                  key={`${row} ${col}`}\n                  row={row} \n                  col={col}\n                />\n              )\n            })\n          }).flat()}\n          {containerModule.childModules.map(moduleID => {\n            const mod = modules[moduleID]\n            return (\n              <ModuleViewIcon\n                key={mod.id}\n                mod={mod}\n                gridRow={mod.row + 1}\n                gridCol={mod.col + 1}\n              />\n            )\n          })}\n        </div>\n      </ArcherContainer>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import React, { ReactNode, WheelEvent, RefObject } from 'react'\nimport CSS from 'csstype'\n\ninterface Props {\n  children: ReactNode\n  className?: string\n  style?: CSS.Properties\n  ref: RefObject<HTMLDivElement>\n}\n\nconst baseStyle = {\n  overflowY: 'hidden',\n  overflowX: 'scroll',\n  display: 'flex',\n}\n\nfunction HorizontalScrollDiv({ children, className, style, ref }: Props) {\n  function onWheel(event: WheelEvent) {\n    if(ref && ref.current) {\n      ref.current.scrollLeft += event.deltaY\n    } \n  }\n  return (\n    <div ref={ref} className={className} style={Object.assign({}, baseStyle, style)} onWheel={onWheel}>\n      {children}\n    </div>\n  )\n}\n\nexport default HorizontalScrollDiv","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: 100,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'absolute',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: '1px solid white',\n    zIndex: 101,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  children: React.ReactNode\n  header: string\n  onClose: () => void\n}\n\nfunction CenterMenu({ children, header, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.CenterMenuBounder}\n      onPointerDown={e => {\n        e.stopPropagation()\n        onClose()\n      }}\n    >\n      <div className={classes.CenterMenu}\n        onPointerDown={(e) => {e.stopPropagation()}} \n      >\n        <div className={classes.Header}>\n          {header}\n        </div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default CenterMenu","const AudioContext = window.AudioContext\nconst audioCtx = new AudioContext()\nexport default audioCtx","import { createUseStyles } from 'react-jss'\n//import { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  TestingArea: {\n    backgroundColor: 'black',\n    position: 'absolute',\n    top: '45vh',\n    left: '25vw',\n    width: '45vw',\n    height: '50vh',\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 150,\n  },\n\n  ButtonDiv: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n  },\n\n  Button: {\n    margin: '2vmin',\n    padding: '1vmin',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport audioCtx from '../../audioCtx'\n\n/*\nvar splitter = audioCtx.createChannelSplitter(2)\n\nvar lpf = audioCtx.createBiquadFilter()\n  lpf.type = \"lowpass\"\n  lpf.frequency.value = 440\n  lpf.Q.value = 10\n\n\nnavigator.mediaDevices.getUserMedia({\n  audio: {\n    echoCancellation: false,\n    autoGainControl: false,\n    noiseSuppression: false,\n    latency: 0,\n    channelCount: 3,\n  }\n}).then(stream => {\n  const src = audioCtx.createMediaStreamSource(stream)\n  const splitter = audioCtx.createChannelSplitter(3)\n  const gain0 = audioCtx.createGain()\n  const gain1 = audioCtx.createGain()\n  const gain2 = audioCtx.createGain()\n  //const merger = audioCtx.createChannelMerger(3)\n  //const dly = audioCtx.createDelay(); dly.delayTime.value = .18\n  //const dlyFdbk = audioCtx.createGain(); dlyFdbk.gain.value = .6\n  //dly.connect(dlyFdbk); dlyFdbk.connect(dly)\n  const master = audioCtx.createGain(); master.gain.value = 1\n\n  console.log(stream.getAudioTracks()[0].getCapabilities())\n\n  master.gain.value = 1\n\n  src.connect(splitter)\n  splitter.connect(gain0, 0)\n  splitter.connect(gain1, 1)\n  splitter.connect(gain2, 2)\n  gain0.connect(master)\n  gain1.connect(master)\n  gain2.connect(master)\n  //merger.connect(master)\n  master.connect(audioCtx.destination)\n})\n*/\n\nfunction MrTesterr() {\n  const classes = useJSS()\n  return (\n    <div className={classes.TestingArea}>\n      {'mr testerrr'}\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'green' }}\n          onClick={() => {\n            audioCtx.resume()\n          }}\n        >start ctx</div>\n      </div>\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'red' }}\n          onClick={() => {\n            audioCtx.suspend()\n          }}\n        >stop ctx</div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MrTesterr","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '1vmin',\n    margin: '1vmin',\n    textAlign: 'center',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children?: React.ReactNode\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n}\n\nfunction Button({ onClick, children, style, onPointerDown }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    // control data is in makeAddModules\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n  },\n\n  Switch: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    justifySelf: 'flex-end',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n  },\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors } from '../../theme/theme'\n\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n}\n\nfunction Switch({ text, onSwitch, initState, style }: Props) {\n  const [state, setState] = useState(initState)\n  const classes = useJSS()\n  const spring = useSpring({\n    cx: state ? '65' : '25',\n    fill: state ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div\n        onClick={() => { onSwitch(!state); setState(!state) }}\n      >\n        {text}\n      </div>\n      <svg onClick={() => { onSwitch(!state); setState(!state) }} width={'90'} height={'30'}>\n        <rect width='50' height='20' x='20' y='5' rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={'15'} r={'15'} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          const newVal = clamp(Number(e.target.value), range)\n          if (onChange) {\n            onChange(newVal)\n          }\n          setInputVal(makeValString(newVal))\n        }}\n        onKeyDown={e => {\n          if (e.keyCode === 13) {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport StatelessKnob from './StatelessKnob'\nimport { clamp } from '../../helpers/genFuncs'\nimport { makeValString } from './helpers'\n\ninterface Props {\n  initValue: number\n  onChange?: (newVal: number) => void\n  onEveryChange: (newVal: number) => void\n  range: [number, number]\n  onSettingsClick?: () => void\n}\n\nfunction Knob({ initValue, range, onChange, onEveryChange, onSettingsClick }: Props) {\n  const [val, setVal] = useState(clamp(initValue, range))\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  return (\n    <StatelessKnob\n      initValue={val}\n      range={range}\n      onChange={newVal => {\n        if (onChange) { onChange(newVal) }\n        setVal(newVal)\n      }}\n      onEveryChange={onEveryChange}\n      onSettingsClick={onSettingsClick}\n      inputVal={inputVal}\n      setInputVal={setInputVal}\n    />\n  )\n}\n\nexport default Knob","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import { Range } from \"../../audioModules/moduleTypes\"\n\nexport function makeConnectionMenuData(isOpen: boolean, fromID = '', toID = '') {\n  return {\n    isOpen,\n    fromID,\n    toID,\n  }\n}\n\nexport function makeRangeSetMenuData(isOpen: boolean, modID = '', controlID = '', onChangeSubmit: (newRange: Range) => void = () => {}) {\n  return {\n    isOpen,\n    modID,\n    controlID,\n    onChangeSubmit,\n  }\n}","import { createUseStyles } from 'react-jss'\n\nconst indent = '2vmin'\n\nconst useJSS = createUseStyles({\n  IORecursionBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: '5vmin',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    height: '60vmin',\n    width: '90%',\n    overflowY: 'scroll',\n    overflowX: 'visible',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n      borderRadius: '2px'\n    },\n  },\n  IORecursionInnerBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: indent,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n})\n\nexport default useJSS","import React, { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  id: string\n  isOutput: boolean\n  setConnection: (actualIOID: string, ioIndex: number) => void \n}\n\nfunction IORecursion({ id, isOutput, setConnection }: Props) {\n  const [ isContainer, name, io ] = useSelector((state: RootState) => {\n    return [\n      state.modules[id].moduleType === CONTAINER,\n      state.modules[id].name,\n      isOutput ? state.modules[id].connectionOutputs : state.modules[id].connectionInputs\n    ]\n  })\n  const [open, setOpen] = useState(false)\n  const classes = useJSS()\n  if (isContainer) {\n    return (\n      <Fragment>\n        <Button style={{ color: colors.expandableName }}\n          onClick={() => { setOpen(!open) }}\n        >{name}</Button>\n        {!open ? null\n        :\n        <div className={classes.IORecursionInnerBounder}>\n          {io.map(ioID => {\n            return (\n              <IORecursion key={ioID} id={ioID} isOutput={isOutput} setConnection={setConnection}/>\n            )\n          })}\n        </div>\n        }\n      </Fragment>\n    )\n  } else { // base case\n    if (io.length > 1) {\n      return (\n        <Fragment>\n          <Button style={{ color: colors.expandableName }}\n            onClick={() => { setOpen(!open) }}\n          >{name}</Button>\n          {!open ? null\n          :\n          <div className={classes.IORecursionInnerBounder}>\n            {io.map((ioID, index) => {\n              return (\n                <Button style={{ color: colors.connectableName }}\n                  onClick={() => { setConnection(id, index) }}\n                >{ioID}</Button>\n              )\n            })}\n          </div>\n          }\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button\n          onClick={() => { setConnection(id, 0) }}\n        >{name}</Button>\n      )\n    }\n  }\n}\n\nexport default IORecursion","import React, { Fragment, useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport { connect } from '../../../audioModules/connection'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConnectingAudioModule, CONTAINER } from '../../../audioModules/moduleTypes'\nimport { addConnection } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport IORecursion from './IORecursion'\nimport useJSS from './style'\n\ninterface Props {\n  fromID: string\n  toID: string\n  onClose: () => void\n}\n\nexport const CHOOSE_OUTPUT = 'CHOOSE_OUTPUT'\nexport const CONNECT_TO = 'CONNECT_TO'\nexport const CHOOSE_PARAM = 'CHOOSE_PARAM'\nexport const CHOOSE_INPUT = 'CHOOSE_INPUT'\n\nconst buttonStyle: CSS.Properties = {\n  \n}\n\nfunction ConnectionMenu({ fromID, toID, onClose }: Props) {\n  const classes = useJSS()\n  const am = window.audioModules\n  const modules = useSelector((state: RootState) => state.modules)\n  const fromMod = modules[fromID]\n  const toMod = modules[toID]\n  const [outputIndex, setOutputIndex] = useState(0)\n  const [inputIndex, setInputIndex] = useState(0)\n  const [actualFromID, setActualFromID] = useState(fromID)\n  const [actualToID, setActualToID] = useState(toID)\n  const dispatch = useDispatch()\n  const isFromContainer = fromMod.moduleType === CONTAINER\n  const isToContainer = toMod.moduleType === CONTAINER\n  const initMenu = fromMod.connectionOutputs.length > 1 || isFromContainer ? CHOOSE_OUTPUT :\n    toMod.connectionInputs.length > 1 || isToContainer ? CHOOSE_INPUT : CONNECT_TO\n  const [openMenu, setOpenMenu] = useState(initMenu)\n  return (\n    <Fragment>\n      {openMenu === CHOOSE_OUTPUT\n      ?\n      <CenterMenu header={'choose output'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {fromMod.connectionOutputs.map(outputID => {\n            return (\n              <IORecursion key={outputID + 'output'} id={isFromContainer ? outputID : fromID} isOutput={true} \n                setConnection={(actualIOID, ioIndex) => {\n                  setActualFromID(actualIOID)\n                  setOutputIndex(ioIndex)\n                  if (toMod.connectionInputs.length > 1 || toMod.moduleType === CONTAINER) {\n                    setOpenMenu(CHOOSE_INPUT)\n                  } else {\n                    setOpenMenu(CONNECT_TO)\n                  }\n                }}\n              />\n            )\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_INPUT\n      ?\n      <CenterMenu header={'choose input'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {toMod.connectionInputs.map(inputID => {\n            return (\n              <IORecursion key={inputID + 'input'} id={isToContainer ? inputID : toID} isOutput={false}\n                setConnection={(actualIOID, ioIndex) => {\n                  setActualToID(actualIOID)\n                  setInputIndex(ioIndex)\n                  setOpenMenu(CONNECT_TO)\n                }}\n              />\n            )\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CONNECT_TO\n      ?\n      <CenterMenu header={`connect ${isFromContainer ? fromMod.name + ' - ' + modules[actualFromID].name : fromMod.name} to ${isToContainer ? toMod.name + ' - ' + modules[actualToID].name : toMod.name}`} onClose={onClose}>\n        {(isToContainer ? modules[toMod.connectionInputs[inputIndex]].connectionInputs.length === 0 : toMod.connectionInputs.length === 0) ? null :\n        <Button style={buttonStyle}\n          onClick={() => {\n            connect(\n              am[actualFromID] as ConnectingAudioModule, \n              am[actualToID] as ConnectingAudioModule,\n              '',\n              outputIndex,\n              inputIndex,\n            )\n            dispatch(addConnection(\n              fromID, \n              toID, \n              '', \n              outputIndex, \n              inputIndex, \n              isFromContainer ? actualFromID : undefined, \n              isToContainer ? actualToID : undefined,\n            ))\n            onClose()\n          }}\n        >module</Button>}\n        {\n        am[actualToID].connectingParamIDs.length === 0 ? null\n        :\n        <Button style={buttonStyle}\n          onClick={(e) => {\n            e.stopPropagation()\n            setOpenMenu(CHOOSE_PARAM)\n          }}\n        >params</Button>\n        }\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_PARAM\n      ?\n      <CenterMenu header={'props'} onClose={onClose}>\n        {am[actualToID].connectingParamIDs.map((paramID, key) => {\n          return (\n            <Button style={buttonStyle}\n              key={fromID + toID + key}\n              onClick={() => {\n                connect(\n                  am[actualFromID] as ConnectingAudioModule,\n                  am[actualToID] as ConnectingAudioModule,\n                  paramID,\n                  outputIndex,\n                  inputIndex,\n                )\n                dispatch(addConnection(\n                  fromID,\n                  toID,\n                  paramID,\n                  outputIndex,\n                  inputIndex,\n                  isFromContainer ? actualFromID : undefined,\n                  isToContainer ? actualToID : undefined,\n                ))\n                onClose()\n              }}\n            >{paramID}</Button>\n          )\n        })}\n      </CenterMenu>\n      :\n      null\n      }\n    </Fragment>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useRef, useState } from 'react'\nimport { CenterMenu } from '../../all'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\n\n\ninterface Props {\n  onClose: () => void\n  toRenameID: string\n}\n\nfunction RenameMenu({ toRenameID, onClose }: Props) {\n  const classes = useJSS()\n  const renameInputRef = useRef<HTMLInputElement>(null)\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  const [ isTooShort, setSubmitState] = useState(false)\n  function submitNewName() {\n    if (renameInputRef && renameInputRef.current) {\n      const newName = renameInputRef.current.value\n      if (newName.length === 0) {\n        setSubmitState(true)\n      } else {\n        dispatch(renameModule(toRenameID, newName))\n        onClose()\n      } \n    }\n  }\n  return (\n    <CenterMenu header='rename' onClose={onClose}>\n        <div className={classes.CMInputBounder}>\n          <input className={classes.CenterMenuInput}\n            placeholder={modules[toRenameID]?.name}\n            onKeyUp={event => {\n              if (event.keyCode === 13) {\n                submitNewName()\n              } else if (event.keyCode === 27) {\n                onClose()\n              }\n            }}\n            ref={renameInputRef}\n            autoFocus\n          />\n          <div className={classes.InputSubmit}\n            onClick={() => {submitNewName()}}\n          >enter</div>\n        </div>\n        {!isTooShort ? null :\n        <div className={classes.Error}>\n          please enter a name\n        </div>}\n      </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  onClose: () => void\n  onChangeSubmit: (newRange: Range) => void\n  modID: string\n  controlID: string\n}\n\nfunction RangeSetMenu({ onClose, modID, controlID, onChangeSubmit }: Props) {\n  const { maxRange, range } = useSelector((state: RootState) => state.modules[modID].controlData[controlID])\n  const [min, setMin] = useState((range as [number, number])[0])\n  const [max, setMax] = useState((range as [number, number])[1])\n  const classes = useJSS()\n  return (\n    <CenterMenu header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.keyCode === 27) {\n            onClose()\n          } else if (e.keyCode === 13) {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button onClick={() => {\n        if (maxRange) {\n          if (inRange(min, maxRange) && inRange(max, maxRange)) {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          } else {\n            alert('a value is not within maximum range bounds')\n          }\n        } else {\n          if (max > min) {\n            onChangeSubmit([min, max])\n            onClose()\n          } else {\n            alert('min must be less than max')\n          }\n        }\n      }}>\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default RangeSetMenu","import React, { useState } from 'react'\nimport CenterMenu from '../../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Button } from '../../all'\nimport { stringIn } from '../../../helpers/genFuncs'\n\ninterface Props {\n  saveList: string[]\n  onClose: () => void\n}\n\nfunction SaveMenu({ saveList, onClose }: Props) {\n  const [saveName, setSaveName] = useState('')\n  const baseContainerID = useSelector((state: RootState) => state.baseContainerID)\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  //const state = useSelector(state => state)\n  return (\n    <CenterMenu header='save project' \n      onClose={onClose}\n    >\n      <div>\n        <input\n          value={saveName}\n          placeholder={baseContainerID}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n        />\n        <Button\n          onClick={() => {\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n            } else {\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n        {!confirmSaveData.isOpen ? null\n        :\n        <div></div>\n        }\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default SaveMenu","import React, { useState, Fragment } from 'react'\nimport { makeConnectionMenuData, makeRangeSetMenuData } from './makeData'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport RenameMenu from './RenameMenu/RenameMenu'\nimport RangeSetMenu from './RangeSetMenu/RangeSetMenu'\nimport { Range } from '../../audioModules/moduleTypes'\nimport SaveMenu from './SaveMenu/SaveMenu'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (fromID: string, toID: string) => void\n    openRenameMenu: (toRenameID: string) => void\n    openRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n    openSaveMenu: (saveList: string[]) => void\n  }\n}\n\nfunction CenterMenus() {\n  const [connectionMenuData, setConnectionMenuData] = useState(makeConnectionMenuData(false))\n  window.openConnectionMenu = (fromID, toID) => { setConnectionMenuData(makeConnectionMenuData(true, fromID, toID)) }\n  const [renameMenuData, setRenameMenuData] = useState({ isOpen: false, toRenameID: '' })\n  window.openRenameMenu = toRenameID => { setRenameMenuData({ isOpen: true, toRenameID }) }\n  const [rangeSetMenuData, setRangeSetMenuData] = useState(makeRangeSetMenuData(false))\n  window.openRangeSetMenu = (modID, controlID, onChangeSubmit) => { setRangeSetMenuData(makeRangeSetMenuData(true, modID, controlID, onChangeSubmit)) }\n  const [saveMenuData, setSaveMenuData] = useState<{ isOpen: boolean, saveList: string[] }>({ isOpen: false, saveList: [] })\n  window.openSaveMenu = (saveList) => { setSaveMenuData({ isOpen: true, saveList }) }\n  return (\n    <Fragment>\n      {\n        !connectionMenuData.isOpen ? null :\n        <ConnectionMenu fromID={connectionMenuData.fromID} toID={connectionMenuData.toID}\n          onClose={() => {\n            setConnectionMenuData(makeConnectionMenuData(false))\n          }}\n        />\n      }\n      {\n        !renameMenuData.isOpen ? null :\n        <RenameMenu toRenameID={renameMenuData.toRenameID} onClose={() => { setRenameMenuData({ isOpen: false, toRenameID: '' }) }} />\n      }\n      {\n        !rangeSetMenuData.isOpen ? null :\n        <RangeSetMenu modID={rangeSetMenuData.modID} \n          controlID={rangeSetMenuData.controlID}\n          onClose={() => {\n            setRangeSetMenuData(makeRangeSetMenuData(false))\n          }}\n          onChangeSubmit={newRange => {\n            rangeSetMenuData.onChangeSubmit(newRange)\n          }}\n        />\n      }\n      {\n        !saveMenuData.isOpen ? null :\n        <SaveMenu saveList={saveMenuData.saveList} \n          onClose={() => { setSaveMenuData({ isOpen: false, saveList: [] }) }}\n        />\n      }\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [-30, 30]\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-20000, 1400],\n      maxRange: [-20000, 1400],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [-1, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 20000],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs, BUTTON } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    'open': () => {\n      window.fillContainerID = id\n      window.highlightedID = ''\n      window.currUnHighlight = () => {}\n      window.reRenderFillContainer()\n    }\n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  ControlType,\n  FILE,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\n\nfunction makeAddModule() {\n  return function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData: ControlData = {\n          'choose file': {\n            controlType: FILE as ControlType,\n            paramID: 'n/a'\n          }\n        }\n        window.addAudioTag(id); window.reRenderAudioTags(); \n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0'])); \n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { RightDrawer, ModuleViewFill, AudioTags, CenterMenus, PointerLayer } from '../components/all'\nimport { AudioModules, ModuleType } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { Dispatch } from 'redux'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\n\ndeclare global {\n  interface Window { \n    highlightedID: string\n    fillContainerID: string\n    audioModules: AudioModules\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.highlightedID = 'project' // make this '', for dev\nwindow.fillContainerID = 'project'\n\nwindow.audioModules = {}\nwindow.addModule = makeAddModule()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder} onPointerDown={() => {\n      window.currUnHighlight()\n      window.currUnHighlight = () => { }\n    }}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModuleAction = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModuleAction","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      toContainerControls: [ ...state[modID].toContainerControls, actualModID+controlID ]\n    },\n    [parentID]: {\n      ...state[parentID],\n      containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID }],\n    }\n  })\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      toContainerControls: state[modID].toContainerControls.filter(toContainerControlID => toContainerControlID !== actualModID+controlID)\n    },\n    [parentID]: {\n      ...state[parentID],\n      containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n        return containerControl.modID !== modID || \n          containerControl.controlID !== controlID || \n          containerControl.actualModID !== actualModID\n      }),\n    }\n  })\n}\n\nexport default unmarkContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  toContainerControls: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nlet connectionNumber = 0\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = `${fromID} ${toID} ${connectionNumber}`\n  connectionNumber++\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: [\n          ...modules[containerOutputChildID].outputs,\n          connectionID,\n        ]\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: [\n          ...modules[containerInputChildID].inputs,\n          connectionID,\n        ]\n      }\n    },),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","export function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    for (var i = 0; i < idsToFilterOut.length; i++) {\n      if (entry[0] === idsToFilterOut[i]) {\n        return false\n      }\n    }\n    return true\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    for (var i = 0; i < idsToKeep.length; i++) {\n      if (entry[0] === idsToKeep[i]) {\n        return true\n      }\n    }\n    return false\n  }))\n}\n\nexport function ObjFrom2Arrays(arr1: string[], arr2: any[]) {\n  if (arr1.length === arr2.length) {\n    return Object.fromEntries(arr1.map((id, index) => {\n      return [id, arr2[index]]\n    }))\n  }\n  return false\n}","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const trimmedModules = filterOutFromObj(modules, [ id ]) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, [...modules[id].inputs, ...modules[id].outputs]),\n  }\n}\n\nexport default removeModule","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action?: ConnectionAction): ConnectionReducerReturn => {\n  if (action) {\n    switch (action.type) {\n      case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n      case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n      case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n      default: return { newModules: modules, newConnections: connections }\n    }\n  } else {\n    return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\n\nconst initState = {\n  modules: moduleReducer(),\n  connections: {},\n  baseContainerID: bcidReducer(),\n}\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    return (action as RootAction).state\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    return {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n  }\n}\n\nexport default rootReducer\n","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}