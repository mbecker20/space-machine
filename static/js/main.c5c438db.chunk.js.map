{"version":3,"sources":["App/style.ts","theme/theme.ts","components/RightDrawer/style.ts","components/RightDrawer/DrawerRouteLink.tsx","components/RightDrawer/DrawerItem.tsx","audioModules/moduleTypes.ts","components/RightDrawer/ModuleIcons/SourceModules.tsx","components/RightDrawer/ModuleIcons/EffectModules.tsx","components/RightDrawer/ModuleIcons/UtilityModules.tsx","components/RightDrawer/RightDrawer.tsx","components/LeftDrawer/style.ts","audioModules/connection.ts","redux/baseContainerID/bcidActionTypes.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","components/LeftDrawer/DeleteButton.tsx","components/LeftDrawer/InputOutputView.tsx","components/LeftDrawer/MarkContainerIO.tsx","components/LeftDrawer/controls/style.ts","components/LeftDrawer/controls/File.tsx","components/LeftDrawer/controls/Type.tsx","components/LeftDrawer/controls/Value.tsx","components/LeftDrawer/controls/Button.tsx","components/LeftDrawer/controls/Switch.tsx","components/LeftDrawer/ControlMenu.tsx","components/LeftDrawer/LeftDrawer.tsx","components/ModuleView/style.ts","components/ModuleView/Icon.tsx","helpers/genFuncs.ts","components/DropSquare/style.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/helpers.ts","components/ModuleView/Fill.tsx","components/HorizontalScrollDiv/HorizontalScrollDiv.tsx","components/CenterMenu/style.ts","components/CenterMenu/CenterMenu.tsx","audioCtx.ts","components/MrTesterr/style.ts","components/MrTesterr/MrTesterr.tsx","components/Button/style.ts","components/Button/Button.tsx","audioModules/modules/oscillator.ts","audioModules/modules/gain.ts","audioModules/modules/output.ts","audioModules/modules/autoFilter.ts","audioModules/modules/kompressor.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/constant.ts","audioModules/modules/mediaElement.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/ConnectionMenu/ConnectionMenu.tsx","components/RenameMenu/style.ts","components/RenameMenu/RenameMenu.tsx","audioModules/makeAddModule.ts","App/App.tsx","serviceWorker.ts","redux/modules/reducers/addModule.ts","redux/modules/reducers/removeModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/addConnection.ts","redux/modules/reducers/removeConnection.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["useJSS","createUseStyles","Bounder","backgroundImage","width","height","display","fontSize","color","position","top","left","userSelect","zIndex","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","overflowX","overflowY","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIcon","large","medium","small","xsmall","size","borderRadius","DrawerBounder","backgroundColor","Drawer","DrawerHeader","DrawerHeaderItem","padding","textDecoration","whiteSpace","cursor","ItemRouter","flexFlow","alignContent","DrawerItem","boxShadow","margin","DrawerIcon","borderColor","borderStyle","marginBottom","DrawerItemText","Toggle","ToggleLine","DrawerRouteLink","className","text","onClick","linkStyle","selectedRoute","style","numAdds","fullName","id","moduleType","classes","draggable","onDragStart","event","dataTransfer","setData","window","setFillIsExpanded","onDragEnd","VALUE","SourceModules","EffectModules","BaseModules","RightDrawer","useState","open","setOpen","closed","drawerSpring","useSpring","right","config","tension","clamp","setSR","div","UtilityModules","LeftDrawer","TopItems","maxHeight","HeaderScrollBounder","borderWidth","textAlign","justifyText","resize","MenuHeader","Connection","ControlBounder","ControlMenu","BottomItems","connect","fromMod","toMod","param","outputIndex","inputIndex","length","audioNode","alert","disconnect","addModule","name","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","addConnection","fromID","toID","containerOutputChildID","containerInputChildID","removeConnection","connectionID","DeleteButton","selectedModule","am","audioModule","audioModules","dispatch","useDispatch","inputs","forEach","inputData","connectedID","outputs","outputData","highlightedID","setLeftDrawerOpen","InputOutputView","modules","map","index","key","switchStyle","MarkContainerIO","baseContainerID","fillContainerID","initState","isContainerInput","onSwitch","newState","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","ControlTypeSelect","maxWidth","ControlInput","File","controlID","setFunc","htmlFor","opacity","onChange","e","file","target","files","URL","createObjectURL","audioTags","srcName","reRenderAudioTags","reRenderLeftDrawer","overflowWrap","wordWrap","hyphens","Type","value","typeTypes","ValueControl","range","paramID","min","undefined","max","step","ButtonControl","SwitchControl","controlsOpen","setControlsOpen","Object","keys","controlData","controlType","controlSetFuncs","Value","Button","Switch","isOpen","springStyle","velocity","isRenameMenuOpen","setRMOpen","useSelector","state","toReRender","setReRender","FillBounder","FillHeaderBounder","FillHeader","marginLeft","Fill","minHeight","ArcherContainer","Icon","IconName","IconConnector","currSetHighlighted","ModuleViewIcon","mod","gridCol","gridRow","isHighlighted","setHighlighted","iconStyle","gridColumn","iconSpring0","iconSpring1","duration","cmState","setCMState","assign","onDragOver","preventDefault","onDrop","getData","fromRow","fromCol","Number","setTimeout","refreshArcherContainer","connectingParamIDs","stopPropagation","onClose","linkToOutputID","start","stop","out","i","push","DropSquare","isHL","setHL","dsStyle","onDragEnter","onDragLeave","fc","currentChildren","childModules","concat","possiblyMod","possiblyOccupyingID","isOccupied","iconGridSize","gutterGridSize","ModuleViewFill","isExpanded","setIsExpanded","reRender","reRenderFillContainer","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","gridTemplateRows","gridTemplateColumns","archerContainerRef","useRef","current","refreshScreen","flat","arrowLength","ref","placeSelf","bottom","relations","targetId","targetAnchor","sourceAnchor","strokeColor","strokeWidth","baseStyle","HorizontalScrollDiv","children","baseStyleCopy","onWheel","scrollLeft","deltaY","CenterMenuBounder","CenterMenu","transform","border","Header","header","audioCtx","TestingArea","ButtonDiv","AudioContext","MrTesterr","oscillatorTypes","makeOscillator","oscillator","createOscillator","frequency","newType","newFrequency","newDetune","detune","makeGain","gainAmount","gain","createGain","updateGain","newGain","newFineGain","makeOutput","resume","masterGain","destination","arg","suspend","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","newQ","Q","makeKompressor","kompressor","createDynamicsCompressor","newThreshold","threshold","newKnee","knee","newRatio","ratio","newAttack","attack","newRelease","release","makeStereoPanner","stereoPanner","createStereoPanner","newPan","pan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","constantSourceTypes","makeConstantSource","constantSource","createConstantSource","offset","setValFuncs","newValue","linearRampToValueAtTime","currentTime","exponentialRampToValueAtTime","makeMediaElement","audioRef","url","src","createMediaElementSource","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","channelCount","isMuted","getAudioTracks","enabled","lineInputModule","makeContainer","AudioTag","useEffect","possiblyMediaElement","autoPlay","addAudioTag","AudioTags","ids","justifySelf","setState","spring","cx","fill","x","y","rx","ry","circle","cy","r","buttonStyle","ConnectionMenu","setOutputIndex","setInputIndex","containerOutputIndex","setContainerOutputIndex","containerInputIndex","setContainerInputIndex","initMenu","openMenu","setOpenMenu","isFromContainer","isToContainer","outputID","inputID","CMInputBounder","CenterMenuInput","InputSubmit","Error","RenameMenu","renameInputRef","isTooShort","setSubmitState","submitNewName","newName","renameModule","placeholder","onKeyUp","keyCode","autoFocus","makeAddModule","App","Boolean","location","hostname","match","isBaseContainer","removeModule","trimmedState","fromEntries","entries","filter","entry","childID","moveModuleAction","renameContainer","getConnectionID","markContainerInput","markContainerOutput","moduleReducer","action","addModuleReducer","removeModuleReducer","moveModuleReducer","renameModuleReducer","addConnectionReducer","removeConnectionReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","bcidReducer","newID","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5c438db.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss'\r\n//import { colors } from '../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  Bounder: {\r\n    //backgroundColor: colors.grey,\r\n    backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    fontSize: 'calc(20px + 2vmin)',\r\n    color: 'white',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    left: '0px',\r\n    userSelect: 'none',\r\n    zIndex: '-1',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  ModuleViewBounder: {\r\n    minWidth: '60vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 0,\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '0px',\r\n    },\r\n  }\r\n})\r\n\r\nexport default useJSS","import { Colors, Sizes } from './types'\r\n\r\nconst grey = '#282c34' // grey\r\nconst secondary = '#281c34' //purple\r\nconst tertiary = '#182c54' // blue\r\n\r\nexport const colors: Colors = {\r\n  grey: grey,\r\n  secondary: secondary,\r\n  tertiary: tertiary,\r\n\r\n  rightDrawer: '#0000009e',\r\n  drawerToggle: '#00347d',\r\n  drawerToggleLine: '#001b40',\r\n\r\n  leftDrawer: '#0000009e',\r\n\r\n  centerMenu: 'black',\r\n\r\n  fillModule: '#c0c0c038',\r\n  module: '#37538a',\r\n\r\n  text: 'white',\r\n  selectedText: '#007ab3',\r\n\r\n  dropSquareHL: 'white',\r\n\r\n  defaultButton: 'black',\r\n  deleteButton: '#cc00006e',\r\n  deleteButtonText: 'white',\r\n\r\n  errorBackground: '#cc0000',\r\n\r\n  outputConnector: 'red',\r\n\r\n  controlMenuButton: '#3b3b3b94'\r\n}\r\n\r\nexport const sizes: Sizes = {\r\n  rightDrawer: {\r\n    width: '21vw',\r\n    toggleWidth: '1.5vmin',\r\n    item: '10vmin'\r\n  },\r\n  leftDrawer: {\r\n    width: '20vw',\r\n  },\r\n  moduleView: {\r\n    iconGrid: '12vmin',\r\n    gutterGrid: '6vmin',\r\n    icon: '9vmin',\r\n    bigIcon: '18vmin',\r\n  },\r\n  text: {\r\n    large: 'calc(25px + 2.8vmin)',\r\n    medium: 'calc(20px + 2.4vmin)',\r\n    small: 'calc(12px + 1.4vmin)',\r\n    xsmall: 'calc(8px + 1vmin)',\r\n  },\r\n  connector: {\r\n    size: '3vmin',\r\n    borderRadius: '1.5vmin'\r\n  },\r\n}","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  DrawerBounder: {\r\n    backgroundColor: colors.rightDrawer,\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    color: 'white',\r\n    position: 'absolute',\r\n    top: '0px',\r\n    userSelect: 'none',\r\n    zIndex: '10',\r\n  },\r\n\r\n  Drawer: {\r\n    height: '100vh',\r\n    width: sizes.rightDrawer.width,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n\r\n  // header\r\n\r\n  DrawerHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: sizes.rightDrawer.width,\r\n    overflowX: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      height: '3px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerHeaderItem: {\r\n    fontSize: sizes.text.medium,\r\n    padding: '1vmin 1.5vmin',\r\n    color: colors.text,\r\n    textDecoration: 'none',\r\n    whiteSpace: 'nowrap',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  ItemRouter: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    width: sizes.rightDrawer.width,\r\n    height: 'calc(100% - 60px)',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '1px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  // Drawer items\r\n\r\n  DrawerItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    margin: '4vmin',\r\n  },\r\n\r\n  DrawerIcon: {\r\n    backgroundColor: colors.grey,\r\n    borderColor: colors.grey,\r\n    borderStyle: 'solid',\r\n    width: sizes.rightDrawer.item,\r\n    height: sizes.rightDrawer.item,\r\n    borderRadius: '1.5vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    marginBottom: '1.5vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerItemText: {\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  // toggle\r\n\r\n  Toggle: {\r\n    backgroundColor: colors.drawerToggle,\r\n    width: sizes.rightDrawer.toggleWidth,\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  ToggleLine: {\r\n    backgroundColor: colors.drawerToggleLine,\r\n    borderRadius: '4px',\r\n    width: '0.75vmin',\r\n    height: '80px',\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\n//import { animated, useSpring } from 'react-spring'\r\nimport { colors } from '../../theme/theme'\r\n\r\ninterface Props {\r\n  className: string\r\n  text: string\r\n  onClick: () => void\r\n  selectedRoute: string\r\n}\r\n\r\nfunction DrawerRouteLink({ className, text, onClick, selectedRoute }: Props) {\r\n  const linkStyle = {\r\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\r\n  }\r\n  /*\r\n  const linkStyle = useSpring({\r\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\r\n    config: {\r\n      tension: 300,\r\n      clamp: true,\r\n    }\r\n  })\r\n  */\r\n  return (\r\n    <div className={className} onClick={onClick} style={linkStyle}>\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerRouteLink","import React from 'react'\r\nimport useJSS from './style'\r\n\r\ninterface Props {\r\n  fullName: string\r\n  id: string\r\n  moduleType: string\r\n}\r\n\r\nlet numAdds = 0\r\n\r\nfunction DrawerItem({ fullName, id, moduleType }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.DrawerItem}>\r\n      <div \r\n        className={classes.DrawerIcon}\r\n        draggable={true}\r\n        onDragStart={event => {\r\n          event.dataTransfer.setData('id', `${id} ${numAdds}`)\r\n          event.dataTransfer.setData('moduleType', moduleType)\r\n          event.dataTransfer.setData('name', id)\r\n          window.setFillIsExpanded(true)\r\n          numAdds+=1\r\n        }}\r\n        onDragEnd={() => {\r\n          window.setFillIsExpanded(false)\r\n        }}\r\n      />\r\n      <div className={classes.DrawerItemText}>\r\n        {fullName}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawerItem","import { OscillatorModule } from './modules/oscillator'\r\nimport { GainModule } from './modules/gain'\r\nimport { OutputModule } from './modules/output'\r\nimport { AutoFilterModule } from './modules/autoFilter'\r\nimport { KompressorModule } from './modules/kompressor'\r\nimport { StereoPannerModule } from './modules/stereoPanner'\r\nimport { SignalDelayModule } from './modules/signalDelay'\r\nimport { ConstantModule } from './modules/constant'\r\nimport { MediaElementModule } from './modules/mediaElement'\r\nimport { LineInputModule } from './modules/lineInput'\r\nimport { ContainerModule } from './modules/container'\r\n\r\n// module types\r\n\r\nexport const GAIN = 'GAIN'\r\nexport const OSCILLATOR = 'OSCILLATOR'\r\nexport const OUTPUT = 'OUTPUT'\r\nexport const AUTOFILTER = 'AUTOFILTER'\r\nexport const KOMPRESSOR = 'KOMPRESSOR'\r\nexport const STEREO_PANNER = 'STEREO_PANNER'\r\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\r\nexport const CONSTANT = 'CONSTANT'\r\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\r\nexport const LINE_IN = 'LINE_IN'\r\nexport const CONTAINER = 'CONTAINER'\r\n\r\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN'\r\n\r\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\r\n\r\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule\r\n\r\nexport type AudioModule = ConnectingAudioModule | ContainerModule\r\n\r\nexport interface AudioModules {\r\n  [index: string]: AudioModule\r\n}\r\n\r\n// control types\r\n\r\nexport const TYPE = 'TYPE'\r\nexport const VALUE = 'VALUE'\r\nexport const BUTTON = 'BUTTON'\r\nexport const FILE = 'FILE'\r\nexport const INFO = 'INFO'\r\nexport const SWITCH = 'SWITCH'\r\n\r\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH'\r\nexport type Value = number | string | boolean\r\nexport type SetFunc = (arg: string) => void\r\nexport type Range = [number, number, number?] // min / max / step\r\n\r\nexport interface ControlDataPacket {\r\n  controlType: ControlType\r\n  paramID: string\r\n  value?: Value // need either paramID or value\r\n  range?: Range\r\n}\r\n\r\nexport interface ControlData {\r\n  [name: string]: ControlDataPacket\r\n}\r\n\r\nexport interface ControlSetFuncs {\r\n  [name: string]: SetFunc\r\n}\r\n\r\nexport interface BaseAM {\r\n  connectingParamIDs: string[]\r\n  controlData: ControlData\r\n  controlSetFuncs: ControlSetFuncs\r\n}\r\n\r\n\r\n","import React, { Fragment } from 'react'\r\nimport DrawerItem from '../DrawerItem'\r\nimport {\r\n  OSCILLATOR,\r\n  CONSTANT,\r\n  MEDIA_ELEMENT,\r\n  LINE_IN,\r\n} from '../../../audioModules/moduleTypes'\r\n\r\nfunction SourceModules() {\r\n  return (\r\n    <Fragment>\r\n      <DrawerItem fullName='file' id='local' moduleType={MEDIA_ELEMENT} />\r\n      <DrawerItem fullName='stream' id='stream' moduleType={LINE_IN} />\r\n      <DrawerItem fullName='oscillator' id='osc' moduleType={OSCILLATOR} />\r\n      <DrawerItem fullName='constant' id='const' moduleType={CONSTANT} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SourceModules","import React, { Fragment } from 'react'\r\nimport DrawerItem from '../DrawerItem'\r\nimport {\r\n  AUTOFILTER,\r\n  GAIN,\r\n  KOMPRESSOR,\r\n  SIGNAL_DELAY,\r\n  STEREO_PANNER,\r\n} from '../../../audioModules/moduleTypes'\r\n\r\nfunction EffectModules() {\r\n  return (\r\n    <Fragment>\r\n      <DrawerItem fullName='gain' id='gain' moduleType={GAIN} />\r\n      <DrawerItem fullName='auto filter' id='filter' moduleType={AUTOFILTER} />\r\n      <DrawerItem fullName='kompressor' id='komp' moduleType={KOMPRESSOR} />\r\n      <DrawerItem fullName='stereo panner' id='pan' moduleType={STEREO_PANNER} />\r\n      <DrawerItem fullName='signal delay' id='dly' moduleType={SIGNAL_DELAY} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EffectModules","import React, { Fragment } from 'react'\r\nimport DrawerItem from '../DrawerItem'\r\nimport {\r\n  CONTAINER,\r\n  OUTPUT,\r\n} from '../../../audioModules/moduleTypes'\r\n\r\nfunction BaseModules() {\r\n  return (\r\n    <Fragment>\r\n      <DrawerItem fullName='container' id='cntnr' moduleType={CONTAINER} />\r\n      <DrawerItem fullName='output' id='out' moduleType={OUTPUT} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BaseModules","import React, { useState } from 'react'\r\nimport useJSS from './style'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { sizes } from '../../theme/theme'\r\nimport DrawerRouteLink from './DrawerRouteLink'\r\nimport { SourceModules, EffectModules, UtilityModules } from './ModuleIcons/all'\r\nimport { HorizontalScrollDiv } from '../all'\r\n\r\nconst SOURCES = 'sources'\r\nconst EFFECTS = 'effects'\r\nconst UTILITY = 'utility'\r\n\r\nfunction RightDrawer() {\r\n  const classes = useJSS()\r\n  const [open, setOpen] = useState(true)\r\n  const closed = '-' + sizes.rightDrawer.width\r\n  const drawerSpring = useSpring({\r\n    right: open ? '0vw' : closed,\r\n    config: {\r\n      tension: 220,\r\n      clamp: true,\r\n    }\r\n  })\r\n  const [selectedRoute, setSR] = useState(SOURCES)\r\n  return (\r\n    <animated.div className={classes.DrawerBounder} style={drawerSpring}>\r\n      <div className={classes.Toggle} onClick={() => {setOpen(!open)}}>\r\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\r\n      </div>\r\n      <div className={classes.Drawer}>\r\n        <HorizontalScrollDiv className={classes.DrawerHeader}>\r\n          <DrawerRouteLink\r\n            className={classes.DrawerHeaderItem} \r\n            text={SOURCES}\r\n            onClick={() => {setSR(SOURCES)}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n          <DrawerRouteLink\r\n            className={classes.DrawerHeaderItem} \r\n            text={EFFECTS} \r\n            onClick={() => {setSR(EFFECTS)}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n          <DrawerRouteLink \r\n            className={classes.DrawerHeaderItem} \r\n            text={UTILITY} \r\n            onClick={() => {setSR(UTILITY)}}\r\n            selectedRoute={selectedRoute}\r\n          />\r\n        </HorizontalScrollDiv>\r\n        <div className={classes.ItemRouter}>\r\n          {\r\n            selectedRoute === SOURCES\r\n            ?\r\n            <SourceModules />\r\n            :\r\n            selectedRoute === EFFECTS\r\n            ?\r\n            <EffectModules />\r\n            :\r\n            selectedRoute === UTILITY\r\n            ?\r\n            <UtilityModules />\r\n            :\r\n            null\r\n          }\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport default RightDrawer","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  LeftDrawer: {\r\n    backgroundColor: colors.leftDrawer,\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontSize: 'calc(20px + 2vmin)',\r\n    color: 'white',\r\n    userSelect: 'none',\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    zIndex: '20',\r\n  },\r\n\r\n  // TopItems\r\n\r\n  TopItems: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxHeight: '50%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  //header\r\n\r\n  HeaderScrollBounder: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    '&::-webkit-scrollbar': {\r\n      height: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n\r\n  DrawerHeader: {\r\n    width: '100%',\r\n    height: '1em',\r\n    whiteSpace: 'nowrap',\r\n    backgroundColor: 'transparent',\r\n    color: 'white',\r\n    fontSize: sizes.text.large,\r\n    padding: '1vmin 0vmin',\r\n    borderWidth: '1px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    justifyText: 'center',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  MenuHeader: {\r\n    fontSize: sizes.text.medium,\r\n    borderStyle: 'none none solid none',\r\n    margin: '1vmin',\r\n    width: '90%'\r\n  }, \r\n\r\n  Connection: {\r\n    fontSize: sizes.text.small,\r\n    backgroundColor: colors.fillModule,\r\n    margin: '.5vmin 3vmin',\r\n    borderRadius: '1vmin',\r\n    borderColor: 'transparent',\r\n    borderStyle: 'solid',\r\n    minWidth: '30%',\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: colors.deleteButton,\r\n    },\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n\r\n  //control menu (in the center of left drawer)\r\n\r\n  ControlBounder: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    width: '100%',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    padding: '1vmin',\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  ControlMenu: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  // bottom items\r\n\r\n  BottomItems: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxHeight: '50%',\r\n    overflowX: 'hidden',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n})\r\n\r\nexport default useJSS","import { ConnectingAudioModule } from \"./moduleTypes\";\r\n\r\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\r\n  if (param.length === 0) {\r\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\r\n  } else {\r\n    if (toMod.audioNode[param]) {\r\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\r\n    } else {\r\n      alert('param does not exist')\r\n    }\r\n  }\r\n}\r\n\r\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\r\n  if (param.length === 0) {\r\n    if (typeof(outputIndex) === 'number') {\r\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\r\n    } else {\r\n      fromMod.audioNode.disconnect(toMod.audioNode)\r\n    }\r\n  } else {\r\n    if (toMod.audioNode[param]) {\r\n      if (typeof (outputIndex) === 'number') {\r\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\r\n      } else {\r\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\r\n      }\r\n    } else {\r\n      alert('param does not exist')\r\n    }\r\n  }\r\n}","export const DOWN_1_BASE = 'DOWN_1_BASE'\r\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { \r\n  ADD_MODULE,\r\n  REMOVE_MODULE,\r\n  MOVE_MODULE, \r\n  RENAME_MODULE,\r\n  ADD_CONNECTION,\r\n  REMOVE_CONNECTION,\r\n  MARK_CONTAINER_INPUT,\r\n  UNMARK_CONTAINER_INPUT,\r\n  MARK_CONTAINER_OUTPUT,\r\n  UNMARK_CONTAINER_OUTPUT,\r\n} from './moduleActionTypes'\r\nimport { ModuleType } from '../../audioModules/moduleTypes'\r\nimport { AddModuleAction, RemoveModuleAction, MoveModuleAction, RenameModuleAction, AddConnectionAction, RemoveConnectionAction, MarkContainerIOAction } from './moduleTSTypes'\r\n\r\nexport const addModule = (id: string, name: string, moduleType: ModuleType, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\r\n  return {\r\n    type: ADD_MODULE,\r\n    moduleType,\r\n    id,\r\n    name,\r\n    row,\r\n    col,\r\n    parentID,\r\n    connectionInputs,\r\n    connectionOutputs,\r\n  }\r\n}\r\n\r\nexport const removeModule = (id: string): RemoveModuleAction => {\r\n  return {\r\n    type: REMOVE_MODULE,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\r\n  return {\r\n    type: MOVE_MODULE,\r\n    id,\r\n    newRow,\r\n    newCol,\r\n  }\r\n}\r\n\r\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\r\n  return {\r\n    type: RENAME_MODULE,\r\n    id,\r\n    newName,\r\n  }\r\n}\r\n\r\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\r\n  return {\r\n    type: ADD_CONNECTION,\r\n    fromID,\r\n    toID,\r\n    param,\r\n    outputIndex,\r\n    inputIndex,\r\n    containerOutputChildID,\r\n    containerInputChildID,\r\n  }\r\n}\r\n\r\nexport const removeConnection = (fromID: string, toID: string, connectionID: string): RemoveConnectionAction => {\r\n  return {\r\n    type: REMOVE_CONNECTION,\r\n    fromID,\r\n    toID,\r\n    connectionID,\r\n  }\r\n}\r\n\r\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\r\n  return {\r\n    type: MARK_CONTAINER_INPUT,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\r\n  return {\r\n    type: UNMARK_CONTAINER_INPUT,\r\n    id,\r\n  }\r\n}\r\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\r\n  return {\r\n    type: MARK_CONTAINER_OUTPUT,\r\n    id,\r\n  }\r\n}\r\n\r\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\r\n  return {\r\n    type: UNMARK_CONTAINER_OUTPUT,\r\n    id,\r\n  }\r\n}","export const ADD_MODULE = 'ADD_MODULE'\r\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\r\nexport const MOVE_MODULE = 'MOVE_MODULE'\r\nexport const RENAME_MODULE = 'RENAME_MODULE'\r\nexport const ADD_CONNECTION = 'ADD_CONNECTION'\r\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\r\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\r\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\r\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\r\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'","import React from 'react'\r\nimport { Button } from '../all'\r\nimport { colors, sizes } from '../../theme/theme'\r\nimport { ContainerModule, Module } from '../../redux/stateTSTypes'\r\nimport { disconnect } from '../../audioModules/connection'\r\nimport { ConnectingAudioModule, AudioModule } from '../../audioModules/moduleTypes'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeConnection, removeModule } from '../../redux/allActions'\r\n\r\ninterface Props {\r\n  selectedModule: Module | ContainerModule\r\n  audioModule: AudioModule\r\n}\r\n\r\nfunction DeleteButton({ selectedModule, audioModule }: Props) {\r\n  const am = window.audioModules\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Button style={{\r\n      backgroundColor: colors.deleteButton,\r\n      width: '50%',\r\n      fontSize: sizes.text.small\r\n    }}\r\n      onClick={() => {\r\n        selectedModule.inputs.forEach(inputData => {\r\n          const { connectionID, connectedID, param, outputIndex, containerOutputChildID, containerInputChildID } = inputData\r\n          dispatch(removeConnection(connectedID, selectedModule.id, connectionID))\r\n          disconnect(am[containerOutputChildID ? containerOutputChildID : connectedID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\r\n        })\r\n        selectedModule.outputs.forEach(outputData => {\r\n          const { connectionID, connectedID, param, outputIndex, containerOutputChildID, containerInputChildID } = outputData\r\n          dispatch(removeConnection(selectedModule.id, connectedID, connectionID))\r\n          disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : connectedID] as ConnectingAudioModule, param, outputIndex)\r\n        })\r\n        dispatch(removeModule(window.highlightedID))\r\n        window.setLeftDrawerOpen(false)\r\n        window.highlightedID = ''\r\n      }}\r\n    >delete</Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton","import React, { Fragment } from 'react'\r\nimport useJSS from './style'\r\nimport { Module, Modules } from '../../redux/stateTSTypes'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeConnection } from '../../redux/allActions'\r\nimport { disconnect } from '../../audioModules/connection'\r\nimport { ConnectingAudioModule } from '../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  selectedModule: Module\r\n  modules: Modules\r\n}\r\n\r\nfunction InputOutputView({ selectedModule, modules }: Props) {\r\n  const classes = useJSS()\r\n  const dispatch = useDispatch()\r\n  const am = window.audioModules\r\n  return (\r\n    <Fragment>\r\n\r\n      {!selectedModule ? null : selectedModule.inputs.length === 0 ? null :\r\n        <div className={classes.MenuHeader}>inputs</div>\r\n      }\r\n\r\n      {!selectedModule ? null : selectedModule.inputs.map((inputData, index) => {\r\n        const { connectionID, connectedID, param, outputIndex, containerOutputChildID, containerInputChildID } = inputData\r\n        const name = modules[connectedID].name\r\n        return (\r\n          <div className={classes.Connection}\r\n            key={connectedID + param + 'inp' + index}\r\n            onClick={() => {\r\n              dispatch(removeConnection(connectedID, selectedModule.id, connectionID))\r\n              disconnect(am[containerOutputChildID ? containerOutputChildID : connectedID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\r\n            }}\r\n          >\r\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      {!selectedModule ? null : selectedModule.outputs.length === 0 ? null :\r\n        <div className={classes.MenuHeader}>outputs</div>\r\n      }\r\n\r\n      {!selectedModule ? null : selectedModule.outputs.map((outputData, index) => {\r\n        const { connectionID, connectedID, param, outputIndex, containerOutputChildID, containerInputChildID } = outputData\r\n        const name = modules[connectedID].name\r\n        return (\r\n          <div className={classes.Connection}\r\n            key={connectedID + param + 'out' + index}\r\n            onClick={() => {\r\n              dispatch(removeConnection(selectedModule.id, connectedID, connectionID))\r\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : connectedID] as ConnectingAudioModule, param, outputIndex)\r\n            }}\r\n          >\r\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\r\n          </div>\r\n        )\r\n      })}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputOutputView","import React, { Fragment } from 'react'\r\nimport { Module } from '../../redux/stateTSTypes'\r\nimport { Switch } from '../all'\r\nimport { useDispatch } from 'react-redux'\r\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../redux/allActions'\r\nimport CSS from 'csstype'\r\nimport { sizes } from '../../theme/theme'\r\n\r\ninterface Props {\r\n  baseContainerID: string\r\n  selectedModule: Module\r\n}\r\n\r\nconst switchStyle: CSS.Properties = {\r\n  fontSize: sizes.text.xsmall,\r\n  padding: '1vmin',\r\n}\r\n\r\nfunction MarkContainerIO({ baseContainerID, selectedModule }: Props) {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    selectedModule ?\r\n    <Fragment>\r\n      {\r\n      window.fillContainerID === baseContainerID ? null :\r\n      selectedModule.connectionInputs.length === 0 ? null :\r\n      <Switch style={switchStyle}\r\n        key={selectedModule.id + 'inputSwitch'}\r\n        text={'mark as container input'} \r\n        initState={selectedModule.isContainerInput}\r\n        onSwitch={(newState) => {\r\n          if (newState) {\r\n            dispatch(markContainerInput(window.highlightedID))\r\n          } else {\r\n            dispatch(unmarkContainerInput(window.highlightedID))\r\n          }\r\n        }}\r\n      />\r\n      }\r\n      {\r\n      window.fillContainerID === baseContainerID ? null :\r\n      selectedModule.connectionOutputs.length === 0 ? null :\r\n      <Switch style={switchStyle}\r\n        key={selectedModule.id + 'outputSwitch'}\r\n        text={'mark as container output'}\r\n        initState={selectedModule.isContainerOutput}\r\n        onSwitch={(newState) => {\r\n          if (newState) {\r\n            dispatch(markContainerOutput(window.highlightedID))\r\n          } else {\r\n            dispatch(unmarkContainerOutput(window.highlightedID))\r\n          }\r\n        }}\r\n      />\r\n      }\r\n    </Fragment>\r\n    :\r\n    null\r\n  )\r\n}\r\n\r\nexport default MarkContainerIO","import { createUseStyles } from 'react-jss'\r\nimport { sizes } from '../../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  ControlTypeSelect: {\r\n    minWidth: '9vmin',\r\n    maxWidth: '5em',\r\n    margin: '1vmin',\r\n    fontSize: sizes.text.small\r\n  },\r\n\r\n  ControlInput: {\r\n    minWidth: '9vmin',\r\n    maxWidth: '5em',\r\n    margin: '1vmin',\r\n    fontSize: sizes.text.small\r\n  },\r\n\r\n  ControlMenu: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\nimport { Button } from '../../all'\r\nimport { colors, sizes } from '../../../theme/theme'\r\nimport { SetFunc } from '../../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  controlID: string\r\n  setFunc: SetFunc\r\n}\r\n\r\nfunction File({ controlID, setFunc }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.ControlMenu}>\r\n      <label style={{ minWidth: '50%', }}\r\n        htmlFor={window.highlightedID + controlID}\r\n      >\r\n        <Button style={{\r\n          //backgroundColor: colors.fillModule,\r\n          borderColor: colors.deleteButton,\r\n        }}\r\n        >choose file</Button>\r\n      </label>\r\n      <input style={{ width: 0, height: 0, opacity: 0 }}\r\n        type='file'\r\n        id={window.highlightedID + controlID}\r\n        onChange={(e) => {\r\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\r\n          setFunc(URL.createObjectURL(file))\r\n          window.audioTags[window.highlightedID].srcName = file.name\r\n          window.reRenderAudioTags()\r\n          window.reRenderLeftDrawer()\r\n        }}\r\n      />\r\n      <p style={{\r\n        fontSize: sizes.text.xsmall,\r\n        textAlign: 'center',\r\n        whiteSpace: 'normal',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        overflowWrap: 'break-word',\r\n        wordWrap: 'break-word',\r\n        hyphens: 'auto',\r\n      }}>\r\n        {window.audioTags[window.highlightedID].srcName}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default File","import React, { Fragment } from 'react'\r\nimport useJSS from './style'\r\nimport { SetFunc, Value, AudioModuleWithTypes } from '../../../audioModules/moduleTypes'\r\nimport { Module, ContainerModule } from '../../../redux/stateTSTypes'\r\n\r\ninterface Props {\r\n  setFunc: SetFunc\r\n  audioModule: AudioModuleWithTypes\r\n  value: Value | undefined\r\n  selectedModule: Module | ContainerModule\r\n}\r\n\r\nfunction Type({ setFunc, audioModule, value, selectedModule}: Props) {\r\n  const classes = useJSS()\r\n  const { audioNode } = audioModule\r\n  return (\r\n    <Fragment>\r\n      <label htmlFor={'type'}>choose type</label>\r\n      <select className={classes.ControlTypeSelect}\r\n        name='type' id='type'\r\n        onChange={(e) => {\r\n          setFunc(e.target.value)\r\n          window.reRenderLeftDrawer()\r\n        }}\r\n        value={value as string ? value as string : audioNode.type as string}\r\n      >\r\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\r\n          return (\r\n            <option value={type} key={selectedModule.id + type}>{type}</option>\r\n          )\r\n        })}\r\n      </select>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Type","import React, { Fragment } from 'react'\r\nimport useJSS from './style'\r\nimport { Value, Range, AudioModule, SetFunc, ConnectingAudioModule } from '../../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  controlID: string\r\n  value: Value | undefined\r\n  audioModule: AudioModule\r\n  range: Range | undefined\r\n  paramID: string\r\n  setFunc: SetFunc\r\n}\r\n\r\nfunction ValueControl({ controlID, value, audioModule, range, paramID, setFunc }: Props) {\r\n  const { audioNode } = audioModule as ConnectingAudioModule\r\n  const classes = useJSS()\r\n  return (\r\n    <Fragment>\r\n      <div>{controlID}</div>\r\n      <input className={classes.ControlInput}\r\n        type='number'\r\n        value={typeof(value) === 'number' ? value : audioNode[paramID].value}\r\n        min={range ? range[0] : undefined}\r\n        max={range ? range[1] : undefined}\r\n        step={!range ? undefined : range[2] ? range[2] : undefined}\r\n        onChange={(e) => {\r\n          setFunc(e.target.value)\r\n          window.reRenderLeftDrawer()\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ValueControl","import React from 'react'\r\nimport { Button } from '../../all'\r\nimport { SetFunc } from '../../../audioModules/moduleTypes'\r\nimport { colors } from '../../../theme/theme'\r\n\r\ninterface Props {\r\n  setFunc: SetFunc\r\n  controlID: string\r\n}\r\n\r\nfunction ButtonControl({ setFunc, controlID }: Props) {\r\n  return (\r\n    <Button style={{\r\n      //backgroundColor: colors.fillModule,\r\n      borderColor: colors.deleteButton,\r\n      width: '50%',\r\n    }}\r\n      onClick={() => {\r\n        setFunc('')\r\n      }}\r\n    >{controlID}</Button>\r\n  )\r\n}\r\n\r\nexport default ButtonControl","import React from 'react'\r\nimport { Switch } from '../../all'\r\nimport { SetFunc } from '../../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  controlID: string\r\n  setFunc: SetFunc\r\n}\r\n\r\nfunction SwitchControl({ controlID, setFunc }: Props) {\r\n  return (\r\n    <Switch text={controlID} \r\n      initState={false} \r\n      onSwitch={(newState) => {\r\n        setFunc(newState ? 'true' : 'false')\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SwitchControl","import React, { useState } from 'react'\r\nimport useJSS from './style'\r\nimport { AudioModule, AudioModuleWithTypes } from '../../audioModules/moduleTypes'\r\nimport { Module } from '../../redux/stateTSTypes'\r\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\r\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl } from './controls/all'\r\nimport { Button } from '../all'\r\nimport { colors } from '../../theme/theme'\r\n\r\ninterface Props {\r\n  audioModule: AudioModule\r\n  selectedModule: Module\r\n}\r\n\r\nfunction ControlMenu({ audioModule, selectedModule }: Props) {\r\n  const classes = useJSS()\r\n  const [controlsOpen, setControlsOpen] = useState(false)\r\n  return (\r\n    <div className={classes.ControlMenu}>\r\n      <Button style={{\r\n        width: '70%',\r\n        backgroundColor: colors.controlMenuButton,\r\n      }}\r\n        onClick={() => {\r\n          setControlsOpen(!controlsOpen)\r\n        }}\r\n      >{'controls'}</Button>\r\n      {!controlsOpen ? null : audioModule ? Object.keys(audioModule.controlData).map((controlID, index) => {\r\n        const { controlType, paramID, value, range } = audioModule.controlData[controlID]\r\n        const setFunc = audioModule.controlSetFuncs[controlID]\r\n        return (\r\n          <div className={classes.ControlBounder} key={selectedModule.id + index}>\r\n            {controlType === VALUE\r\n            ?\r\n            <ValueControl controlID={controlID} value={value} audioModule={audioModule} range={range} paramID={paramID} setFunc={setFunc}/>\r\n            :\r\n            controlType === BUTTON\r\n            ?\r\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\r\n            :\r\n            controlType === TYPE\r\n            ?\r\n            <TypeControl setFunc={setFunc} audioModule={audioModule as AudioModuleWithTypes} value={value} selectedModule={selectedModule} />\r\n            :\r\n            controlType === FILE\r\n            ?\r\n            <FileControl controlID={controlID} setFunc={setFunc} />\r\n            :\r\n            controlType === SWITCH\r\n            ?\r\n            <SwitchControl controlID={controlID} setFunc={setFunc} />\r\n            :\r\n            null\r\n            }\r\n          </div>\r\n        )\r\n      }) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ControlMenu","import React, { useState, Fragment } from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport useJSS from './style'\r\nimport { sizes } from '../../theme/theme'\r\nimport { useSelector } from 'react-redux'\r\nimport { HorizontalScrollDiv, RenameMenu } from '../all'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\nimport DeleteButton from './DeleteButton'\r\nimport InputOutputView from './InputOutputView'\r\nimport MarkContainerIO from './MarkContainerIO'\r\nimport ControlMenu from './ControlMenu'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    setLeftDrawerOpen: (isOpen: boolean) => void\r\n    reRenderLeftDrawer: () => void\r\n  }\r\n}\r\n\r\nfunction LeftDrawer() {\r\n  const classes = useJSS()\r\n  const [isOpen, setOpen] = useState(false)\r\n  window.setLeftDrawerOpen = setOpen\r\n  const springStyle = useSpring({\r\n    width: isOpen ? sizes.leftDrawer.width : '0vw',\r\n    config: {\r\n      tension: 300,\r\n      velocity: 10,\r\n      clamp: true,\r\n    }\r\n  })\r\n  const [isRenameMenuOpen, setRMOpen] = useState(false)\r\n  const [ modules, baseContainerID ] = useSelector((state: RootState) => [state.modules, state.baseContainerID])\r\n  const selectedModule = modules[window.highlightedID]\r\n  const am = window.audioModules\r\n  const audioModule = am[window.highlightedID]\r\n  const [toReRender, setReRender] = useState(false)\r\n  window.reRenderLeftDrawer = () => {setReRender(!toReRender)}\r\n  return (\r\n    <Fragment>\r\n      <animated.div className={classes.LeftDrawer} style={springStyle}>\r\n        <div className={classes.TopItems}>\r\n          <HorizontalScrollDiv className={classes.HeaderScrollBounder}>\r\n            <div className={classes.DrawerHeader} onClick={() => {\r\n              setRMOpen(true)\r\n            }}>\r\n              {selectedModule ? selectedModule.name : null}\r\n            </div>\r\n          </HorizontalScrollDiv>\r\n          <InputOutputView selectedModule={selectedModule} modules={modules}/>\r\n        </div>\r\n        {selectedModule ? <ControlMenu audioModule={audioModule} selectedModule={selectedModule} key={selectedModule.id}/> : null}\r\n        <div className={classes.BottomItems}>\r\n          <MarkContainerIO baseContainerID={baseContainerID} selectedModule={selectedModule}/>\r\n          <DeleteButton selectedModule={selectedModule} audioModule={audioModule} />\r\n        </div>\r\n      </animated.div>\r\n      {!isRenameMenuOpen ? null :\r\n      <RenameMenu setRMOpen={setRMOpen}/>}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LeftDrawer","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  FillBounder: {\r\n    backgroundColor: colors.fillModule,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '5vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    borderRadius: '2vmin',\r\n  },\r\n\r\n  FillHeaderBounder: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n  FillHeader: {\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    padding: '1vmin',\r\n    marginLeft: '2vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n\r\n  Fill: {\r\n    display: 'grid',\r\n    minWidth: sizes.moduleView.iconGrid,\r\n    minHeight: sizes.moduleView.iconGrid,\r\n    //alignItems: 'center',\r\n    //justifyItems: 'center',\r\n    padding: '2vmin',\r\n    zIndex: 1,\r\n  },\r\n\r\n  ArcherContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 0,\r\n    display: 'grid',\r\n  },\r\n\r\n  Icon: {\r\n    backgroundColor: colors.module,\r\n    //width: sizes.moduleView.icon,\r\n    //height: sizes.moduleView.icon,\r\n    borderRadius: '1.5vmin',\r\n    borderStyle: 'none',\r\n    borderColor: 'white',\r\n    whiteSpace: 'wrap',\r\n    fontSize: sizes.text.medium,\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderStyle: 'solid',\r\n    },\r\n    zIndex: 2,\r\n  },\r\n\r\n  IconName: {\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  IconConnector: {\r\n    backgroundColor: colors.outputConnector,\r\n    width: sizes.connector.size,\r\n    height: sizes.connector.size,\r\n    borderRadius: sizes.connector.borderRadius,\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    borderStyle: 'none',\r\n    borderColor: 'white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n})\r\n\r\nexport default useJSS","import React, { useState, Fragment } from 'react'\r\nimport { Module, RootState } from '../../redux/stateTSTypes'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { moveModule } from '../../redux/allActions'\r\nimport { ConnectionMenu } from '../all'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { sizes } from '../../theme/theme'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    currSetHighlighted: (setHighlighted: boolean) => void\r\n  }\r\n}\r\n\r\nwindow.currSetHighlighted = () => {}\r\n\r\ninterface Props {\r\n  mod: Module\r\n  gridCol: number\r\n  gridRow: number\r\n}\r\n\r\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\r\n  const classes = useJSS()\r\n  const [isHighlighted, setHighlighted] = useState(mod.id === window.highlightedID)\r\n  if (mod.id === window.highlightedID) {\r\n    window.currSetHighlighted = setHighlighted\r\n  }\r\n  const iconStyle: CSS.Properties = {\r\n    gridColumn: `${gridCol} / span 1`,\r\n    gridRow: `${gridRow} / span 1`,\r\n    borderStyle: isHighlighted ? 'solid' : 'none'\r\n  }\r\n  const iconSpring0 = useSpring({\r\n    width: isHighlighted ? sizes.moduleView.bigIcon : sizes.moduleView.icon,\r\n    height: isHighlighted ? sizes.moduleView.bigIcon : sizes.moduleView.icon,\r\n    config: {\r\n      tension: 550,\r\n    }\r\n  })\r\n  const iconSpring1 = useSpring({\r\n    zIndex: isHighlighted ? 3 : 2,\r\n    config: { duration: 0 }\r\n  })\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const dispatch = useDispatch()\r\n  const [cmState, setCMState] = useState({ // connectionMenuState\r\n    isOpen: false,\r\n    fromID: '',\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <animated.div \r\n        className={classes.Icon} \r\n        style={Object.assign(iconSpring0, iconSpring1, iconStyle)}\r\n        onDragOver={event => {\r\n          event.preventDefault()\r\n        }}\r\n        onDrop={e => {\r\n          const id = e.dataTransfer.getData('id')\r\n          if (id) {\r\n            const possiblyMod = modules[id]\r\n            if (possiblyMod) {\r\n              const fromRow = e.dataTransfer.getData('fromRow')\r\n              const fromCol = e.dataTransfer.getData('fromCol')\r\n              window.setFillIsExpanded(false)\r\n              dispatch(moveModule(id, mod.row, mod.col))\r\n              dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\r\n              window.setTimeout(window.refreshArcherContainer, 500)\r\n            }\r\n          } else {\r\n            if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\r\n              alert('mod cannot accept input')\r\n            } else {\r\n              const fromID = e.dataTransfer.getData('fromID')\r\n              if (fromID) {\r\n                setCMState({\r\n                  isOpen: true,\r\n                  fromID,\r\n                })\r\n              }\r\n            }\r\n          }\r\n          setHighlighted(false)\r\n        }}\r\n        draggable={true}\r\n        onDragStart={event => {\r\n          event.dataTransfer.setData('id', mod.id)\r\n          event.dataTransfer.setData('fromRow', `${mod.row}`)\r\n          event.dataTransfer.setData('fromCol', `${mod.col}`)\r\n          window.setFillIsExpanded(true)\r\n        }}\r\n        onDragEnd={() => {\r\n          window.setFillIsExpanded(false)\r\n        }}\r\n        onClick={e => {\r\n          if (e.stopPropagation) {\r\n            e.stopPropagation()\r\n          }\r\n          if (mod.id === window.highlightedID) {\r\n            window.setLeftDrawerOpen(false)\r\n            setHighlighted(false)\r\n            window.highlightedID = ''\r\n            window.currSetHighlighted = (setHighlighted) => {}\r\n          } else {\r\n            setHighlighted(true)\r\n            window.highlightedID = mod.id\r\n            window.setLeftDrawerOpen(true)\r\n            window.reRenderLeftDrawer()\r\n            window.currSetHighlighted(false)\r\n            window.currSetHighlighted = setHighlighted\r\n          }\r\n          window.setTimeout(() => { window.refreshArcherContainer() }, 10)\r\n        }}\r\n      >\r\n        {mod.connectionOutputs.length === 0 ? null\r\n        :\r\n        <div className={classes.IconConnector}\r\n          draggable={true}\r\n          onDragStart={(e) => {\r\n            e.stopPropagation()\r\n            e.dataTransfer.setData('fromID', mod.id)\r\n          }}\r\n        />}\r\n        <div className={classes.IconName}>\r\n          {mod.name}\r\n        </div>\r\n      </animated.div>\r\n      {!cmState.isOpen ? null\r\n      :\r\n      <ConnectionMenu fromID={cmState.fromID} toID={mod.id}\r\n        onClose={() => {\r\n          setCMState({\r\n            isOpen: false,\r\n            fromID: '',\r\n          })\r\n          window.linkToOutputID = ''\r\n        }}\r\n      />}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ModuleViewIcon","export function stringIn(str: string, ar: any[]) {\r\n\t// returns true if string is an element of array\r\n\t// false otherwise\r\n\tfor (var i = 0; i < ar.length; i++) {\r\n\t\tif (ar[i] === str) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}\r\n\r\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\r\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\r\n}\r\n\r\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\r\n\t// variable is set to list[index]\r\n\t// puts variable into list at index (replacing what's there)\r\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\r\n\tvar temp = list[index]\r\n\tlist[index] = variable\r\n\t\r\n\treturn temp\r\n}\r\n\r\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\r\n\tvar wrapped: () => T = function () {\r\n\t\treturn func(...args)\r\n\t}\r\n\t\r\n\treturn wrapped\r\n}\r\n\r\nexport function arrayEqual(arr1: any[], arr2: any[]) {\r\n\tif (arr1.length === arr2.length) {\r\n\t\tfor(var i = 0; i < arr1.length; i++) {\r\n\t\t\tif (arr1[i] !== arr2[i]) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport function range(start: number, stop: number) {\r\n\t// returns list of integers from start (inclusive) to stop (exclusive)\r\n\tvar out = []\r\n\tfor (var i = start; i < stop; i++) {\r\n\t\tout.push(i)\r\n\t}\r\n\treturn out\r\n}","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  DropSquare: {\r\n    width: sizes.moduleView.iconGrid,\r\n    height: sizes.moduleView.iconGrid,\r\n    borderStyle: 'none',\r\n    borderColor: colors.dropSquareHL,\r\n    borderRadius: '10px',\r\n    zIndex: 1,\r\n  },\r\n})\r\n\r\nexport default useJSS","import React, { useState } from 'react'\r\nimport CSS from 'csstype'\r\nimport useJSS from './style'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\r\nimport { moveModule } from '../../redux/modules/moduleActions'\r\nimport { isOccupied } from '../ModuleView/helpers'\r\nimport { ModuleType } from '../../audioModules/moduleTypes'\r\n\r\ninterface Props {\r\n  row: number\r\n  col: number\r\n}\r\n\r\n\r\n\r\nfunction DropSquare({ row, col }: Props) {\r\n  const classes = useJSS()\r\n  const dispatch = useDispatch()\r\n  const { modules } = useSelector((state: RootState) => {\r\n    return {\r\n      modules: state.modules\r\n    }\r\n  })\r\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\r\n  const dsStyle: CSS.Properties = {\r\n    gridColumn: `${col * 2 + 1} / span 1`,\r\n    gridRow: `${row * 2 + 1} / span 1`,\r\n    borderStyle: isHL ? 'solid' : 'none',\r\n  }\r\n  return (\r\n    <div \r\n      className={classes.DropSquare} \r\n      style={dsStyle}\r\n      onDragOver={event => {\r\n        event.preventDefault()\r\n      }}\r\n      onDragEnter={() => {\r\n        setHL(true)\r\n      }}\r\n      onDragLeave={() => {\r\n        setHL(false)\r\n      }}\r\n      onDrop={event => {\r\n        const id = event.dataTransfer.getData('id')\r\n        const fc = modules[window.fillContainerID] as ContainerModule\r\n        const currentChildren = fc.childModules.concat(fc.childModules)\r\n        const possiblyMod = modules[id]\r\n        const possiblyOccupyingID = isOccupied(row, col, currentChildren, modules)\r\n        if (!possiblyMod) {\r\n          if (!possiblyOccupyingID) {\r\n            const moduleType = event.dataTransfer.getData('moduleType') as ModuleType\r\n            const name = event.dataTransfer.getData('name')\r\n            setHL(false)\r\n            window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\r\n            window.setFillIsExpanded(false)\r\n          }\r\n        } else if (possiblyOccupyingID) {\r\n          const fromRow = event.dataTransfer.getData('fromRow')\r\n          const fromCol = event.dataTransfer.getData('fromCol')\r\n          setHL(false)\r\n          window.setFillIsExpanded(false)\r\n          dispatch(moveModule(id, row, col))\r\n          dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\r\n          window.setTimeout(window.refreshArcherContainer, 1)\r\n        } else {\r\n          setHL(false)\r\n          window.setFillIsExpanded(false)\r\n          dispatch(moveModule(id, row, col))\r\n          window.setTimeout(window.refreshArcherContainer, 1)\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DropSquare","import { Modules } from \"../../redux/stateTSTypes\"\r\n\r\nexport function getGridRange(childModules: string[], modules: Modules) {\r\n  let maxRow = 0\r\n  let maxCol = 0 // min col is always 0\r\n  childModules.forEach(moduleID => {\r\n    const mod = modules[moduleID]\r\n    if (mod.row > maxRow) {\r\n      maxRow = mod.row\r\n    }\r\n    if (mod.col > maxCol) {\r\n      maxCol = mod.col\r\n    }\r\n  })\r\n  return { maxRow, maxCol }\r\n}\r\n\r\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\r\n  for (var i = 0; i < currentChildren.length; i++) {\r\n    const mod = modules[currentChildren[i]]\r\n    if (mod.row === row && mod.col === col) {\r\n      return mod.id\r\n    }\r\n  }\r\n  return false\r\n}","import React, { useState, Fragment, useRef } from 'react'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\nimport { sizes } from '../../theme/theme'\r\nimport ModuleViewIcon from './Icon'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\r\nimport { getGridRange } from './helpers'\r\nimport { range } from '../../helpers/genFuncs'\r\nimport DropSquare from '../DropSquare/DropSquare'\r\nimport { ArcherContainer, ArcherElement } from 'react-archer'\r\nimport { Button } from '../all'\r\n\r\ndeclare global {\r\n  interface Window { \r\n    setFillIsExpanded: (isExpanded: boolean) => void\r\n    refreshArcherContainer: () => void\r\n    reRenderFillContainer: () => void\r\n  }\r\n}\r\n\r\nconst iconGridSize = sizes.moduleView.iconGrid\r\nconst gutterGridSize = sizes.moduleView.gutterGrid\r\n\r\nfunction ModuleViewFill() {\r\n  const classes = useJSS()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  window.setFillIsExpanded = setIsExpanded\r\n  const [reRender, toReRender] = useState(false)\r\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\r\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\r\n    return {\r\n      modules: state.modules,\r\n      baseContainerID: state.baseContainerID\r\n    }\r\n  })\r\n  const containerModule = modules[window.fillContainerID] as ContainerModule\r\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\r\n  let gridStyle: CSS.Properties\r\n  const isEmpty = containerModule.childModules.length === 0\r\n  if (isEmpty) {\r\n    gridStyle = {\r\n      gridTemplateRows: `repeat(${1}, ${'auto'} ${gutterGridSize})`,\r\n      gridTemplateColumns: `repeat(${1}, ${'auto'} ${gutterGridSize})`,\r\n    }\r\n  } else {\r\n    gridStyle = {\r\n      gridTemplateRows: `repeat(${isExpanded ? maxRow + 2 : maxRow + 1}, ${'auto'} ${gutterGridSize})`,\r\n      gridTemplateColumns: `repeat(${isExpanded ? maxCol + 2 : maxCol + 1}, ${'auto'} ${gutterGridSize})`,\r\n    }\r\n  }\r\n  const archerContainerRef = useRef<ArcherContainer>(null)\r\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\r\n  return (\r\n    <div className={classes.FillBounder}>\r\n      <div className={classes.FillHeaderBounder}>\r\n        <div className={classes.FillHeader}\r\n          style={{ width: `${containerModule.name.length / 2}em` }}\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            window.highlightedID = containerModule.id // need to add cases to on rename reducer to rename fill/base containers\r\n            window.setLeftDrawerOpen(true)\r\n          }}\r\n        >\r\n          {containerModule.name}\r\n        </div>\r\n        {containerModule.id === baseContainerID ? null :\r\n        <Button style={{ height: '.7em' }}\r\n          onClick={() => {\r\n            window.fillContainerID = containerModule.parentID as string\r\n            window.reRenderFillContainer()\r\n            window.highlightedID = ''\r\n            window.setLeftDrawerOpen(false)\r\n        }}\r\n        >\r\n          <div>back</div>\r\n        </Button>\r\n        }\r\n      </div>\r\n      <div className={classes.Fill} style={gridStyle} onClick={() => {\r\n        window.highlightedID = ''\r\n        window.currSetHighlighted(false)\r\n        window.currSetHighlighted = () => {}\r\n        window.setLeftDrawerOpen(false)\r\n      }}>\r\n        {!isExpanded ? null : \r\n        isEmpty ? <DropSquare row={0} col={0}/> :\r\n        range(0, isExpanded ? maxRow + 2 : maxRow + 1).map(row => {\r\n          return range(0, isExpanded ? maxCol + 2 : maxCol + 1).map(col => {\r\n            return (\r\n              <DropSquare\r\n                key={`${row} ${col}`}\r\n                row={row} \r\n                col={col}\r\n              />\r\n            )\r\n          })\r\n        }).flat()}\r\n        {containerModule.childModules.map(moduleID => {\r\n          const mod = modules[moduleID]\r\n          return (\r\n            <ModuleViewIcon\r\n              key={mod.id}\r\n              mod={mod}\r\n              gridRow={mod.row * 2 + 1}\r\n              gridCol={mod.col * 2 + 1}\r\n            />\r\n          )\r\n        })}\r\n        <ArcherContainer className={classes.ArcherContainer}\r\n          style={{ \r\n            gridRow: `1 / span ${maxRow * 2 + 2}`, \r\n            gridColumn: `1 / span ${maxCol * 2 + 2}`,\r\n          }}\r\n          arrowLength={0}\r\n          ref={archerContainerRef}\r\n        >\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateRows: `repeat(${maxRow + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n            gridTemplateColumns: `repeat(${maxCol + 1}, ${iconGridSize} ${gutterGridSize})`,\r\n          }}>\r\n          {containerModule.childModules.map(moduleID => {\r\n            const mod = modules[moduleID]\r\n            return (\r\n              <Fragment key={mod.id}>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'start start',\r\n                  position: 'relative',\r\n                  top: '10px',\r\n                  left: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' input'}\r\n                  >\r\n                    <div style={{ \r\n                      width: '10px', \r\n                      height: '10px', \r\n                      //backgroundColor: 'blue',\r\n                    }}></div>\r\n                  </ArcherElement>\r\n                </div>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'end start',\r\n                  position: 'relative',\r\n                  bottom: '10px',\r\n                  left: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' controls'}\r\n                  >\r\n                    <div style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                      //backgroundColor: 'yellow',\r\n                    }}></div>\r\n                  </ArcherElement>\r\n                </div>\r\n                <div style={{\r\n                  gridColumn: `${mod.col * 2 + 1} / span 1`,\r\n                  gridRow: `${mod.row * 2 + 1} / span 1`,\r\n                  placeSelf: 'start end',\r\n                  position: 'relative',\r\n                  top: '10px',\r\n                  right: '5px'\r\n                }}>\r\n                  <ArcherElement\r\n                    id={mod.id + ' output'}\r\n                    relations={mod.outputs.map(outputData => {\r\n                      const { connectedID, param } = outputData\r\n                      return {\r\n                        targetId: param === '' ? connectedID + ' input' : connectedID + ' controls',\r\n                        targetAnchor: 'left',\r\n                        sourceAnchor: 'right',\r\n                        style: {\r\n                          strokeColor: param === '' ? 'red' : 'blue',\r\n                          strokeWidth: param === '' ? 1 : 1,\r\n                        }\r\n                      }\r\n                    })}\r\n                  >\r\n                    <div style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                    }}/>\r\n                  </ArcherElement>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          })}\r\n          </div>\r\n        </ArcherContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModuleViewFill","import React, { ReactNode, useRef, WheelEvent } from 'react'\r\nimport CSS from 'csstype'\r\n\r\ninterface Props {\r\n  children: ReactNode\r\n  className?: string\r\n  style?: CSS.Properties\r\n}\r\n\r\nconst baseStyle = {\r\n  overflowY: 'hidden',\r\n  overflowX: 'scroll',\r\n  display: 'flex',\r\n}\r\n\r\nfunction HorizontalScrollDiv({ children, className, style }: Props) {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  function onWheel(event: WheelEvent) {\r\n    if(ref && ref.current) {\r\n      ref.current.scrollLeft += event.deltaY\r\n    } \r\n  }\r\n\r\n  const baseStyleCopy = Object.assign({}, baseStyle)\r\n  return (\r\n    <div ref={ref} className={className} style={Object.assign(baseStyleCopy, style)} onWheel={onWheel}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalScrollDiv","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  CenterMenuBounder: {\r\n    backgroundColor: 'rgba(0,0,0,0.7)',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: 100,\r\n  },\r\n\r\n  CenterMenu: {\r\n    backgroundColor: colors.centerMenu,\r\n    position: 'absolute',\r\n    top: '50vh',\r\n    left: '50vw',\r\n    transform: 'translate(-50%, calc(-50% - 50px))',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderRadius: '2vmin',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    minWidth: '15vw',\r\n    padding: '1vmin 2vmin 2vmin 2vmin',\r\n    border: '1px solid white',\r\n    zIndex: 101,\r\n  },\r\n\r\n  Header: {\r\n    padding: '1vmin 2vmin',\r\n    margin: '0vmin 0vmin 2vmin 0vmin',\r\n    borderColor: 'white',\r\n    borderStyle: 'none none solid none',\r\n    fontSize: sizes.text.large,\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  header: string\r\n  onClose: () => void\r\n}\r\n\r\nfunction CenterMenu({ children, header, onClose }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.CenterMenuBounder}\r\n      onClick={(e) => {\r\n        e.stopPropagation()\r\n        onClose()\r\n      }}\r\n    >\r\n      <div className={classes.CenterMenu}\r\n        onClick={(e) => {e.stopPropagation()}} \r\n      >\r\n        <div className={classes.Header}>\r\n          {header}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CenterMenu","const AudioContext = window.AudioContext\r\nconst audioCtx = new AudioContext()\r\nexport default audioCtx","import { createUseStyles } from 'react-jss'\r\n//import { colors } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  TestingArea: {\r\n    backgroundColor: 'black',\r\n    position: 'absolute',\r\n    top: '45vh',\r\n    left: '25vw',\r\n    width: '45vw',\r\n    height: '50vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 150,\r\n  },\r\n\r\n  ButtonDiv: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n  },\r\n\r\n  Button: {\r\n    margin: '2vmin',\r\n    padding: '1vmin',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\nimport audioCtx from '../../audioCtx'\r\n\r\n/*\r\nvar splitter = audioCtx.createChannelSplitter(2)\r\n\r\nvar lpf = audioCtx.createBiquadFilter()\r\n  lpf.type = \"lowpass\"\r\n  lpf.frequency.value = 440\r\n  lpf.Q.value = 10\r\n\r\n\r\nnavigator.mediaDevices.getUserMedia({\r\n  audio: {\r\n    echoCancellation: false,\r\n    autoGainControl: false,\r\n    noiseSuppression: false,\r\n    latency: 0,\r\n    channelCount: 3,\r\n  }\r\n}).then(stream => {\r\n  const src = audioCtx.createMediaStreamSource(stream)\r\n  const splitter = audioCtx.createChannelSplitter(3)\r\n  const gain0 = audioCtx.createGain()\r\n  const gain1 = audioCtx.createGain()\r\n  const gain2 = audioCtx.createGain()\r\n  //const merger = audioCtx.createChannelMerger(3)\r\n  //const dly = audioCtx.createDelay(); dly.delayTime.value = .18\r\n  //const dlyFdbk = audioCtx.createGain(); dlyFdbk.gain.value = .6\r\n  //dly.connect(dlyFdbk); dlyFdbk.connect(dly)\r\n  const master = audioCtx.createGain(); master.gain.value = 1\r\n\r\n  console.log(stream.getAudioTracks()[0].getCapabilities())\r\n\r\n  master.gain.value = 1\r\n\r\n  src.connect(splitter)\r\n  splitter.connect(gain0, 0)\r\n  splitter.connect(gain1, 1)\r\n  splitter.connect(gain2, 2)\r\n  gain0.connect(master)\r\n  gain1.connect(master)\r\n  gain2.connect(master)\r\n  //merger.connect(master)\r\n  master.connect(audioCtx.destination)\r\n})\r\n*/\r\n\r\nfunction MrTesterr() {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.TestingArea}>\r\n      {'mr testerrr'}\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'green' }}\r\n          onClick={() => {\r\n            audioCtx.resume()\r\n          }}\r\n        >start ctx</div>\r\n      </div>\r\n      <div className={classes.ButtonDiv}>\r\n        <div className={classes.Button}\r\n          style={{ backgroundColor: 'red' }}\r\n          onClick={() => {\r\n            audioCtx.suspend()\r\n          }}\r\n        >stop ctx</div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MrTesterr","import { createUseStyles } from 'react-jss'\r\nimport { colors } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  Button: {\r\n    backgroundColor: colors.defaultButton,\r\n    borderColor: 'transparent',\r\n    borderRadius: '1vmin',\r\n    borderStyle: 'solid',\r\n    '&:active': {\r\n      borderColor: 'transparent',\r\n    },\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      borderColor: 'white',\r\n    },\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '1vmin',\r\n    margin: '1vmin',\r\n    textAlign: 'center',\r\n  },\r\n})\r\n\r\nexport default useJSS","import React from 'react'\r\nimport useJSS from './style'\r\nimport CSS from 'csstype'\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n  style?: CSS.Properties\r\n}\r\n\r\nfunction Button({ onClick, children, style }: Props) {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.Button}\r\n      onClick={onClick}\r\n      style={style}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\r\n\r\nexport interface OscillatorModule extends BaseAM {\r\n  audioNode: OscillatorNode\r\n  typeTypes: string[]\r\n}\r\n\r\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\r\n\r\nfunction makeOscillator(): OscillatorModule {\r\n  const oscillator = audioCtx.createOscillator()\r\n   \r\n  const connectingParamIDs = ['frequency', 'detune']\r\n\r\n  const controlData: ControlData = {\r\n    'set type': {\r\n      controlType: TYPE,\r\n      paramID: 'type',\r\n    },\r\n    'set frequency': {\r\n      controlType: VALUE,\r\n      paramID: 'frequency',\r\n      value: oscillator.frequency.value,\r\n      range: [0, 20000, 1]\r\n    },\r\n    'set detune': {\r\n      controlType: VALUE,\r\n      paramID: 'detune'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\r\n    'set frequency': (newFrequency: string) => {\r\n      controlData['set frequency'].value = Number(newFrequency)\r\n      oscillator.frequency.value = Number(newFrequency)\r\n    },\r\n    'set detune': (newDetune: string) => { oscillator.detune.value = Number(newDetune) },\r\n    'kill': (arg = '') => { oscillator.stop() }\r\n  }\r\n\r\n  oscillator.start()\r\n  \r\n  return { \r\n    audioNode: oscillator,\r\n    typeTypes: oscillatorTypes,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeOscillator","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface GainModule extends BaseAM {\r\n  audioNode: GainNode\r\n}\r\n\r\nfunction makeGain(gainAmount = 0): GainModule {\r\n  const gain = audioCtx.createGain()\r\n  gain.gain.value = gainAmount\r\n\r\n  const connectingParamIDs = ['gain']\r\n\r\n  const controlData: ControlData = {\r\n    'set gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain',\r\n      value: 0,\r\n      range: [-10000, 10000, 1]\r\n    },\r\n    'set fine gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain',\r\n      value: 0,\r\n      range: [-1, 1, .01]\r\n    }\r\n  }\r\n\r\n  function updateGain() {\r\n    gain.gain.value = (controlData['set gain'].value as number) + (controlData['set fine gain'].value as number)\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set gain': (newGain: string) => {\r\n      controlData['set gain'].value = Number(newGain)\r\n      updateGain()\r\n    },\r\n    'set fine gain': (newFineGain: string) => {\r\n      controlData['set fine gain'].value = Number(newFineGain)\r\n      updateGain()\r\n    },\r\n  }\r\n  \r\n  return {\r\n    audioNode: gain,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeGain","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\r\n\r\nexport interface OutputModule extends BaseAM {\r\n  audioNode: GainNode\r\n}\r\n\r\nfunction makeOutput(): OutputModule {\r\n  audioCtx.resume()\r\n\r\n  const masterGain = audioCtx.createGain(); masterGain.connect(audioCtx.destination)\r\n\r\n  const controlData: ControlData = {\r\n    'set master gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain',\r\n      value: 1,\r\n      range: [0, 5, .1],\r\n    },\r\n    'resume': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a'\r\n    },\r\n    'suspend': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs = {\r\n    'set master gain': (arg: string) => {\r\n      controlData['set master gain'].value = Number(arg)\r\n      masterGain.gain.value = Number(arg)\r\n    },\r\n    'resume': (arg: string) => { audioCtx.resume() },\r\n    'suspend': (arg: string) => { audioCtx.suspend() }\r\n  }\r\n\r\n  return { \r\n    audioNode: masterGain,\r\n    connectingParamIDs: [],\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeOutput","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\r\n\r\nexport interface AutoFilterModule extends BaseAM {\r\n  audioNode: BiquadFilterNode\r\n  typeTypes: string[]\r\n}\r\n\r\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\r\n\r\nfunction makeAutoFilter (): AutoFilterModule {\r\n  const autoFilter = audioCtx.createBiquadFilter()\r\n\r\n  const connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\r\n\r\n  const controlData: ControlData = {\r\n    'set type': {\r\n      controlType: TYPE,\r\n      paramID: 'type',\r\n    },\r\n    'set frequency': {\r\n      controlType: VALUE,\r\n      paramID: 'frequency'\r\n    },\r\n    'set detune': {\r\n      controlType: VALUE,\r\n      paramID: 'detune'\r\n    },\r\n    'set Q': {\r\n      controlType: VALUE,\r\n      paramID: 'Q'\r\n    },\r\n    'set gain': {\r\n      controlType: VALUE,\r\n      paramID: 'gain'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\r\n    'set frequency': (newFrequency: string) => { autoFilter.frequency.value = Number(newFrequency) },\r\n    'set detune': (newDetune: string) => { autoFilter.detune.value = Number(newDetune) },\r\n    'set Q': (newQ: string) => { autoFilter.Q.value = Number(newQ) },\r\n    'set gain': (newGain: string) => { autoFilter.gain.value = Number(newGain) },\r\n  }\r\n\r\n  return {\r\n    audioNode: autoFilter,\r\n    typeTypes: filterTypes,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }  \r\n}\r\n\r\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface KompressorModule extends BaseAM {\r\n  audioNode: DynamicsCompressorNode\r\n}\r\n\r\nfunction makeKompressor(): KompressorModule {\r\n  const kompressor = audioCtx.createDynamicsCompressor()\r\n\r\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\r\n\r\n  const controlData: ControlData = {\r\n    'set threshold': {\r\n      controlType: VALUE,\r\n      paramID: 'threshold',\r\n    },\r\n    'set knee': {\r\n      controlType: VALUE,\r\n      paramID: 'knee'\r\n    },\r\n    'set ratio': {\r\n      controlType: VALUE,\r\n      paramID: 'ratio'\r\n    },\r\n    'set attack': {\r\n      controlType: VALUE,\r\n      paramID: 'attack'\r\n    },\r\n    'set release': {\r\n      controlType: VALUE,\r\n      paramID: 'release'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set threshold': (newThreshold: string) => { kompressor.threshold.value = Number(newThreshold) },\r\n    'set knee': (newKnee: string) => { kompressor.knee.value = Number(newKnee) },\r\n    'set ratio': (newRatio: string) => { kompressor.ratio.value = Number(newRatio) },\r\n    'set attack': (newAttack: string) => { kompressor.attack.value = Number(newAttack)},\r\n    'set release': (newRelease: string) => { kompressor.release.value = Number(newRelease) },\r\n  }\r\n\r\n  return {\r\n    audioNode: kompressor,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeKompressor","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\r\n\r\nexport interface StereoPannerModule extends BaseAM {\r\n  audioNode: StereoPannerNode\r\n}\r\n\r\nfunction makeStereoPanner(): StereoPannerModule {\r\n  const stereoPanner = audioCtx.createStereoPanner()\r\n\r\n  const connectingParamIDs = ['pan']\r\n\r\n  const controlData: ControlData = {\r\n    'set pan': {\r\n      controlType: VALUE,\r\n      paramID: 'pan'\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set pan': (newPan: string) => {stereoPanner.pan.value = Number(newPan)}\r\n  }\r\n\r\n  return {\r\n    audioNode: stereoPanner,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n\r\n}\r\n\r\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\r\n\r\nexport interface SignalDelayModule extends BaseAM {\r\n  audioNode: DelayNode\r\n}\r\n\r\nfunction makeSignalDelay(): SignalDelayModule {\r\n  const signalDelay = audioCtx.createDelay()\r\n\r\n  const connectingParamIDs = ['delayTime']\r\n\r\n  const controlData: ControlData = {\r\n    'set delay time': {\r\n      controlType: VALUE,\r\n      paramID: 'delayTime',\r\n      value: signalDelay.delayTime.value,\r\n      range: [0, 1, .01]\r\n    }\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = { \r\n    'set delay time': (newDelayTime: string) => {\r\n      controlData['set delay time'].value = Number(newDelayTime)\r\n      signalDelay.delayTime.value = Number(newDelayTime)\r\n    }\r\n  }\r\n\r\n  return {\r\n    audioNode: signalDelay,\r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE, BUTTON } from '../moduleTypes'\r\n\r\nexport interface ConstantModule extends BaseAM {\r\n  audioNode: ConstantSourceNode\r\n  typeTypes: string[]\r\n}\r\n\r\ninterface SetValFuncs {\r\n  [index: string]: (arg: string) => void\r\n}\r\n\r\nconst constantSourceTypes = ['no ramp', 'linear', 'exponential']\r\n\r\nfunction makeConstantSource(): ConstantModule {\r\n  const constantSource = audioCtx.createConstantSource()\r\n  constantSource.offset.value = 0\r\n\r\n  const connectingParamIDs = ['offset']\r\n\r\n  const controlData: ControlData = {\r\n    'set value': {\r\n      controlType: VALUE,\r\n      paramID: 'offset',\r\n      value: 0,\r\n    },\r\n    'set ramp': {\r\n      controlType: TYPE,\r\n      paramID: 'n/a',\r\n      value: 'no ramp',\r\n    },\r\n    'set ramp length': {\r\n      controlType: VALUE,\r\n      paramID: 'n/a',\r\n      value: 1,\r\n      range: [0, 10000, 0.01],\r\n    },\r\n    'kill': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a',\r\n    }\r\n  }\r\n\r\n  const setValFuncs: SetValFuncs = {\r\n    'no ramp': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.value = Number(newValue) \r\n    },\r\n    'linear': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.linearRampToValueAtTime(Number(newValue), audioCtx.currentTime + (controlData['set ramp length'].value as number))},\r\n    'exponential': (newValue: string) => {\r\n      controlData['set value'].value = Number(newValue)\r\n      constantSource.offset.exponentialRampToValueAtTime(Number(newValue), audioCtx.currentTime + (controlData['set ramp length'].value as number))}\r\n  }\r\n\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'set value': (newValue: string) => { setValFuncs[controlData['set ramp'].value as string](newValue) },\r\n    'set ramp': (newType: string) => { controlData['set ramp'].value = newType },\r\n    'set ramp length': (newValue: string) => { controlData['set ramp length'].value = Number(newValue) },\r\n    'kill': (arg = '') => { constantSource.stop() }\r\n  }\r\n\r\n  constantSource.start()\r\n\r\n  return {\r\n    audioNode: constantSource, \r\n    connectingParamIDs,\r\n    controlData,\r\n    controlSetFuncs,\r\n    typeTypes: constantSourceTypes,\r\n  }\r\n\r\n}\r\n\r\nexport default makeConstantSource","import audioCtx from \"../../audioCtx\"\r\nimport { RefObject } from 'react'\r\nimport { BaseAM, ControlData, ControlSetFuncs, FILE } from \"../moduleTypes\"\r\n\r\nexport interface MediaElementModule extends BaseAM {\r\n  audioNode: MediaElementAudioSourceNode\r\n  ref: RefObject<HTMLAudioElement>\r\n}\r\n\r\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\r\n  if (audioRef.current) {\r\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\r\n\r\n    const controlData: ControlData = {\r\n      'set file': {\r\n        controlType: FILE,\r\n        paramID: 'n/a'\r\n      }\r\n    }\r\n\r\n    const controlSetFuncs: ControlSetFuncs = {\r\n      'set file': (url: string) => {\r\n        (audioRef.current as HTMLAudioElement).src = url\r\n      }\r\n    }\r\n\r\n    return {\r\n      audioNode: mediaElement,\r\n      ref: audioRef,\r\n      connectingParamIDs: [],\r\n      controlData,\r\n      controlSetFuncs,\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeMediaElement","import audioCtx from '../../audioCtx'\r\nimport { BaseAM, INFO, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\r\n\r\nexport interface LineInputModule extends BaseAM {\r\n  audioNode: ChannelSplitterNode\r\n}\r\n\r\nfunction makeLineInput(id: string) {\r\n  navigator.mediaDevices.getUserMedia({\r\n    audio: {\r\n      echoCancellation: false,\r\n      autoGainControl: false,\r\n      noiseSuppression: false,\r\n      latency: 0,\r\n    }\r\n  }).then(stream => {\r\n    const lineInput = audioCtx.createMediaStreamSource(stream)\r\n    const channelSplitter = audioCtx.createChannelSplitter(2)\r\n    lineInput.connect(channelSplitter)\r\n\r\n    const controlData: ControlData = {\r\n      'number of channels: ': {\r\n        controlType: INFO,\r\n        paramID: 'n/a',\r\n        value: 0,\r\n      },\r\n      'mute': {\r\n        controlType: SWITCH,\r\n        paramID: 'n/a',\r\n        value: false,\r\n      }\r\n    }\r\n\r\n    const controlSetFuncs: ControlSetFuncs = {\r\n      'number of channels: ': (arg: string) => {\r\n        controlData['number of channels: '].value = lineInput.channelCount\r\n      },\r\n      'mute': (arg: string) => {\r\n        const isMuted = arg === 'true'\r\n        controlData['mute'].value = isMuted\r\n        stream.getAudioTracks()[0].enabled = isMuted\r\n      }\r\n    }\r\n\r\n    const lineInputModule: LineInputModule = {\r\n      audioNode: channelSplitter,\r\n      connectingParamIDs: [],\r\n      controlData,\r\n      controlSetFuncs,\r\n    }\r\n\r\n    window.audioModules = {\r\n      ...window.audioModules,\r\n      [id]: lineInputModule\r\n    }\r\n  })\r\n}\r\n\r\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs, BUTTON } from \"../moduleTypes\"\r\n\r\nexport interface ContainerModule extends BaseAM {\r\n  inputModuleID?: string\r\n  outputModuleID?: string\r\n}\r\n\r\nfunction makeContainer(id: string): ContainerModule {\r\n  const controlData: ControlData = {\r\n    'open': {\r\n      controlType: BUTTON,\r\n      paramID: 'n/a',\r\n    }\r\n  }\r\n  const controlSetFuncs: ControlSetFuncs = {\r\n    'open': () => {\r\n      window.fillContainerID = id\r\n      window.reRenderFillContainer()\r\n      window.highlightedID = ''\r\n      window.setLeftDrawerOpen(false)\r\n    }\r\n  }\r\n  return {\r\n    connectingParamIDs: [],\r\n    controlData,\r\n    controlSetFuncs,\r\n  }\r\n}\r\n\r\nexport default makeContainer","import React, { useRef, useEffect } from 'react'\r\nimport { makeMediaElement } from '../../audioModules/all'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\n\r\nfunction AudioTag({ id }: Props) {\r\n  const audioRef = useRef<HTMLAudioElement>(null)\r\n  useEffect(() => {\r\n    if (!window.audioModules[id]) {\r\n      const possiblyMediaElement = makeMediaElement(audioRef)\r\n      if (possiblyMediaElement) {\r\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <audio\r\n      ref={audioRef}\r\n      autoPlay\r\n    />\r\n  )\r\n}\r\n\r\nexport default AudioTag","import React, { Fragment, useState } from 'react'\r\nimport AudioTag from './AudioTag'\r\n\r\ninterface AudioTag {\r\n  id: string\r\n  srcName: string\r\n  ref?: React.RefObject<HTMLAudioElement>\r\n}\r\n\r\ninterface AudioTags {\r\n  [id: string]: AudioTag\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    audioTags: AudioTags\r\n    addAudioTag: (id: string) => void\r\n    reRenderAudioTags: () => void\r\n  }\r\n}\r\n\r\nwindow.addAudioTag = (id: string) => {\r\n  window.audioTags[id] = {\r\n    id: id,\r\n    srcName: ''\r\n  }\r\n}\r\n\r\nwindow.audioTags = {}\r\n\r\nfunction AudioTags() {\r\n  const [reRender, toReRender] = useState(false)\r\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\r\n  const ids = Object.keys(window.audioTags)\r\n  return (\r\n    <Fragment>\r\n      {ids.map((id) => {\r\n        return (\r\n          <AudioTag\r\n            key={id}\r\n            id={id}\r\n          />\r\n        )\r\n      })}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AudioTags","import {createUseStyles} from 'react-jss'\r\n\r\nconst useJSS = createUseStyles({\r\n  Bounder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    borderRadius: '15px',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    userSelect: 'none',\r\n    margin: '10px',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    },\r\n  },\r\n\r\n  Switch: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    justifySelf: 'flex-end',\r\n    borderRadius: '15px',\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    userSelect: 'none',\r\n    margin: '10px',\r\n  },\r\n})\r\n\r\nexport default useJSS;","import React, { useState } from 'react'\r\nimport useJSS from './style'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { colors } from '../../theme/theme'\r\n\r\n\r\ninterface Props {\r\n  text: string,\r\n  onSwitch: (newState: boolean) => void,\r\n  initState: boolean,\r\n  style?: object,\r\n}\r\n\r\nfunction Switch({ text, onSwitch, initState, style }: Props) {\r\n  const [state, setState] = useState(initState)\r\n  const classes = useJSS()\r\n  const spring = useSpring({\r\n    cx: state ? '65' : '25',\r\n    fill: state ? 'green' : 'red',\r\n    config: {\r\n      tension: 250,\r\n    },\r\n  })\r\n  return (\r\n    <div className={classes.Bounder} style={style}>\r\n      {text}\r\n      <svg onClick={() => { onSwitch(!state); setState(!state) }} width={'90'} height={'30'}>\r\n        <rect width='50' height='20' x='20' y='5' rx='10' ry='10' fill={colors.grey}/>\r\n        <animated.circle cx={spring.cx} cy={'15'} r={'15'} fill={spring.fill}/>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Switch","import React, { Fragment, useState } from 'react'\r\nimport { CenterMenu, Button } from '../all'\r\nimport { connect } from '../../audioModules/connection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ConnectingAudioModule, CONTAINER } from '../../audioModules/moduleTypes'\r\nimport { addConnection } from '../../redux/allActions'\r\nimport CSS from 'csstype'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\n\r\ninterface Props {\r\n  fromID: string\r\n  toID: string\r\n  onClose: () => void\r\n}\r\n\r\nexport const CHOOSE_OUTPUT = 'CHOOSE_OUTPUT'\r\nexport const CHOOSE_CONTAINER_OUTPUT = 'CHOOSE_CONTAINER_OUTPUT'\r\nexport const CONNECT_TO = 'CONNECT_TO'\r\nexport const CHOOSE_PARAM = 'CHOOSE_PARAM'\r\nexport const CHOOSE_INPUT = 'CHOOSE_INPUT'\r\nexport const CHOOSE_CONTAINER_INPUT = 'CHOOSE_CONTAINER_INPUT' // todo\r\n\r\nconst buttonStyle: CSS.Properties = {\r\n  \r\n}\r\n\r\nfunction ConnectionMenu({ fromID, toID, onClose }: Props) {\r\n  const am = window.audioModules\r\n  const [outputIndex, setOutputIndex] = useState(0)\r\n  const [inputIndex, setInputIndex] = useState(0)\r\n  const [containerOutputIndex, setContainerOutputIndex] = useState(0)\r\n  const [containerInputIndex, setContainerInputIndex] = useState(0)\r\n  const dispatch = useDispatch()\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const fromMod = modules[fromID]\r\n  const toMod = modules[toID]\r\n  const initMenu = fromMod.connectionOutputs.length > 1 ? CHOOSE_OUTPUT :\r\n    toMod.connectionInputs.length > 1 ? CHOOSE_INPUT : CONNECT_TO\r\n  const [openMenu, setOpenMenu] = useState(initMenu)\r\n  const isFromContainer = fromMod.moduleType === CONTAINER\r\n  const isToContainer = toMod.moduleType === CONTAINER\r\n  return (\r\n    <Fragment>\r\n      {openMenu === CHOOSE_OUTPUT\r\n      ?\r\n      <CenterMenu header={'choose output'} onClose={onClose}>\r\n        {fromMod.connectionOutputs.map((outputID, index) => {\r\n          return (\r\n            <Button style={buttonStyle}\r\n              key={fromID + toID + outputID}\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                if (isFromContainer) {\r\n                  setContainerOutputIndex(index)\r\n                } else {\r\n                  setOutputIndex(index)\r\n                }\r\n                if (toMod.connectionInputs.length > 1) {\r\n                  setOpenMenu(CHOOSE_INPUT)\r\n                } else {\r\n                  setOpenMenu(CONNECT_TO)\r\n                }\r\n              }}\r\n            >{isFromContainer ? modules[outputID].name : outputID}</Button>\r\n          )\r\n        })}\r\n      </CenterMenu>\r\n      :\r\n      openMenu === CHOOSE_INPUT\r\n      ?\r\n      <CenterMenu header={'choose input'} onClose={onClose}>\r\n        {toMod.connectionInputs.map((inputID, index) => {\r\n          return (\r\n            <Button style={buttonStyle}\r\n              key={fromID + toID + inputID}\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                if (isToContainer) {\r\n                  setContainerInputIndex(index)\r\n                } else {\r\n                  setInputIndex(index)\r\n                }\r\n                setOpenMenu(CONNECT_TO)\r\n              }}\r\n            >{isToContainer ? modules[inputID].name : inputID}</Button>\r\n          )\r\n        })}\r\n      </CenterMenu>\r\n      :\r\n      openMenu === CONNECT_TO\r\n      ?\r\n      <CenterMenu header={`connect ${isFromContainer ? fromMod.name + ' - ' + modules[fromMod.connectionOutputs[outputIndex]].name : fromMod.name} to ${isToContainer ? toMod.name + ' - ' + modules[toMod.connectionInputs[inputIndex]].name : toMod.name}`} onClose={onClose}>\r\n        {(isToContainer ? modules[toMod.connectionInputs[inputIndex]].connectionInputs.length === 0 : toMod.connectionInputs.length === 0) ? null :\r\n        <Button style={buttonStyle}\r\n          onClick={() => {\r\n            connect(\r\n              (isFromContainer ? am[fromMod.connectionOutputs[containerOutputIndex]] : am[fromMod.id]) as ConnectingAudioModule, \r\n              (isToContainer ? am[toMod.connectionInputs[containerInputIndex]] : am[toMod.id]) as ConnectingAudioModule,\r\n              '',\r\n              outputIndex,\r\n              inputIndex,\r\n            )\r\n            dispatch(addConnection(\r\n              fromID, \r\n              toID, \r\n              '', \r\n              outputIndex, \r\n              inputIndex, \r\n              isFromContainer ? fromMod.connectionOutputs[containerOutputIndex] : undefined, \r\n              isToContainer ? toMod.connectionInputs[containerInputIndex] : undefined,\r\n            ))\r\n            onClose()\r\n          }}\r\n        >module</Button>}\r\n        {\r\n        !isToContainer ? (am[toID].connectingParamIDs.length === 0 ? null :\r\n        <Button style={buttonStyle}\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            setOpenMenu(CHOOSE_PARAM)\r\n          }}\r\n        >params</Button>)\r\n        :\r\n        am[toMod.connectionInputs[inputIndex]].connectingParamIDs.length === 0 ? null :\r\n        <Button style={buttonStyle}\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            setOpenMenu(CHOOSE_PARAM)\r\n          }}\r\n        >params</Button>\r\n        }\r\n      </CenterMenu>\r\n      :\r\n      openMenu === CHOOSE_PARAM\r\n      ?\r\n      <CenterMenu header={'props'} onClose={onClose}>\r\n        {(isToContainer ? am[toMod.connectionInputs[containerInputIndex]] : am[toID]).connectingParamIDs.map((paramID, key) => {\r\n          return (\r\n            <Button style={buttonStyle}\r\n              key={fromID + toID + key}\r\n              onClick={() => {\r\n                connect(\r\n                  (isFromContainer ? am[fromMod.connectionOutputs[containerOutputIndex]] : am[fromMod.id]) as ConnectingAudioModule,\r\n                  (isToContainer ? am[toMod.connectionInputs[containerInputIndex]] : am[toMod.id]) as ConnectingAudioModule,\r\n                  paramID,\r\n                  outputIndex,\r\n                  inputIndex,\r\n                )\r\n                dispatch(addConnection(\r\n                  fromID,\r\n                  toID,\r\n                  paramID,\r\n                  outputIndex,\r\n                  inputIndex,\r\n                  isFromContainer ? fromMod.connectionOutputs[containerOutputIndex] : undefined,\r\n                  isToContainer ? toMod.connectionInputs[containerInputIndex] : undefined,\r\n                ))\r\n                onClose()\r\n              }}\r\n            >{paramID}</Button>\r\n          )\r\n        })}\r\n      </CenterMenu>\r\n      :\r\n      null\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\r\nimport { colors, sizes } from '../../theme/theme'\r\n\r\nconst useJSS = createUseStyles({\r\n  CMInputBounder: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n\r\n  CenterMenuInput: {\r\n    backgroundColor: colors.grey,\r\n    color: 'white',\r\n    height: '2vmin',\r\n    padding: '1vmin',\r\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\r\n    borderStyle: 'none',\r\n    borderRadius: '1vmin',\r\n    fontSize: sizes.text.small,\r\n    width: '23vmin',\r\n    '&:hover': {\r\n      cursor: 'text',\r\n    },\r\n  },\r\n\r\n  InputSubmit: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: colors.grey,\r\n    height: '2vmin',\r\n    padding: '1vmin',\r\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\r\n    borderRadius: '1vmin',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    fontSize: sizes.text.small,\r\n  },\r\n\r\n  Error: {\r\n    backgroundColor: colors.errorBackground,\r\n    width: '90%',\r\n    color: 'white',\r\n    fontSize: sizes.text.small,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '1vmin',\r\n    padding: '1vmin 0vmin',\r\n    marginBottom: '1vmin',\r\n  },\r\n})\r\n\r\nexport default useJSS","import React, { useRef, useState } from 'react'\r\nimport { CenterMenu } from '../all'\r\nimport useJSS from './style'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/stateTSTypes'\r\nimport { renameModule } from '../../redux/allActions'\r\n\r\n\r\ninterface Props {\r\n  setRMOpen: (bool: boolean) => void\r\n}\r\n\r\nfunction RenameMenu({ setRMOpen }: Props) {\r\n  const classes = useJSS()\r\n  const renameInputRef = useRef<HTMLInputElement>(null)\r\n  const modules = useSelector((state: RootState) => state.modules)\r\n  const dispatch = useDispatch()\r\n  const [ isTooShort, setSubmitState] = useState(false)\r\n  function submitNewName() {\r\n    if (renameInputRef && renameInputRef.current) {\r\n      const newName = renameInputRef.current.value\r\n      if (newName.length === 0) {\r\n        setSubmitState(true)\r\n      } else {\r\n        dispatch(renameModule(window.highlightedID, newName))\r\n        window.reRenderLeftDrawer()\r\n        setRMOpen(false)\r\n      } \r\n    }\r\n  }\r\n  return (\r\n    <CenterMenu header='rename' onClose={() => {setRMOpen(false)}}>\r\n        <div className={classes.CMInputBounder}>\r\n          <input className={classes.CenterMenuInput}\r\n            placeholder={modules[window.highlightedID].name}\r\n            onKeyUp={event => {\r\n              if (event.keyCode === 13) {\r\n                submitNewName()\r\n              } else if (event.keyCode === 27) {\r\n                setRMOpen(false)\r\n              }\r\n            }}\r\n            ref={renameInputRef}\r\n            autoFocus\r\n          />\r\n          <div className={classes.InputSubmit}\r\n            onClick={() => {submitNewName()}}\r\n          >enter</div>\r\n        </div>\r\n        {!isTooShort ? null :\r\n        <div className={classes.Error}>\r\n          please enter a name\r\n        </div>}\r\n      </CenterMenu>\r\n  )\r\n}\r\n\r\nexport default RenameMenu","import { \r\n  ModuleType, \r\n  OSCILLATOR, \r\n  OUTPUT, GAIN, \r\n  AUTOFILTER, \r\n  KOMPRESSOR, \r\n  STEREO_PANNER, \r\n  SIGNAL_DELAY, \r\n  CONSTANT, \r\n  MEDIA_ELEMENT, \r\n  LINE_IN,\r\n  CONTAINER,\r\n} from './moduleTypes'\r\nimport { \r\n  makeOscillator, \r\n  makeOutput, makeGain, \r\n  makeAutoFilter, \r\n  makeKompressor, \r\n  makeStereoPanner, \r\n  makeSignalDelay, \r\n  makeConstantSource, \r\n  makeLineInput,\r\n  makeContainer\r\n} from './all'\r\nimport { Dispatch } from 'redux'\r\nimport { addModule } from '../redux/allActions'\r\n\r\nfunction makeAddModule() {\r\n  return function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\r\n    switch(moduleType) {\r\n      case OSCILLATOR: window.audioModules = { ...window.audioModules, [id]: makeOscillator() }; dispatch(addModule(id, name, moduleType, parentID, row, col, [], ['0'])); break\r\n      case GAIN: window.audioModules = { ...window.audioModules, [id]: makeGain() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], ['0'])); break\r\n      case OUTPUT: window.audioModules = { ...window.audioModules, [id]: makeOutput() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], [])); break\r\n      case AUTOFILTER: window.audioModules = { ...window.audioModules, [id]: makeAutoFilter() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], ['0'])); break\r\n      case KOMPRESSOR: window.audioModules = { ...window.audioModules, [id]: makeKompressor() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], ['0'])); break\r\n      case STEREO_PANNER: window.audioModules = { ...window.audioModules, [id]: makeStereoPanner() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], ['0'])); break\r\n      case SIGNAL_DELAY: window.audioModules = { ...window.audioModules, [id]: makeSignalDelay() }; dispatch(addModule(id, name, moduleType, parentID, row, col, ['0'], ['0'])); break\r\n      case CONSTANT: window.audioModules = { ...window.audioModules, [id]: makeConstantSource() }; dispatch(addModule(id, name, moduleType, parentID, row, col, [], ['0'])); break\r\n      case MEDIA_ELEMENT: window.addAudioTag(id); window.reRenderAudioTags(); dispatch(addModule(id, name, moduleType, parentID, row, col, [], ['0'])); break\r\n      case LINE_IN: makeLineInput(id); dispatch(addModule(id, name, moduleType, parentID, row, col, [], ['0 (L)', '1 (R)'])); break\r\n      case CONTAINER: window.audioModules = { ...window.audioModules, [id]: makeContainer(id) }; dispatch(addModule(id, name, moduleType, parentID, row, col, [], [])); break\r\n    }\r\n  }\r\n}\r\n\r\nexport default makeAddModule","import React from 'react'\r\nimport useJSS from './style'\r\nimport { RightDrawer, LeftDrawer, ModuleViewFill, AudioTags } from '../components/all'\r\nimport { AudioModules, ModuleType } from '../audioModules/moduleTypes'\r\nimport makeAddModule from '../audioModules/makeAddModule'\r\nimport { Dispatch } from 'redux'\r\n\r\ndeclare global {\r\n  interface Window { \r\n    highlightedID: string\r\n    fillContainerID: string\r\n    linkToOutputID: string\r\n    audioModules: AudioModules\r\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\r\n  }\r\n\r\n  interface AudioNode {\r\n    [index: string]: AudioParam\r\n  }\r\n}\r\n\r\nwindow.highlightedID = 'project' // make this '', for dev\r\nwindow.fillContainerID = 'project'\r\nwindow.linkToOutputID = ''\r\n\r\nwindow.audioModules = {}\r\nwindow.addModule = makeAddModule()\r\n\r\nfunction App() {\r\n  const classes = useJSS()\r\n  return (\r\n    <div className={classes.Bounder}>\r\n      <LeftDrawer />\r\n      <div className={classes.ModuleViewBounder}>\r\n        <ModuleViewFill />\r\n      </div>\r\n      <RightDrawer />\r\n      <AudioTags />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Modules, ContainerModule } from '../../stateTSTypes'\r\nimport { AddModuleAction } from '../moduleTSTypes'\r\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\r\n\r\nconst addModule = (state: Modules, { id, name, moduleType, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction) => {\r\n  switch(moduleType) {\r\n    case CONTAINER: return Object.assign({}, state, {\r\n      [id]: {\r\n        id,\r\n        name,\r\n        row,\r\n        col,\r\n        parentID,\r\n        moduleType,\r\n        connectionInputs,\r\n        connectionOutputs,\r\n        inputs: [],\r\n        outputs: [],\r\n        childModules: [],\r\n        isBaseContainer: false,\r\n        isContainerInput: false,\r\n        isContainerOutput: false,\r\n      },\r\n      [parentID]: {\r\n        ...state[parentID],\r\n        childModules: [\r\n          ...(state[parentID] as ContainerModule).childModules,\r\n          id\r\n        ]\r\n      }\r\n    })\r\n    default: return Object.assign({}, state, {\r\n      [id]: {\r\n        id,\r\n        name,\r\n        row,\r\n        col,\r\n        parentID,\r\n        moduleType,\r\n        connectionInputs,\r\n        connectionOutputs,\r\n        isContainerInput: false,\r\n        isContainerOutput: false,\r\n        inputs: [],\r\n        outputs: [],\r\n      },\r\n      [parentID]: {\r\n        ...state[parentID],\r\n        childModules: [\r\n          ...(state[parentID] as ContainerModule).childModules,\r\n          id\r\n        ]\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default addModule","import { Modules, ContainerModule } from \"../../stateTSTypes\"\r\nimport { RemoveModuleAction } from \"../moduleTSTypes\"\r\n\r\nconst removeModule = (state: Modules, { id }: RemoveModuleAction) => {\r\n  const parentID = state[id].parentID as string\r\n  const trimmedState = Object.fromEntries(Object.entries(state).filter(entry => entry[0] !== id))\r\n  return Object.assign({}, trimmedState, Object.fromEntries(Object.entries(trimmedState).map(entry => {\r\n    return [entry[0], { \r\n        ...entry[1],\r\n        inputs: entry[1].inputs.filter(inputData => inputData.connectedID !== id),\r\n        outputs: entry[1].outputs.filter(outputData => outputData.connectedID !== id)\r\n      }]\r\n    })), {\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      childModules: (state[parentID] as ContainerModule).childModules.filter(childID => childID !== id)\r\n    }\r\n  },)\r\n}\r\n\r\nexport default removeModule","import { Modules } from \"../../stateTSTypes\";\r\nimport { MoveModuleAction } from \"../moduleTSTypes\";\r\n\r\nconst moveModuleAction = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      row: newRow,\r\n      col: newCol,\r\n    }\r\n  })\r\n}\r\n\r\nexport default moveModuleAction","import { Modules } from \"../../stateTSTypes\"\r\nimport { RenameModuleAction } from \"../moduleTSTypes\"\r\n\r\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      name: newName\r\n    },\r\n  })\r\n}\r\n\r\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\r\nimport { AddConnectionAction } from \"../moduleTSTypes\"\r\n\r\nfunction getConnectionID(fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID = '', containerInputChildID = '') {\r\n  return fromID + toID + param + outputIndex + inputIndex + containerOutputChildID + containerInputChildID\r\n}\r\n\r\nconst addConnection = (state: Modules, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction) => {\r\n  const connectionID = getConnectionID(fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID)\r\n  return Object.assign({}, state, {\r\n    [toID]: {\r\n      ...state[toID],\r\n      inputs: [\r\n        ...state[toID].inputs,\r\n        {\r\n          connectionID,\r\n          connectedID: fromID,\r\n          param,\r\n          outputIndex,\r\n          inputIndex,\r\n          containerOutputChildID,\r\n          containerInputChildID,\r\n        },\r\n      ],\r\n    },\r\n    [fromID]: {\r\n      ...state[fromID],\r\n      outputs: [\r\n        ...state[fromID].outputs,\r\n        {\r\n          connectionID,\r\n          connectedID: toID,\r\n          param,\r\n          outputIndex,\r\n          inputIndex,\r\n          containerOutputChildID,\r\n          containerInputChildID,\r\n        },\r\n      ],\r\n    }\r\n  })\r\n}\r\n\r\nexport default addConnection","import { Modules } from \"../../stateTSTypes\";\r\nimport { RemoveConnectionAction } from \"../moduleTSTypes\";\r\n\r\nconst removeConnection = (state: Modules, { fromID, toID, connectionID }: RemoveConnectionAction) => {\r\n  return Object.assign({}, state, {\r\n    [toID]: {\r\n      ...state[toID],\r\n      inputs: state[toID].inputs.filter(inputData => inputData.connectionID !== connectionID)\r\n    },\r\n    [fromID]: {\r\n      ...state[fromID],\r\n      outputs: state[fromID].outputs.filter(outputData => outputData.connectionID !== connectionID)\r\n    },\r\n  })\r\n}\r\n\r\nexport default removeConnection","import { Modules } from \"../../stateTSTypes\";\r\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\r\n\r\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\r\n  const parentID = state[id].parentID as string\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      isContainerInput: true,\r\n    },\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\r\n    }\r\n  })\r\n}\r\n\r\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\r\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\r\n\r\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\r\n  const parentID = state[id].parentID as string\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      isContainerInput: false,\r\n    },\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\r\n    }\r\n  })\r\n}\r\n\r\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\r\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\r\n\r\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\r\n  const parentID = state[id].parentID as string\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      isContainerOutput: true,\r\n    },\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\r\n    }\r\n  })\r\n}\r\n\r\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\r\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\r\n\r\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\r\n  const parentID = state[id].parentID as string\r\n  return Object.assign({}, state, {\r\n    [id]: {\r\n      ...state[id],\r\n      isContainerInput: false,\r\n    },\r\n    [parentID]: {\r\n      ...state[parentID],\r\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\r\n    }\r\n  })\r\n}\r\n\r\nexport default unmarkContainerOutput","import { ContainerModule, Modules } from \"../stateTSTypes\"\r\nimport { \r\n  ADD_MODULE,\r\n  REMOVE_MODULE,\r\n  MOVE_MODULE, \r\n  RENAME_MODULE, \r\n  ADD_CONNECTION, \r\n  REMOVE_CONNECTION, \r\n  MARK_CONTAINER_INPUT,\r\n  UNMARK_CONTAINER_INPUT,\r\n  MARK_CONTAINER_OUTPUT,\r\n  UNMARK_CONTAINER_OUTPUT,\r\n} from './moduleActionTypes'\r\nimport { \r\n  ModuleAction, \r\n  AddModuleAction, \r\n  RemoveModuleAction, \r\n  MoveModuleAction, \r\n  RenameModuleAction, \r\n  AddConnectionAction, \r\n  RemoveConnectionAction,\r\n  MarkContainerIOAction,\r\n} from './moduleTSTypes'\r\nimport { \r\n  removeModuleReducer, \r\n  addModuleReducer, \r\n  moveModuleReducer, \r\n  renameModuleReducer, \r\n  addConnectionReducer, \r\n  removeConnectionReducer,\r\n  markContainerInputReducer,\r\n  unmarkContainerInputReducer,\r\n  markContainerOutputReducer,\r\n  unmarkContainerOutputReducer,\r\n} from \"./reducers/allModuleReducers\"\r\nimport { CONTAINER } from \"../../audioModules/moduleTypes\"\r\n\r\nconst initBaseCM: ContainerModule = {\r\n  id: 'project',\r\n  name: 'project',\r\n  row: 0,\r\n  col: 0,\r\n  moduleType: CONTAINER,\r\n  connectionInputs: [],\r\n  connectionOutputs: [],\r\n  inputs: [],\r\n  outputs: [],\r\n  parentID: null,\r\n  childModules: [],\r\n  isBaseContainer: true,\r\n  isContainerInput: false,\r\n  isContainerOutput: false,\r\n}\r\n\r\nconst initState: Modules = {\r\n  'project': initBaseCM\r\n}\r\n\r\nconst moduleReducer = (state = initState, action: ModuleAction) => {\r\n  switch (action.type) {\r\n    case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\r\n    case REMOVE_MODULE: return removeModuleReducer(state, action as RemoveModuleAction)\r\n    case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\r\n    case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\r\n    case ADD_CONNECTION: return addConnectionReducer(state, action as AddConnectionAction)\r\n    case REMOVE_CONNECTION: return removeConnectionReducer(state, action as RemoveConnectionAction)\r\n    case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\r\n    case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\r\n    case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\r\n    case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\r\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\r\n\r\nconst bcidReducer = (state = 'project', action: BCIDAction) => {\r\n  switch (action.type) {\r\n    case DOWN_1_BASE: return action.newID\r\n    case CHANGE_BASE: return action.newID\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default bcidReducer","import { combineReducers } from 'redux'\r\nimport moduleReducer from './modules/moduleReducer'\r\nimport bcidReducer from './baseContainerID/bcidReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  modules: moduleReducer,\r\n  baseContainerID: bcidReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools())\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}