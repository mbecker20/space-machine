{"version":3,"sources":["theme/zIndex.ts","App/style.ts","audioModules/moduleTypes.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","redux/root/rootActions.ts","redux/root/rootActionTypes.ts","audioCtx.ts","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/modules/mediaElement.ts","audioModules/modules/distortion.ts","audioModules/modules/analyzer.ts","audioModules/modules/envelopedTrigger.ts","audioModules/modules/whiteNoise.ts","audioModules/modules/tuner.ts","audioModules/modules/visualizer.ts","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","App/configureSpaceDB.ts","App/setUserAgent.ts","theme/theme.ts","components/ContextMenus/ContextMenu/style.ts","components/Conditional/Conditional.tsx","components/ContextMenus/ContextMenu/ContextMenu.tsx","components/ContextMenus/ContextMenu/helpers.ts","components/Flex/style.ts","components/Flex/FlexRow.tsx","theme/moduleColor.ts","components/AutoPlacingGrid.tsx/style.ts","components/AutoPlacingGrid.tsx/AutoPlacingGrid.tsx","components/Flex/FlexCol.tsx","audioModules/connection.ts","components/ContextMenus/ConnectionMenu/helpers.ts","components/ContextMenus/ConnectionMenu/style.ts","components/ContextMenus/ConnectionMenu/InModule.tsx","components/ContextMenus/ConnectionMenu/ContainerInModule.tsx","components/ContextMenus/ConnectionMenu/OutModule.tsx","components/ContextMenus/ConnectionMenu/ContainerOutModule.tsx","components/ContextMenus/ConnectionMenu/ConnectionMenu.tsx","components/Button/style.ts","components/Button/Button.tsx","components/SVG/TrashSVG.tsx","components/ContextMenus/style.ts","components/ContextMenus/DeleteButton.tsx","components/ContextMenus/Module/ModuleDeleteButton.tsx","components/ContextMenus/Module/style.ts","helpers/genFuncs.ts","components/ContextMenus/ExtensionMenu/style.ts","components/ContextMenus/ExtensionMenu/ExtensionMenu.tsx","components/ContextMenus/ExtensionMenu/helpers.ts","components/ContextMenus/Module/InputOutputView.tsx","components/ContextMenus/Module/ContainerOpenButton.tsx","components/ContextMenus/Module/SpaceDBSaveButton.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/ContextMenus/Module/MarkContainerControls.tsx","components/ContextMenus/Module/MarkContainerIO.tsx","components/ContextMenus/Module/FileSaveButton.tsx","components/ContextMenus/Module/ModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Modules/ModuleDeleteButton.tsx","components/ContextMenus/SpaceDB/Modules/SDBModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Projects/ProjectDeleteButton.tsx","components/ContextMenus/SpaceDB/Projects/SDBProjectContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","components/ModuleView/style.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/Pad.tsx","components/Knob/helpers.ts","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Type.tsx","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/controls/Graph.tsx","components/BabylonCanvas/style.ts","components/BabylonCanvas/BabylonCanvas.tsx","redux/helpers.ts","helpers/notes.ts","components/LargeIcon/controls/Tuner/makeDial.ts","components/LargeIcon/controls/Tuner/Tuner.tsx","components/LargeIcon/controls/Visualizer/helpers.ts","components/LargeIcon/controls/Visualizer/Visualizer.tsx","components/LargeIcon/ControlMenu.tsx","components/LargeIcon/AllContainerControls.tsx","components/LargeIcon/ContainerControlMenu.tsx","components/DropSquare/style.ts","components/ModuleView/helpers.ts","redux/getContainerAsProject.ts","audioModules/restoreAudioModule.ts","audioModules/mergeExistingAM.ts","redux/idGen.ts","redux/replicateContainer.ts","redux/replicateModule.ts","components/DropSquare/callbacks.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/Icon.tsx","components/ModuleView/callbacks.ts","components/ModuleView/FillControls.tsx","components/hooks.ts","components/ModuleView/Fill.tsx","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/restoreAMFromState.ts","components/RightDrawer/SpaceDBMenu.tsx","components/RightDrawer/FileMenu/BlankProjectButton.tsx","helpers/fileAccess.ts","components/RightDrawer/FileMenu/OpenFileButton.tsx","components/RightDrawer/FileMenu/SaveAsNewButton.tsx","components/RightDrawer/FileMenu/SaveCurrentButton.tsx","components/RightDrawer/FileMenu/FileMenu.tsx","components/RightDrawer/RightDrawer.tsx","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/CenterMenu/style.ts","components/CenterMenus/CenterMenu/CenterMenu.tsx","components/CenterMenus/RangeSetMenu/KnobRangeSetMenu.tsx","components/CenterMenus/SaveMenu/style.ts","components/CenterMenus/SaveMenu/SpaceDBProjectSaveMenu.tsx","components/CenterMenus/ConfirmDeleteMenu/ConfirmDeleteMenu.tsx","components/CenterMenus/SaveMenu/helpers.ts","components/CenterMenus/SaveMenu/FileContainerSaveMenu.tsx","components/CenterMenus/SaveMenu/SpaceDBContainerSaveMenu.tsx","components/CenterMenus/RangeSetMenu/AnalyzerRangeSetMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RenameMenu/RenameModuleMenu.tsx","components/CenterMenus/RenameMenu/RenameControlMenu.tsx","components/CenterMenus/AddModuleMenu/style.ts","components/CenterMenus/AddModuleMenu/LeftBar.tsx","components/CenterMenus/AddModuleMenu/Icons/style.ts","components/CenterMenus/AddModuleMenu/Icons/base/ModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/base/ModuleIcons.tsx","components/CenterMenus/AddModuleMenu/Icons/base/moduleData.ts","components/CenterMenus/AddModuleMenu/Icons/spaceDB/SpaceDBModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/spaceDB/SpaceDBModules.tsx","components/CenterMenus/AddModuleMenu/Icons/file/FileModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/SearchIcons.tsx","components/CenterMenus/AddModuleMenu/Icons/file/FileModules.tsx","components/CenterMenus/AddModuleMenu/IconRouter.tsx","components/CenterMenus/AddModuleMenu/SearchBar.tsx","components/CenterMenus/AddModuleMenu/AddModuleMenu.tsx","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/renameContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/reducers/mergeContainer.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","components/RightDrawer/FileMenu/ConfirmBlankProject.tsx","components/CenterMenus/CenterMenus.tsx","components/Notification/makeData.ts","components/Notification/style.ts","components/Notification/Notification.tsx","App/App.tsx","serviceWorker.ts","redux/store.ts","index.tsx","icons/trash.svg","icons/settings.svg"],"names":["zIndex","useJSS","createUseStyles","Bounder","backgroundImage","backgroundPosition","width","height","display","fontSize","color","position","top","left","userSelect","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","CONTAINER","VALUE","addModule","id","name","moduleType","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","updateControlRange","newRange","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","mergeContainer","containerID","newModules","newConnections","restoreFromState","state","audioCtx","window","AudioContext","webkitAudioContext","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","value","controlSetFuncs","Number","stop","start","audioNode","connectingParamIDs","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","typeTypes","makeOutput","resume","masterGain","createGain","connect","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","audioModules","makeContainer","makeMediaElement","audioRef","current","url","src","pause","play","createMediaElementSource","ref","makeDistortionCurve","amount","x","k","curve","Float32Array","deg","Math","PI","i","abs","makeDistortion","distortion","createWaveShaper","newAmount","newOversample","floor","oversample","makeAnalyzer","analyzer","createAnalyser","fftSize","bufferLength","frequencyBinCount","timeArray","makeEnvelopedTrigger","constant","decay","sustain","val","currTime","currentTime","linearRampToValueAtTime","setTargetAtTime","cancelAndHoldAtTime","bufferSize","sampleRate","makeWhiteNoise","buffer","createBuffer","data","getChannelData","random","noise","createBufferSource","loop","downSample","freqArray","harmonic","over","map","num","getFreqFromIndex","index","makeTuner","pow","smoothingTimeConstant","getFloatFrequencyData","maxBin","maxdB","harmonicArray","numHarmonics","min","harmonicCopy","add","addHarmonics","makeVisualizer","makeAddModule","dispatch","osc","oscControlData","controlType","paramID","range","gainControlData","output","outputControlData","maxRange","filter","filterControlData","komp","kompControlData","panner","pannerControlData","delay","delayControlData","constantControlData","mediaControlData","addAudioTag","reRenderAudioTags","container","containerControlData","distortionControlData","analyzerControlData","envelopedTrigger","envelopedTriggerControlData","whiteNoise","whiteNoiseControlData","tuner","tunerControlData","visualizer","visualizerControlData","makePointerLayerData","isOpen","pointerId","onPointerMove","onPointerUp","PointerLayer","pointerLayerData","resetPointerLayerData","classes","pointerLayerRef","useRef","useEffect","className","e","configureSpaceDB","spaceDB","feathers","restClient","rest","configure","fetch","projectSaveService","service","containerSaveService","setUserAgent","userAgent","toLowerCase","indexOf","usingElectron","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","smallSize","smallBorderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","diameter","leftBarWidth","iconRouterWidth","ContextMenuBounder","backgroundColor","opacity","visibility","ContextMenu","maxHeight","padding","overflowY","MenuItem","borderStyle","borderColor","Conditional","children","showIf","onClose","bounderStyle","style","event","cmRef","innerHeight","pageY","offsetHeight","innerWidth","pageX","offsetWidth","onPointerDown","stopPropagation","FlexRow","flexWrap","FlexCol","getModuleColor","AutoPlacingGrid","gridTemplateRows","numRows","gridTemplateColumns","numCols","gridAutoFlow","direction","gridAutoRows","gridAutoColumns","gap","justifyItems","onDrop","onDragOver","fromMod","toMod","length","alert","disconnect","connectionExists","connections","actualToID","newOutputIndex","newInputIndex","newParam","outputs","actualInputID","testingID","executeConnection","actualFromID","modules","am","isFromContainer","isToContainer","undefined","flashNotification","Module","flexGrow","flexShrink","boxShadow","IconConnector","cursor","ConnectorBounder","Name","whiteSpace","marginBottom","ConnectorName","ParamName","ConnectionReciever","SmallConnectionReciever","InModule","startsBig","mod","useSelector","audioMod","useState","isBig","setBig","useDispatch","onClick","marginRight","input","key","preventDefault","dataTransfer","getData","ContainerInModule","isBase","modInputs","childrenStartBig","inputModID","OutModule","draggable","onDragStart","setData","toString","ContainerOutModule","modOutputs","outputModID","makeData","ConnectionMenu","openConnectionMenu","Button","notClickable","margin","textAlign","buttonRef","onKeyDown","onContextMenu","onPointerEnter","onPointerLeave","TrashSVG","alt","trashSVG","DeleteButtonBounder","DeleteButtonSVG","DeleteButton","ModuleDeleteButton","selectedModule","inputs","forEach","inputData","actualOutputID","outputData","Connection","MenuHeader","OpenButton","SaveButton","stringIn","str","ar","bothStringsIn","str1","str2","out","push","clamp","max","inRange","mapValBetweenRanges","fromRange","toRange","valProportion","toRangeDif","ExtensionMenu","maxWidth","text","setOpen","timeoutID","setTimeoutID","emRef","menuRef","buttonVertPos","getBoundingClientRect","CMHorizPos","parentElement","CMWidth","EMHeight","EMWidth","getEMLocation","clearTimeout","newID","setTimeout","InputOutputView","ContainerOpenButton","fillContainerID","reRenderFillContainer","SpaceDBSaveButton","find","containerSaves","openSpaceDBContainerSaveMenu","SwitchSVG","marginLeft","Text","fullWidth","fullHeight","rectWidth","rectHeight","rectX","circleCY","Switch","onSwitch","initState","isSwitched","setSwitched","spring","useSpring","cx","fill","config","tension","y","rx","ry","circle","cy","r","MarkContainerControls","open","containerControls","Object","keys","control","containerControl","markedToContainer","modName","isMarked","nowMarked","openControlRenameMenu","switchStyle","MarkContainerIO","baseContainerID","showingContainerInput","showingContainerOutput","isContainerInput","newState","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","FileSaveButton","openFileContainerSaveMenu","ModuleContextMenu","openModuleContextMenu","title","openModuleRenameMenu","saveName","remove","res","console","log","refreshSpaceDBModules","SDBModuleContextMenu","openSDBModuleContextMenu","ProjectDeleteButton","setSaveList","openConfirmDeleteMenu","saveNames","SDBProjectContextMenu","openSDBProjectContextMenu","ContextMenus","FillBounder","FillHeaderBounder","FillHeader","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","flexFlow","IconControlContainer","justifySelf","overflowX","ArcherElement","IconName","alignSelf","FillControls","ControlBounder","ControlMenu","ControlTypeSelect","ControlInput","Pad","SrcName","overflowWrap","wordWrap","hyphens","PadControl","setFunc","onPointerCancel","getRotation","makeValString","roundedNumString","slice","KnobContainer","placeItems","KnobSVG","gridRow","gridColumn","KnobText","InteractionLayer","SettingsButton","placeSelf","justClicked","StatelessKnob","initValue","onChange","onEveryChange","onSettingsClick","inputVal","setInputVal","svgRef","scale","tempVal","textRef","movementY","transform","stroke","strokeWidth","target","onBlur","newVal","blur","shiftKey","placeholder","focus","openPointerLayer","settingsSVG","ValueControl","displayModName","label","currRange","openKnobRangeSetMenu","marginTop","ButtonControl","Type","audioModule","htmlFor","File","reRenderIcon","file","files","URL","createObjectURL","audioTags","srcName","SwitchControl","Graph","yRange","zero","setWidth","setup","p5","canvasParentRef","createCanvas","clientWidth","parent","CENTER","draw","getFloatTimeDomainData","xStep","background","currX","currY","strokeWeight","nextX","nextY","line","zeroXStep","openAnalyzerRangeSetMenu","BabylonCanvas","onRender","onSceneReady","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","reactCanvas","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","getEngine","addEventListener","dispose","removeEventListener","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","keepOnlyIdsInObj","idsToKeep","ObjFrom2Arrays","notes","keysNoSharp","note","notesNoSharp","noteIndices","noteFreqRange","dialRange","makeTextPlane","textPlane","MeshBuilder","CreatePlane","sourcePlane","Plane","textMat","AdvancedDynamicTexture","CreateForMesh","textBlock","TextBlock","addControl","makeDial","dialMat","StandardMaterial","tickMat","diffuseColor","Color3","dial","CreateCylinder","tessellation","material","cullingStrategy","AbstractMesh","CULLINGSTRATEGY_OPTIMISTIC_INCLUSION","tickPos","tickNode","TransformNode","tick","CreateBox","depth","rotation","noteTextPlane","freqTextPlane","Tuner","frame","clearColor","Color4","FromHexString","ambientColor","camPos","Vector3","TargetCamera","setTarget","lightPos","light","PointLight","diffuse","specular","maxFreq","getMeshByName","makeSphereAndIndexCorrelator","subdivisisions","sphere","CreateSphere","segments","updatable","mat","subdivisions","positions","getVerticesData","VertexBuffer","PositionKind","indexCorrelator","azim","z","atan2","makeSphereIndexCorrelator","makeTargetForPoint","sphereIndexCorrelator","sourceArray","positionScale","multiply","Visualizer","originalPositions","targetArray","prevArray","getSphereTargetArray","rate","newPositionArray","updateVerticesData","stepSpherePosition","Value","AllContainerControls","reRender","ContainerControlMenu","DropSquare","onlyOneConnectionOption","onlyOneOutput","onlyOneInput","onlyOne","getChildrenRecursive","childIDs","childModules","containerChildIDs","getInternalConnectionIDs","trimmedIDs","allConnectionIDs","connectionIDs","getInternalConnections","getContainerModulesConnections","restoreAudioModule","mergeExistingContainerAM","toType","fromType","genRandomID","totNumber","getReplicatedState","totNumberModules","totNumberConnections","modIDs","modIDConverter","connectionIDConverter","values","containerMod","outputID","inputID","connection","performContainerMerge","modulesToMerge","connectionsToMerge","duplicateModule","setHL","currentChildren","possiblyMod","possiblyOccupyingID","isOccupied","fromRow","fromCol","refreshArcherContainer","moduleDragType","MOVE","COPY","duplicateContainer","dropType","get","isHL","dsStyle","onDragEnter","types","onDragLeave","openAddModuleMenu","ModuleViewIcon","gridCol","isLarge","setLarge","toReRender","archerElementStyle","iconStyle","assign","nameStyle","persist","iconOnDrop","iconOnDragStart","relations","targetId","targetAnchor","sourceAnchor","strokeColor","selectedMod","useReRender","ModuleViewFill","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","arrowLength","flat","DrawerBounder","right","Drawer","DrawerHeader","DrawerHeaderItem","textDecoration","ItemRouter","alignContent","Toggle","ToggleLine","SDBSaveList","HeaderItem","linkStyle","selectedRoute","restoreAMFromState","prevConnections","numberRestores","connectLate","numTries","buttonStyle","SpaceDBMenu","saveList","openSpaceDBProjectSaveMenu","savedState","BlankProjectButton","numMods","openConfirmBlankProjectMenu","saveJSONToFileHandle","fileHandle","json","a","createWritable","writable","write","JSON","stringify","close","loadJSONFromPickedFile","onFileHandle","showOpenFilePicker","getFile","parse","saveJSONToChosenFile","onSaved","showSaveFilePicker","description","accept","saveFileHandle","getTrimmedSMFileName","getDirectoryContentNames","dirHandle","names","getDirectorySMMNames","allNames","saveSMM","containerSave","getFileHandle","create","getSavedSMMFromName","stringData","OpenFileButton","SaveAsNewButton","SaveCurrentButton","FileMenu","reRenderFileMenu","drawerWidth","addPx","RightDrawer","drawerSpring","setSR","drawerRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","adjusting","div","setPointerCapture","clientX","releasePointerCapture","onWheel","scrollLeft","deltaY","AudioTag","possiblyMediaElement","autoPlay","AudioTags","ids","CMInputBounder","CenterMenuInput","CenterMenuBounder","backdropFilter","CenterMenu","border","Header","isClosed","headerClassName","headerStyle","header","onChangeSubmit","KnobRangeSetMenu","setMin","setMax","setMaxRange","preOnClose","SpaceDBProjectSaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","inputRef","autoFocus","update","ConfirmDeleteMenu","confirmContainerSaveName","success","saveContainerToFile","save","moduleDirectoryHandle","initName","FileContainerSaveMenu","confirmOpen","setConfirmOpen","containerModID","trySaveModule","fileModuleSaveNames","SpaceDBContainerSaveMenu","setName","AnalyzerRangeSetMenu","InputSubmit","Error","RenameMenu","onSubmit","setVal","isTooShort","setIsTooShort","trySubmit","toRenameID","RenameModuleMenu","newName","renameModule","parentModID","RenameControlMenu","renameContainerControl","LeftBar","LeftBarButton","RouterBounder","IconRouter","SearchBar","outline","selectedGroup","setSG","addModuleMenuGroups","group","SPACEDB_MODULES","DrawerItem","DrawerIcon","DrawerItemText","ModuleIcon","fullName","shortName","isFocussed","totNumModules","addSelectedSearchModule","onFocus","ModuleIcons","moduleData","effectModuleData","sourceModuleData","utilityModuleData","allModuleData","concat","SpaceDBModuleIcon","moduleName","SpaceDBModules","spaceDBModules","totNumConnections","FileModuleIcon","SearchIcons","query","upperCaseQuery","toUpperCase","filteredSpaceDBModules","filteredModuleData","filteredFileModules","FileModules","fileModules","setFileModules","showDirectoryPicker","prevSelectedGroup","EFFECTS","SOURCES","UTILITY","FILE_MODULES","SEARCH","setQuery","searchRef","AddModuleMenu","setSpaceDBModules","styleSpring","toContainerControls","isBaseContainer","renameContainer","markContainerInput","markContainerOutput","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","renameContainerControlReducer","bcidReducer","removeModule","toTrimModIDs","getContainerIDs","toTrimConnectionIDs","trimmedModules","childID","connectionReducer","createInitState","forceNew","localStorage","getItem","restoredState","combinedModuleConnectionReducer","rootReducer","fullNewState","setItem","makeBlankProject","emptyState","ConfirmBlankProject","CenterMenus","makeNotificationData","Notification","setNotificationData","isVisible","setIsVisible","onRest","App","setPointerLayerData","Boolean","location","hostname","match","store","createStore","composeWithDevTools","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.c8b8ca48.chunk.js","sourcesContent":["interface ZIndex {\n  [index: string]: number\n}\n\nexport const zIndex: ZIndex = {\n  background: -1,\n  centerMenu: 100,\n  contextMenu: 50,\n  moduleViewBounder: 0,\n}","import { createUseStyles } from 'react-jss'\nimport { zIndex } from '../theme/zIndex'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    //backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    backgroundImage: 'url(https://i.imgur.com/mSjoh6M.jpg)',\n    backgroundPosition: 'center',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: zIndex.background,\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: zIndex.moduleViewBounder,\n    overflow: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\nimport { DistortionModule } from './modules/distortion'\nimport { AnalyzerModule } from './modules/analyzer'\nimport { WhiteNoiseModule } from './modules/whiteNoise'\nimport { TunerModule } from './modules/tuner'\nimport { VisualizerModule } from './modules/visualizer'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\nexport const DISTORTION = 'DISTORTION'\nexport const ANALYZER = 'ANALYZER'\nexport const ENVELOPED_TRIGGER = 'ENVELOPED_TRIGGER'\nexport const WHITE_NOISE = 'WHITE_NOISE'\nexport const TUNER = 'TUNER'\nexport const VISUALIZER = 'VISUALIZER'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN' | 'DISTORTION' | 'ANALYZER' | 'ENVELOPED_TRIGGER' | 'WHITE_NOISE' | 'TUNER' | 'VISUALIZER'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule | DistortionModule | AnalyzerModule | WhiteNoiseModule | TunerModule | VisualizerModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const NONE = 'NONE' // no control rendered, but the func is available\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\nexport const GRAPH = 'GRAPH'\nexport const PAD = 'PAD'\nexport const TUNER_CONTROL = 'TUNER_CONTROL'\nexport const VISUALIZER_CONTROL = 'VISUALIZER_CONTROL'\n\nexport type ControlType = 'NONE' | 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH' | 'GRAPH' | 'PAD' | 'TUNER_CONTROL' | 'VISUALIZER_CONTROL'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => number | number[] | void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID?: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n  markedToContainer?: boolean\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction, RenameContainerControlAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string, name?: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n    name,\n  }\n}\n\nexport const renameContainerControl = (name: string, parentModID: string, modID: string, controlID: string, actualModID: string): RenameContainerControlAction => {\n  return {\n    type: RENAME_CONTAINER_CONTROL,\n    name,\n    parentModID,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const RENAME_CONTAINER_CONTROL = 'RENAME_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { Modules, Connections } from \"../stateTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}\n\nexport const mergeContainer = (containerID: string, newModules: Modules, newConnections: Connections, parentID: string, row: number, col: number): MergeContainerAction => {\n  return {\n    type: MERGE_CONTAINER,\n    containerID,\n    newModules,\n    newConnections,\n    parentID,\n    row,\n    col,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\nexport const MERGE_CONTAINER = 'MERGE_CONTAINER'\n","import { RESTORE_FROM_STATE } from \"./rootActionTypes\";\nimport { RootState } from \"../stateTSTypes\";\nimport { RestoreFromStateAction } from \"./rootActionTSTypes\";\n\nexport function restoreFromState(state: RootState): RestoreFromStateAction {\n  return {\n    type: RESTORE_FROM_STATE,\n    state,\n  }\n}","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","declare global {\n  interface Window {\n    webkitAudioContext: AudioContext\n  }\n}\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext // works with safari\nconst audioCtx = new AudioContext()\nexport default audioCtx","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [0.0001, 1000],\n      maxRange: [0.0001, 1000],\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-40, 40],\n      maxRange: [-40, 40],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [0, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 440],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    \n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    \n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs, FILE, BUTTON, ControlData } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nexport function makeMediaElementControlData(): ControlData {\n  return {\n    'choose file': {\n      controlType: FILE,\n    },\n    'play': {\n      controlType: BUTTON,\n    },\n    'pause': {\n      controlType: BUTTON,\n    }\n  }\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      },\n      'pause': () => {\n        (audioRef.current as HTMLAudioElement).pause()\n      },\n      'play': () => {\n        (audioRef.current as HTMLAudioElement).play()\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import audioCtx from '../../audioCtx'\nimport { VALUE, ControlData, BaseAM } from '../moduleTypes';\n\nexport interface DistortionModule extends BaseAM {\n  audioNode: WaveShaperNode,\n}\n\nexport function makeDistortionControlData(): ControlData {\n  return {\n    'amount': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 1000],\n    },\n    'oversample': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 4],\n      maxRange: [0, 4],\n    }\n  }\n}\n\nfunction makeDistortionCurve(amount: number) {\n  var k = typeof amount === 'number' ? amount : 50,\n    n_samples = 44100,\n    curve = new Float32Array(n_samples),\n    deg = Math.PI / 180,\n    i = 0,\n    x;\n  for (; i < n_samples; ++i) {\n    x = i * 2 / n_samples - 1;\n    curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n  }\n  return curve\n}\n\nfunction makeDistortion(prevControlData?: ControlData): DistortionModule {\n  const distortion = audioCtx.createWaveShaper()\n  distortion.curve = makeDistortionCurve(prevControlData ? prevControlData['amount'].value as number : 0)\n\n  const controlSetFuncs = {\n    'amount': (newAmount: string) => {\n      distortion.curve = makeDistortionCurve(Number(newAmount))\n    },\n    'oversample': (newAmount: string) => {\n      const newOversample = Math.floor(Number(newAmount))\n      if (newOversample < 2) {\n        distortion.oversample = 'none'\n      } else if (newOversample < 4) {\n        distortion.oversample = '2x'\n      } else {\n        distortion.oversample = '4x'\n      }\n    }\n  }\n  return {\n    audioNode: distortion,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeDistortion","import audioCtx from '../../audioCtx'\nimport { ControlSetFuncs, BaseAM, ControlData, GRAPH } from '../moduleTypes'\n\nexport interface AnalyzerModule extends BaseAM {\n  audioNode: AnalyserNode\n  timeArray: Float32Array\n  bufferLength: number\n}\n\nexport function makeAnalyzerControlData(): ControlData {\n  return {\n    'time graph': {\n      controlType: GRAPH,\n      range: [-1.5, 1.5],\n    }\n  }\n}\n\nfunction makeAnalyzer(prevControlData?: ControlData): AnalyzerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = 1024\n  const bufferLength = analyzer.frequencyBinCount\n  const timeArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'time graph': () => {\n      \n    }\n  }\n\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    timeArray,\n    bufferLength,\n  }\n}\n\nexport default makeAnalyzer","import { BaseAM, ControlData, VALUE, PAD } from \"../moduleTypes\"\nimport audioCtx from '../../audioCtx'\n\nexport interface EnvelopedTriggerModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeEnvelopedTriggerControlData(): ControlData {\n  return {\n    'trigger': {\n      controlType: PAD,\n    },\n    'attack': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'decay': {\n      controlType: VALUE,\n      value: 0.2,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'sustain': {\n      controlType: VALUE,\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 100],\n    },\n    'release': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n  }\n}\n\nfunction makeEnvelopedTrigger(prevControlData?: ControlData): EnvelopedTriggerModule {\n  const constant = audioCtx.createConstantSource()\n  constant.offset.value = 0\n\n  let attack = .1\n  let decay = 0.2\n  let sustain = 1\n  let release = .1\n\n  if (prevControlData) {\n    attack = prevControlData['attack'].value as number\n    decay = prevControlData['decay'].value as number\n    sustain = prevControlData['sustain'].value as number\n    release = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs = {\n    'trigger': (val: string) => {\n      const currTime = audioCtx.currentTime\n      if (val === 'on') {\n        constant.offset.linearRampToValueAtTime(1, currTime + attack)\n        constant.offset.setTargetAtTime(sustain, currTime + attack, decay)\n      } else {\n        constant.offset.cancelAndHoldAtTime(currTime)\n        constant.offset.setTargetAtTime(0, currTime, release)\n      }\n    },\n    'attack': (val: string) => {\n      attack = Number(val)\n    },\n    'decay': (val: string) => {\n      decay = Number(val)\n    },\n    'sustain': (val: string) => {\n      sustain = Number(val)\n    },\n    'release': (val: string) => {\n      release = Number(val)\n    },\n  }\n\n  constant.start()\n\n  return {\n    audioNode: constant,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeEnvelopedTrigger","import audioCtx from \"../../audioCtx\";\nimport { BaseAM, ControlData } from \"../moduleTypes\";\n\nexport interface WhiteNoiseModule extends BaseAM {\n  audioNode: AudioBufferSourceNode\n}\n\nexport function makeWhiteNoiseControlData(): ControlData {\n  return {}\n}\n\nconst length = 10\nconst bufferSize = audioCtx.sampleRate * length\n\nfunction makeWhiteNoise(prevControlData?: ControlData): WhiteNoiseModule {\n  const buffer = audioCtx.createBuffer(1, bufferSize, audioCtx.sampleRate)\n  let data = buffer.getChannelData(0)\n  for (let i = 0; i < bufferSize; i++) {\n    data[i] = Math.random() * 2 - 1\n  }\n  let noise = audioCtx.createBufferSource()\n  noise.buffer = buffer\n  noise.loop = true\n  noise.start()\n\n  return {\n    audioNode: noise,\n    connectingParamIDs: [],\n    controlSetFuncs: {},\n  }\n}\n\nexport default makeWhiteNoise","import { add } from \"mathjs\"\nimport audioCtx from \"../../audioCtx\"\nimport { BaseAM, ControlData, ControlSetFuncs, TUNER_CONTROL } from \"../moduleTypes\"\n\nexport interface TunerModule extends BaseAM {\n  audioNode: AnalyserNode,\n  freqArray: Float32Array,\n  bufferLength: number\n}\n\nexport function makeTunerControlData(): ControlData {\n  return {\n    'tuner': {\n      controlType: TUNER_CONTROL,\n    },\n  }\n}\n\nfunction downSample(freqArray: number[], bufferLength: number, harmonic: number) {\n  let over = false\n  return freqArray.map((num, i) => {\n    if (over) {\n      return 0\n    } else if (harmonic * i < bufferLength) {\n      return freqArray[harmonic * i]\n    } else {\n      over = true\n      return 0\n    }\n  })\n}\n\nfunction addHarmonics(freqArray: Float32Array, bufferLength: number, numHarmonics: number) {\n  let min = Math.min(...freqArray)\n  let harmonicArray = [...freqArray.map(val => val - min)]\n  let harmonicCopy = [...harmonicArray]\n  for (let harmonic = 2; harmonic <= numHarmonics; harmonic++) {\n    harmonicArray = add(harmonicArray, downSample(harmonicCopy, bufferLength, harmonic)) as number[]\n  }\n  return harmonicArray\n}\n\nfunction getFreqFromIndex(index: number, bufferLength: number) {\n  return index * audioCtx.sampleRate / (2 * bufferLength)\n}\n\nfunction makeTuner(prevControlData?: ControlData): TunerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = Math.pow(2, 15)\n  analyzer.smoothingTimeConstant = 0\n  const bufferLength = analyzer.frequencyBinCount\n  const freqArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'tuner': () => {\n      // returns the current max freq, and db at that freq\n      analyzer.getFloatFrequencyData(freqArray)\n      let maxBin = 0\n      let maxdB = 0\n      const harmonicArray = addHarmonics(freqArray, bufferLength, 5)\n      for (let i = 0; i < bufferLength; i++) {\n        if (harmonicArray[i] > maxdB) {\n          maxdB = harmonicArray[i]\n          maxBin = i\n        }\n      }\n      return [getFreqFromIndex(maxBin, bufferLength), freqArray[maxBin]]\n    }\n  }\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    bufferLength,\n    freqArray,\n  }\n}\n\nexport default makeTuner","import audioCtx from '../../audioCtx'\nimport { ControlSetFuncs, BaseAM, ControlData, VISUALIZER_CONTROL } from '../moduleTypes'\n\nexport interface VisualizerModule extends BaseAM {\n  audioNode: AnalyserNode\n  timeArray: Float32Array\n  freqArray: Float32Array\n  bufferLength: number\n}\n\nexport function makeVisualizerControlData(): ControlData {\n  return {\n    'visualizer-update': {\n      controlType: VISUALIZER_CONTROL,\n    }\n  }\n}\n\nfunction makeVisualizer(prevControlData?: ControlData): VisualizerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = Math.pow(2, 10)\n  const bufferLength = analyzer.frequencyBinCount\n  const timeArray = new Float32Array(bufferLength)\n  const freqArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'visualizer-update': () => {\n      analyzer.getFloatFrequencyData(freqArray)\n      //analyzer.getFloatTimeDomainData(timeArray)\n    }\n  }\n\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    timeArray,\n    freqArray,\n    bufferLength,\n  }\n}\n\nexport default makeVisualizer","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n  TUNER,\n  VISUALIZER,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\nimport { makeMediaElementControlData } from './modules/mediaElement'\nimport makeDistortion, { makeDistortionControlData } from './modules/distortion'\nimport makeAnalyzer, { makeAnalyzerControlData } from './modules/analyzer'\nimport makeEnvelopedTrigger, { makeEnvelopedTriggerControlData } from './modules/envelopedTrigger'\nimport makeWhiteNoise, { makeWhiteNoiseControlData } from './modules/whiteNoise'\nimport makeTuner, { makeTunerControlData } from './modules/tuner'\nimport makeVisualizer, { makeVisualizerControlData } from './modules/visualizer'\n\ndeclare global {\n  interface Window {\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n  }\n}\n\nfunction makeAddModule() {\n  window.addModule = function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData = makeMediaElementControlData()\n        window.addAudioTag(id); window.reRenderAudioTags()\n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0']))\n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n      case DISTORTION:\n        const distortion = makeDistortion()\n        const distortionControlData = makeDistortionControlData()\n        window.audioModules = { ...window.audioModules, [id]: distortion }\n        dispatch(addModule(id, name, moduleType, distortionControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ANALYZER:\n        const analyzer = makeAnalyzer()\n        const analyzerControlData = makeAnalyzerControlData()\n        window.audioModules = { ...window.audioModules, [id]: analyzer }\n        dispatch(addModule(id, name, moduleType, analyzerControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ENVELOPED_TRIGGER:\n        const envelopedTrigger = makeEnvelopedTrigger()\n        const envelopedTriggerControlData = makeEnvelopedTriggerControlData()\n        window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n        dispatch(addModule(id, name, moduleType, envelopedTriggerControlData, parentID, row, col, [], ['0']))\n        break\n      case WHITE_NOISE:\n        const whiteNoise = makeWhiteNoise()\n        const whiteNoiseControlData = makeWhiteNoiseControlData()\n        window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n        dispatch(addModule(id, name, moduleType, whiteNoiseControlData, parentID, row, col, [], ['0']))\n        break\n      case TUNER:\n        const tuner = makeTuner()\n        const tunerControlData = makeTunerControlData()\n        window.audioModules = { ...window.audioModules, [id]: tuner }\n        dispatch(addModule(id, name, moduleType, tunerControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case VISUALIZER:\n        const visualizer = makeVisualizer()\n        const visualizerControlData = makeVisualizerControlData()\n        window.audioModules = { ...window.audioModules, [id]: visualizer }\n        dispatch(addModule(id, name, moduleType, visualizerControlData, parentID, row, col, ['0'], ['0']))\n        break\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import feathers from '@feathersjs/feathers'\nimport rest from '@feathersjs/rest-client'\n\ndeclare global {\n  interface Window {\n    projectSaveService: any\n    containerSaveService: any\n  }\n}\n\nfunction configureSpaceDB() {\n  const spaceDB = feathers()\n  const restClient = rest('http://192.168.1.64:30300') // spaceDB\n\n  spaceDB.configure(restClient.fetch(window.fetch))\n  window.projectSaveService = spaceDB.service('project-save-service')\n  window.containerSaveService = spaceDB.service('container-save-service')\n}\n\nexport default configureSpaceDB","declare global {\n  interface Window {\n    usingElectron: boolean\n  }\n}\n\nfunction setUserAgent() {\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.indexOf(' electron/') > -1) {\n    window.usingElectron = true\n  } else {\n    window.usingElectron = false\n  }\n}\n\nexport default setUserAgent","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: '#000000c4',\n  centerMenuBackground: '#000000b3',\n  centerMenuBorder: grey,\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n  disabled: '#ffffff61',\n\n  dropSquareHL: '#ffffff60',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  moduleInput: '#da1212',\n  paramInput: 'blue',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C',\n\n  analyzerModuleBG: '#00347D',\n\n  confirmButton: '#00802da6',\n  denyButton: '#cc00006e',\n\n  // Context menu\n  contextMenuItemBorder: 'black',\n  contextMenuBackground: '#08101deb',\n\n  sdbSaveButton: '#282c349c',\n\n  // add module menu\n  addModuleLeftBarBG: 'transparent',\n  addModuleLeftBarButtonHL: '#ffffff60',\n  addModuleSearchBarBG: '#1d1d2b',\n  addModuleSearchBarText: 'white',\n\n  // notification\n  success: '#00802d',\n\n  buttonBorder: '#543737c7', \n}\n\nexport const paramColors = ['#dbde02', '#0a9408', '#470ff5', '#0ba8cc']\n// yellow, green, purple, light blue\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400', // converted to px\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIconWidth: '25vmin',\n    bigIconHeight: '35vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '2.5vmin',\n    smallSize: '1.5vmin',\n    smallBorderRadius: '1.5vmin',\n  },\n  knob: {\n    size: 7, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  },\n  switch: {\n    diameter: 3 // in vmin\n  },\n  addModuleMenu: {\n    leftBarWidth: '20vmin',\n    iconRouterWidth: '60vmin',\n    height: '60vmin',\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst maxHeight = '12em'\n\nconst useJSS = createUseStyles({\n  ContextMenuBounder: {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'transparent',\n    position: 'fixed',\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    zIndex: zIndex.contextMenu,\n    opacity: 1,\n    visibility: ({ isOpen }) => isOpen ? 'visible' : 'hidden'\n  },\n\n  ContextMenu: {\n    maxHeight,\n    backgroundColor: colors.contextMenuBackground,\n    padding: '.2em',\n    borderRadius: '.2em',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'fixed',\n    top: -1000,\n    left: -1000,\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0em',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  MenuItem: {\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      borderColor: colors.contextMenuItemBorder\n    }\n  }\n})\n\nexport default useJSS","import React, { Fragment, ReactNode } from 'react'\n\ninterface Props {\n  children: ReactNode\n  showIf: boolean\n}\n\nfunction Conditional({ children, showIf }: Props) {\n  return (\n    <Fragment>\n      {!showIf ? null : children}\n    </Fragment>\n  )\n}\n\nexport default Conditional","import React, { ReactNode, useEffect, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { MouseDivEvent } from '../types'\nimport { getCMLocation } from './helpers'\nimport Conditional from '../../Conditional/Conditional'\n\ninterface Props {\n  children: ReactNode\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n  style?: CSS.Properties\n  event: MouseDivEvent\n  isOpen: boolean\n}\n\nfunction ContextMenu({ children, onClose, bounderStyle, style, event, isOpen }: Props) {\n  const classes = useJSS({ isOpen })\n  const cmRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (cmRef.current) {\n      if (event) {\n        const { top, left } = getCMLocation(event, cmRef)\n        cmRef.current.style.top = `${top}px`\n        cmRef.current.style.left = `${left}px`\n      } else {\n        cmRef.current.style.top = '-1000px'\n        cmRef.current.style.left = '-1000px'\n      }\n    }\n  }, [event])\n  return (\n    <div className={classes.ContextMenuBounder}\n      onPointerDown={() => {\n        if (cmRef.current) {\n          cmRef.current.style.top = '-1000px'\n          cmRef.current.style.left = '-1000px'\n        }\n        onClose()\n      }}\n      style={bounderStyle}\n    >\n      <div className={classes.ContextMenu}\n        style={style}\n        ref={cmRef}\n        onPointerDown={e => { e.stopPropagation() }}\n      >\n        <Conditional showIf={isOpen}>\n          { children }\n        </Conditional>\n      </div>\n    </div>\n  )\n}\n\nexport default ContextMenu","import { DragEvent, RefObject } from \"react\";\nimport { MouseDivEvent } from \"../types\";\n\nexport type DivRef = RefObject<HTMLDivElement>\n\nexport function getCMLocation(e: MouseDivEvent | DragEvent<HTMLDivElement>, ref: DivRef) {\n  if (!ref.current) {\n    return {\n      top: -1000,\n      left: -1000,\n    }\n  } else {\n    return {\n      top: (window.innerHeight - e.pageY) >= ref.current.offsetHeight ?\n        e.pageY : window.innerHeight - ref.current.offsetHeight,\n      left: (window.innerWidth - e.pageX) >= ref.current.offsetWidth ?\n        e.pageX : window.innerWidth - ref.current.offsetWidth,\n    }\n  }\n}","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  FlexRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n    flexWrap: ({ flexWrap }) => flexWrap,\n  },\n\n  FlexCol: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  justifyContent?: string\n  alignItems?: string\n  flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse',\n}\n\nfunction FlexRow({ className, children, style, ref, justifyContent, alignItems, flexWrap }: Props) {\n  const classes = useJSS({ justifyContent, alignItems, flexWrap })\n  return (\n    <div className={className ? `${classes.FlexRow} ${className}` : classes.FlexRow}\n      style={style}\n      ref={ref}\n    >\n      { children }\n    </div>\n  )\n}\n\nexport default FlexRow","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE, TUNER, VISUALIZER } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType?: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG\n    case ENVELOPED_TRIGGER: return colors.sourceModuleBG\n    case WHITE_NOISE: return colors.sourceModuleBG\n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n    case DISTORTION: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n    case ANALYZER: return colors.analyzerModuleBG\n    case TUNER: return colors.analyzerModuleBG\n    case VISUALIZER: return colors.analyzerModuleBG\n  }\n}\n\nexport default getModuleColor ","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  AutoPlacingGrid: {\n    display: 'grid',\n    gridTemplateRows: ({ numRows }) => `repeat(${numRows}, auto)`,\n    gridTemplateColumns: ({ numCols }) => `repeat(${numCols}, auto)`,\n    gridAutoFlow: ({ direction }) => direction,\n    gridAutoRows: ({ numRows }) => numRows ? null : 'auto',\n    gridAutoColumns: ({ numCols }) => numCols ? null : 'auto',\n    gap: ({ gap }) => gap,\n    justifyItems: 'center',\n  },\n})\n\nexport default useJSS","import React, { ReactNode } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children?: ReactNode\n  className?: string\n  style?: CSS.Properties\n  direction: 'row' | 'column' | 'row dense' | 'column dense'\n  numRows?: number | string\n  numCols?: number | string\n  gap?: string\n}\n\nfunction AutoPlacingGrid({ children, className, style, numRows, numCols, direction, gap }: Props) {\n  const classes = useJSS({ numRows, numCols, direction, gap })\n  return (\n    <div className={className ? `${classes.AutoPlacingGrid} ${className}` : classes.AutoPlacingGrid}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default AutoPlacingGrid","import React, { DragEvent } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  onDrop?: (e: DragEvent<HTMLDivElement>) => void\n  onDragOver?: (e: DragEvent<HTMLDivElement>) => void\n  justifyContent?: string\n  alignItems?: string\n}\n\nfunction FlexCol({ className, children, style, ref, onDrop, onDragOver, justifyContent, alignItems }: Props) {\n  const classes = useJSS({ justifyContent, alignItems })\n  return (\n    <div className={className ? `${classes.FlexCol} ${className}` : classes.FlexCol}\n      style={style}\n      ref={ref}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      { children }\n    </div>\n  );\n}\n\nexport default FlexCol","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import { connect } from \"../../../audioModules/connection\";\nimport { ConnectingAudioModule, CONTAINER } from \"../../../audioModules/moduleTypes\";\nimport { Module, Connections, Modules } from \"../../../redux/stateTSTypes\"\nimport { Dispatch } from 'redux'\nimport { addConnection } from \"../../../redux/allActions\";\nimport { colors } from \"../../../theme/theme\";\n\nexport function connectionExists(connections: Connections, fromMod: Module, actualToID: string, newOutputIndex: number, newInputIndex: number, newParam = '') {\n  for(var i = 0; i < fromMod.outputs.length; i++) {\n    const { toID, actualInputID, param, outputIndex, inputIndex } = connections[fromMod.outputs[i]]\n    const testingID = actualInputID ? actualInputID : toID\n    if (\n      testingID === actualToID && \n      newParam === param &&\n      newOutputIndex === outputIndex &&\n      newInputIndex === inputIndex\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function executeConnection(\n  fromID: string, \n  actualFromID: string,\n  toID: string,\n  actualToID: string,\n  modules: Modules,\n  connections: Connections,\n  dispatch: Dispatch,\n  outputIndex: number,\n  inputIndex: number,\n  onClose?: () => void,\n  paramID = '',\n) {\n  const fromMod = modules[fromID]\n  const am = window.audioModules\n  const isFromContainer = fromMod.moduleType === CONTAINER\n  const isToContainer = modules[toID].moduleType === CONTAINER\n  if (!connectionExists(connections, fromMod as Module, actualToID, outputIndex, inputIndex, paramID)) {\n    connect(\n      am[actualFromID] as ConnectingAudioModule,\n      am[actualToID] as ConnectingAudioModule,\n      paramID,\n      outputIndex,\n      inputIndex,\n    )\n    dispatch(addConnection(\n      fromID,\n      toID,\n      paramID,\n      outputIndex,\n      inputIndex,\n      isFromContainer ? actualFromID : undefined,\n      isToContainer ? actualToID : undefined,\n    ))\n    window.flashNotification(colors.success, 'connection created')\n    if (onClose) onClose()\n  } else {\n    alert('modules already connected')\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Module: {\n    borderRadius: '1.5vmin',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    flexShrink: 1,\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n    padding: '.2em .5em',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  ConnectorBounder: {\n    alignItems: 'center',\n  },\n\n  Name: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.medium,\n    marginBottom: '.2em',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ConnectorName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ParamName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.moduleInput,\n    borderWidth: '.25em'\n  },\n\n  SmallConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.smallSize,\n    height: sizes.connector.smallSize,\n    borderRadius: sizes.connector.smallBorderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.paramInput,\n    borderWidth: '.2em',\n  }\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport getModuleColor from '../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../Flex/FlexCol'\nimport FlexRow from '../../Flex/FlexRow'\nimport { executeConnection } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // of the original modules that made the connection\n  toID: string\n  onClose: () => void\n}\n\nfunction InModule({ modID, startsBig, fromID, toID, onClose }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const audioMod = window.audioModules[modID]\n  const [isBig, setBig] = useState(startsBig)\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.Module} style={{ backgroundColor: getModuleColor(mod.moduleType) }}>\n      <div className={classes.Name}\n        style={{ marginBottom: '.2em' }}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <FlexRow style={{ justifyContent: 'center' }}>\n        <FlexCol style={{ marginRight: audioMod.connectingParamIDs.length !== 0 ?'.4em' : '0em' }}>\n          {!isBig ? null : mod.connectionInputs.map((input, index) => {\n            return (\n              <FlexCol key={index}>\n                <div className={classes.ConnectionReciever}\n                  onDragOver={e => { e.preventDefault() }}\n                  onDrop={e => {\n                    e.preventDefault()\n                    const actualFromID = e.dataTransfer.getData('actualFromID')\n                    const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                    executeConnection(\n                      fromID, actualFromID, \n                      toID, modID, modules, \n                      connections, dispatch, \n                      outputIndex, index,\n                      onClose\n                    )\n                  }}\n                />\n                {mod.connectionInputs.length !== 1 ? input : null}\n              </FlexCol>\n            )\n          })}\n        </FlexCol>\n        {audioMod.connectingParamIDs.length === 0 ? null : \n        <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n          {!isBig ? null : audioMod.connectingParamIDs.map((paramID, index) => {\n            return (\n              <FlexCol style={{ alignItems: 'center' }} key={index}\n                onDragOver={e => { e.preventDefault() }}\n                onDrop={e => {\n                  e.preventDefault()\n                  const actualFromID = e.dataTransfer.getData('actualFromID')\n                  const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                  executeConnection(\n                    fromID, actualFromID,\n                    toID, modID, modules,\n                    connections, dispatch,\n                    outputIndex, index,\n                    onClose, paramID\n                  )\n                }}\n              >\n                <div className={classes.SmallConnectionReciever}/>\n                <div className={classes.ParamName}>{paramID}</div>\n              </FlexCol>\n            )\n          })}\n        </AutoPlacingGrid>}\n      </FlexRow>\n    </div>\n  )\n}\n\nexport default InModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../redux/stateTSTypes'\nimport getModuleColor from '../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport InModule from './InModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // original fromID of connection\n  toID: string\n  isFromContainer: boolean\n  onClose: () => void\n  isBase: boolean\n}\n\nfunction ContainerInModule({ modID, startsBig, fromID, toID, isFromContainer, onClose, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modInputs = (mod as ContainerModule).connectionInputs\n  const childrenStartBig = modInputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{\n        backgroundColor: getModuleColor(CONTAINER),\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modInputs.map((inputModID, index) => {\n          const inMod = modules[inputModID]\n          if(inMod.moduleType === CONTAINER) {\n            return (\n              <ContainerInModule key={index} \n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                isFromContainer={isFromContainer}\n                onClose={onClose}\n                isBase={false}\n                startsBig={childrenStartBig}\n              />\n            )\n          } else {\n            return (\n              <InModule key={index}\n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                onClose={onClose}\n                startsBig={childrenStartBig}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerInModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport getModuleColor from '../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../Flex/FlexCol'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean\n}\n\n// only rendered for base modules\nfunction OutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        overflow: 'visible',\n        marginRight: isBase ? '1em' : '0em',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      {!isBig ? null :\n      mod.connectionOutputs.length > 1 ?\n      <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n        {mod.connectionOutputs.map((output, index) => {\n          return (\n            <FlexCol className={classes.ConnectorBounder} key={index}>\n              <div className={classes.IconConnector}\n                draggable={true}\n                onDragStart={e => {\n                  e.dataTransfer.setData('actualFromID', modID)\n                  e.dataTransfer.setData('outputIndex', index.toString())\n                }}\n              />\n              {mod.connectionOutputs.length === 1 ? null : \n                <div className={classes.ConnectorName}>{output}</div>\n              }\n            </FlexCol>\n          )\n        })}\n      </AutoPlacingGrid>\n      :\n      <FlexCol className={classes.ConnectorBounder}>\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={e => {\n            e.dataTransfer.setData('actualFromID', modID)\n            e.dataTransfer.setData('outputIndex', '0')\n          }}\n        />\n      </FlexCol>\n      }\n    </div>\n  )\n}\n\nexport default OutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../redux/stateTSTypes'\nimport getModuleColor from '../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport OutModule from './OutModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean // is the lowest one in the tree for connection\n}\n\nexport type OutModType = {\n  setBig: (isBig: boolean) => void\n}\n\nfunction ContainerOutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modOutputs = (mod as ContainerModule).connectionOutputs\n  const childrenStartBig = modOutputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        marginRight: isBase ? '1em' : '0em',\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}>\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modOutputs.map((outputModID, index) => {\n          const outMod = modules[outputModID]\n          if (outMod.moduleType === CONTAINER) {\n            return (\n              <ContainerOutModule key={index}\n                modID={outputModID} \n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          } else {\n            return (\n              <OutModule key={index} \n                modID={outputModID}\n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerOutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { AnyModule, RootState } from '../../../redux/stateTSTypes'\nimport ContextMenu from '../ContextMenu/ContextMenu'\nimport { DragDivEvent } from '../types'\nimport FlexRow from '../../Flex/FlexRow'\nimport ContainerInModule from './ContainerInModule'\nimport ContainerOutModule from './ContainerOutModule'\nimport InModule from './InModule'\nimport OutModule from './OutModule'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (event: DragDivEvent, fromID: string, toID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: DragDivEvent, fromMod?: AnyModule, toMod?: AnyModule) {\n  return {\n    isOpen,\n    event,\n    fromMod,\n    toMod,\n  }\n}\n\nfunction ConnectionMenu() {\n  const [{ isOpen, event, fromMod, toMod }, setData] = useState(makeData(false))\n  const { modules } = useSelector((state: RootState) => state)\n  window.openConnectionMenu = (event, fromID, toID) => {\n    setData(makeData(true, event, modules[fromID], modules[toID]))\n  }\n  const onClose = () => {\n    setData(makeData(false)) \n  }\n  return (\n    <ContextMenu event={event as DragDivEvent} isOpen={isOpen} onClose={onClose}\n      style={{\n        padding: '.7em'\n      }}\n      bounderStyle={{\n        backgroundColor: 'rgba(0,0,0,.4)'\n      }}\n    >\n      <FlexRow>\n        {fromMod?.moduleType === CONTAINER ? \n          <ContainerOutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        :\n          <OutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        }\n        {toMod?.moduleType === CONTAINER ?\n          <ContainerInModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            isFromContainer={fromMod?.moduleType === CONTAINER}\n            onClose={onClose}\n            isBase={true}\n          />\n        :\n          <InModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            onClose={onClose}\n          />\n        }\n      </FlexRow>\n    </ContextMenu>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: ({ notClickable }) => notClickable ? '' : 'pointer',\n      borderColor: ({ notClickable }) => notClickable ? 'transparent' : colors.buttonBorder,\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '.4em',\n    margin: '.3em',\n    textAlign: 'center',\n    fontSize: ({ fontSize }) => fontSize,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n})\n\nexport default useJSS","import React, { RefObject, KeyboardEvent, MouseEvent } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  children?: React.ReactNode\n  onClick?: (e: MouseEvent<HTMLDivElement>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n  buttonRef?: RefObject<HTMLDivElement>\n  onKeyDown?: (e: KeyboardEvent<HTMLDivElement>) => void\n  onContextMenu?: (e: MouseEvent<HTMLDivElement>) => void\n  fontSize?: string\n  notClickable?: boolean\n  onPointerEnter?: (e: MouseEvent<HTMLDivElement>) => void\n  onPointerLeave?: (e: MouseEvent<HTMLDivElement>) => void\n}\n\nfunction Button({ \n  className, onClick, children, style, onPointerDown, \n  buttonRef, onKeyDown, onContextMenu, fontSize, notClickable,\n  onPointerEnter, onPointerLeave\n}: Props) {\n  const classes = useJSS({ fontSize, notClickable })\n  return (\n    <div className={className ? `${classes.Button} ${className}` : classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n      ref={buttonRef}\n      onKeyDown={onKeyDown}\n      onContextMenu={onContextMenu}\n      onPointerEnter={onPointerEnter}\n      onPointerLeave={onPointerLeave}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import React from 'react'\nimport trashSVG from '../../icons/trash.svg'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  alt: string\n}\n\nfunction TrashSVG({ className, style, alt }: Props) {\n  return (\n    <img className={className}\n      style={style}\n      src={trashSVG}\n      alt={alt}\n    />\n  )\n}\n\nexport default TrashSVG","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DeleteButtonBounder: {\n    backgroundColor: colors.deleteButton,\n    fontSize: sizes.text.small,\n    padding: '.2em .4em',\n    '&:hover': {\n      borderColor: colors.deleteButton,\n    },\n  },\n\n  DeleteButtonSVG: {\n    width: '1.5em',\n    height: '1.5em',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport Button from '../Button/Button'\nimport TrashSVG from '../SVG/TrashSVG'\nimport useJSS from './style'\n\ninterface Props {\n  onClick: () => void\n}\n\nfunction DeleteButton({ onClick }: Props) {\n  const classes = useJSS()\n  return (\n    <Button className={classes.DeleteButtonBounder}\n      onPointerDown={e => { e.stopPropagation() }}\n      onClick={onClick}\n    >\n      <TrashSVG className={classes.DeleteButtonSVG}\n        alt={'delete'}\n      />\n    </Button>\n  )\n}\n\nexport default DeleteButton","import React from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../../redux/allActions'\nimport { useSelector } from 'react-redux'\nimport DeleteButton from '../DeleteButton'\n\ninterface Props {\n  modID: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ modID, onClose }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <DeleteButton\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(selectedModule.id))\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ModuleDeleteButton","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Connection: {\n    fontSize: sizes.text.xsmall,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  Name: {\n    fontSize: sizes.text.medium,\n    margin: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  MenuHeader: {\n    fontSize: sizes.text.small,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    whiteSpace: 'noWrap',\n  },\n\n  OpenButton: {\n    fontSize: sizes.text.small,\n  },\n\n  SaveButton: {\n    fontSize: sizes.text.small\n  },\n})\n\nexport default useJSS","import { atan2 } from \"mathjs\"\n\nexport function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1]\n}\n\nexport function mapValBetweenRanges(val: number, fromRange: [number, number], toRange: [number, number]) {\n\tconst valProportion = (val - fromRange[0]) / (fromRange[1] - fromRange[0])\n\tconst toRangeDif = toRange[1] - toRange[0]\n\treturn toRange[0] + valProportion * toRangeDif\n}\n\nexport function GetAzimXZ(x: number, z: number) {\n\t// ground plane is xz\n\t// from 0 to 2pi\n\t// measures azim from pos x axis\n\t// positive azim if z < 0, negative if z > 0 because positive rotation about yHat moves xHat away from positive zhat\n\t// vec must be unit\n\tif (x > 0) {\n\t\tif (z > 0) {\n\t\t\treturn -atan2(z, x) + Math.PI\n\t\t} else if (z < 0) {\n\t\t\treturn atan2(-z, x) + Math.PI\n\t\t} else {\n\t\t\treturn 0 + Math.PI\n\t\t}\n\t} else if (x < 0) {\n\t\tif (z > 0) {\n\t\t\treturn atan2(z, -x)\n\t\t} else if (z < 0) {\n\t\t\treturn 2 * Math.PI - atan2(-z, -x)\n\t\t} else {\n\t\t\treturn 2 * Math.PI\n\t\t}\n\t} else { // x = 0;\n\t\tif (z > 0) {\n\t\t\treturn Math.PI / 2\n\t\t} else if (z < 0) {\n\t\t\treturn 3 * Math.PI / 2\n\t\t} else {\n\t\t\treturn Math.PI // on y axis can kind of be anything\n\t\t}\n\t}\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../../theme/theme'\n\nconst maxWidth = '8em'\nconst maxHeight = '12em'\n\nconst useJSS = createUseStyles({\n  ExtensionMenu: {\n    maxHeight,\n    maxWidth,\n    backgroundColor: colors.contextMenuBackground,\n    padding: '.2em',\n    borderRadius: '.2em',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'fixed',\n    top: -1000,\n    left: -1000,\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0em',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n})\n\nexport default useJSS","import React, { Fragment, ReactNode, useEffect, useRef, useState } from 'react'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport Conditional from '../../Conditional/Conditional'\nimport { getEMLocation } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  children: ReactNode\n  text: string\n}\n\nconst timeout = 200\n\nfunction ExtensionMenu({ text, children }: Props) {\n  const [isOpen, setOpen] = useState(false)\n  const [timeoutID, setTimeoutID] = useState(-1)\n  const classes = useJSS()\n  const buttonRef = useRef<HTMLDivElement>(null)\n  const emRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (emRef.current) {\n      // this is only run if div is rendered, ie when isOpen is true\n      const { top, left } = getEMLocation(buttonRef, emRef)\n      emRef.current.style.top = `${top}px`\n      emRef.current.style.left = `${left}px`\n    }\n  })\n  return (\n    <Fragment>\n      <Button buttonRef={buttonRef}\n        fontSize={sizes.text.small}\n        onPointerEnter={() => {\n          window.clearTimeout(timeoutID)\n          setOpen(true)\n        }}\n        onPointerLeave={() => {\n          const newID = window.setTimeout(() => {\n            setOpen(false)\n          }, timeout)\n          setTimeoutID(newID)\n        }}\n      >\n        { text }\n      </Button>\n      <Conditional showIf={isOpen}>\n        <div className={classes.ExtensionMenu}\n          ref={emRef}\n          onPointerEnter={() => {\n            window.clearTimeout(timeoutID)\n          }}\n          onPointerLeave={() => {\n            const newID = window.setTimeout(() => {\n              setOpen(false)\n            }, timeout)\n            setTimeoutID(newID)\n          }}\n        >\n          { children }\n        </div>\n      </Conditional>\n    </Fragment>\n  )\n}\n\nexport default ExtensionMenu","import { inRange } from \"../../../helpers/genFuncs\"\nimport { DivRef } from \"../ContextMenu/helpers\"\nimport { MouseDivEvent } from \"../types\"\n\nexport function getEMLocation(buttonRef: DivRef, menuRef: DivRef) {\n  if (!buttonRef.current || !menuRef.current) {\n    return {\n      top: -1000,\n      left: -1000,\n    }\n  } else {\n    const buttonVertPos = buttonRef.current.getBoundingClientRect().top\n    const CMHorizPos = buttonRef.current.parentElement?.getBoundingClientRect().left as number\n    const CMWidth = buttonRef.current.parentElement?.offsetWidth as number\n    const EMHeight = menuRef.current.offsetHeight // extension menu \n    const EMWidth = menuRef.current.offsetWidth\n    return {\n      top: (window.innerHeight - buttonVertPos) >= EMHeight ?\n        buttonVertPos : window.innerHeight - EMHeight,\n      left: (window.innerWidth - CMHorizPos - CMWidth) >= EMWidth ?\n        CMHorizPos + CMWidth : CMHorizPos - EMWidth\n    }\n  }\n}\n\nexport function mouseInDiv(e: MouseDivEvent, ref: DivRef) {\n  if (ref.current) {\n    const { top, left, bottom, right } = ref.current.getBoundingClientRect()\n    console.log(left, right)\n    console.log(e.screenX)\n    console.log(inRange(e.screenX, [left, right]))\n    return inRange(e.pageX, [left, right]) && inRange(e.pageY, [top, bottom])\n  } else {\n    return false\n  }\n}","import React from 'react'\nimport useJSS from './style'\nimport { Modules, RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../../redux/allActions'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport Conditional from '../../Conditional/Conditional'\nimport ExtensionMenu from '../ExtensionMenu/ExtensionMenu'\n\ninterface Props {\n  modID: string\n  modules: Modules\n}\n\nfunction InputOutputView({ modID, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <Conditional showIf={selectedModule.inputs.length !== 0 || selectedModule.outputs.length !== 0}>\n      <ExtensionMenu text='inputs / outputs'>\n        {selectedModule.inputs.length === 0 ? null :\n          <div className={classes.MenuHeader}>inputs</div>\n        }\n\n        {selectedModule.inputs.map((connectionID, index) => {\n          const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n          const name = modules[fromID].name\n          return (\n            <div className={classes.Connection}\n              key={fromID + param + 'inp' + index}\n              onClick={e => {\n                e.stopPropagation()\n                dispatch(removeConnection(connectionID))\n                disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n              }}\n              onPointerDown={e => {e.stopPropagation()}}\n            >\n              {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n            </div>\n          )\n        })}\n\n        {selectedModule.outputs.length === 0 ? null :\n          <div className={classes.MenuHeader}>outputs</div>\n        }\n\n        {selectedModule.outputs.map((connectionID, index) => {\n          const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n          const name = modules[toID].name\n          return (\n            <div className={classes.Connection}\n              key={toID + param + 'out' + index}\n              onClick={e => {\n                e.stopPropagation()\n                dispatch(removeConnection(connectionID))\n                disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n              }}\n              onPointerDown={e => { e.stopPropagation() }}\n            >\n              {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n            </div>\n          )\n        })}\n      </ExtensionMenu>\n    </Conditional>\n  )\n}\n\nexport default InputOutputView","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction ContainerOpenButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {modules[modID].moduleType !== CONTAINER ? null :\n        <Button className={classes.OpenButton}\n          onClick={() => {\n            window.fillContainerID = modID\n            window.reRenderFillContainer()\n            onClose()\n          }}\n          onPointerDown={(e) => { e.stopPropagation() }}\n        >\n          open\n        </Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default ContainerOpenButton","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction SpaceDBSaveButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {!window.usingElectron || modules[modID].moduleType !== CONTAINER ? null :\n      <Button className={classes.SaveButton}\n        onClick={() => {\n          window.containerSaveService.find().then((containerSaves: string[]) => {\n            window.openSpaceDBContainerSaveMenu(containerSaves, modID, onClose)\n          })\n          onClose()\n        }}\n      >\n        save to spaceDB\n      </Button>}\n    </Fragment>\n  )\n}\n\nexport default SpaceDBSaveButton","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    padding: '1vmin',\n  },\n\n  SwitchSVG: {\n    marginLeft: '1.5vmin',\n    flexShrink: 0,\n    //padding: '.5vmin',\n  },\n\n  Text: {\n    fontSize: ({ fontSize }) => fontSize,\n  }\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors, sizes } from '../../theme/theme'\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n  fontSize?: string\n}\n\nconst heightDif = 1\n\nconst fullWidth = 2 * sizes.switch.diameter\nconst fullHeight = sizes.switch.diameter + heightDif\n\nconst rectWidth = 1.5 * sizes.switch.diameter\nconst rectHeight = sizes.switch.diameter - heightDif\nconst rectX = sizes.switch.diameter / 4\nconst rectY = heightDif\n\nconst circleCY = (sizes.switch.diameter + heightDif) / 2\n\n\nfunction Switch({ text, onSwitch, initState, style, fontSize }: Props) {\n  const [isSwitched, setSwitched] = useState(initState)\n  const classes = useJSS({ fontSize })\n  const spring = useSpring({\n    cx: isSwitched ? `${fullWidth - sizes.switch.diameter / 2}vmin` : `${sizes.switch.diameter / 2}vmin`,\n    fill: isSwitched ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div className={classes.Text}\n        onClick={() => { onSwitch(!isSwitched); setSwitched(!isSwitched) }}\n      >\n        {text}\n      </div>\n      <svg className={classes.SwitchSVG}\n        width={`${fullWidth}vmin`}\n        height={`${fullHeight}vmin`}\n        onClick={() => {\n          onSwitch(!isSwitched); setSwitched(!isSwitched)\n        }}\n      >\n        <rect width={`${rectWidth}vmin`} height={`${rectHeight}vmin`} x={`${rectX}vmin`} y={`${rectY}vmin`} rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={`${circleCY}vmin`} r={`${sizes.switch.diameter / 2}vmin`} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import React from 'react'\nimport { sizes } from '../../../theme/theme'\nimport { Module, ContainerModule, RootState, ContainerControl } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../../redux/allActions'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport FlexRow from '../../Flex/FlexRow'\nimport Switch from '../../Switch/Switch'\nimport FlexCol from '../../Flex/FlexCol'\nimport useJSS from './style'\nimport Conditional from '../../Conditional/Conditional'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  const classes = useJSS()\n  const open = selectedModule.moduleType === CONTAINER ? \n    (selectedModule as ContainerModule).containerControls.length !== 0 \n    :\n    Object.keys(selectedModule.controlData).length !== 0\n  return (\n    <Conditional showIf={open}>\n      <FlexCol>\n        <div className={classes.MenuHeader}> mark as container control </div>\n        <FlexRow justifyContent='center' style={{ flexWrap: 'wrap', maxWidth: '40vmin' }}>\n          {\n            selectedModule.moduleType === CONTAINER ?\n            (selectedModule as ContainerModule).containerControls.map((control, index) => {\n              const { modID, controlID, actualModID, name, markedToContainer } = control\n              const modName = modules[modID].name\n              let containerControl: ContainerControl\n              const isMarked = markedToContainer ? true : false\n              if (isMarked) {\n                containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                  return (\n                    containerControl.controlID === controlID &&\n                    containerControl.actualModID === actualModID\n                  )\n                })[0]\n              }\n              return (\n                <FlexRow>\n                  <Switch initState={isMarked} text={name ? name : `${modName} - ${controlID}`}\n                    style={{ fontSize: sizes.text.small, padding: '.2em' }}\n                    key={modID + index}\n                    onSwitch={nowMarked => {\n                      if (nowMarked) {\n                        dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                      } else {\n                        dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                      }\n                    }}\n                  />\n                  {\n                    !isMarked ? null :\n                    <Button fontSize={sizes.text.xsmall}\n                      onClick={() => {\n                        window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                      }}\n                    >\n                      edit\n                    </Button>\n                  }\n                </FlexRow>\n              )\n            }) : null\n          }\n          {\n          selectedModule.moduleType === CONTAINER ? null :\n          Object.keys(selectedModule.controlData).map((controlID, index) => {\n            const isMarked = selectedModule.controlData[controlID].markedToContainer ? true : false\n            let containerControl: ContainerControl\n            if (isMarked) {\n              containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                return (\n                  containerControl.controlID === controlID &&\n                  containerControl.actualModID === selectedModule.id\n                )\n              })[0]\n            }\n            return (\n              <FlexRow key={index}>\n                <Switch initState={isMarked} text={controlID}\n                  style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                  key={controlID + index}\n                  onSwitch={nowMarked => {\n                    if (nowMarked) {\n                      dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    } else {\n                      dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    }\n                  }} \n                />\n                {\n                  !isMarked ? null :\n                  <Button style={{ fontSize: sizes.text.small }}\n                    onClick={() => {\n                      window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                    }}\n                  >\n                    edit\n                  </Button>\n                }\n              </FlexRow>\n            )\n          })\n          }\n        </FlexRow>\n      </FlexCol>\n    </Conditional>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\nimport Switch from '../../Switch/Switch'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\nimport Conditional from '../../Conditional/Conditional'\n\ninterface Props {\n  modID: string\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.small,\n  padding: '.1em',\n}\n\nfunction MarkContainerIO({ modID }: Props) {\n  const dispatch = useDispatch()\n  const baseContainerID = useSelector((state: RootState) => state.baseContainerID)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  const showingContainerInput = selectedModule.connectionInputs.length !== 0\n  const showingContainerOutput = selectedModule.connectionOutputs.length !== 0\n  const classes = useJSS()\n  return (\n    <Fragment>\n      <MarkContainerControls selectedModule={selectedModule} />\n      <Conditional showIf={\n        window.fillContainerID !== baseContainerID && \n        (showingContainerInput || showingContainerOutput)\n      }>\n        <div className={classes.MenuHeader}>\n          mark as container io\n        </div>\n        <FlexRow justifyContent='center'>\n          <Conditional showIf={showingContainerInput}>\n            <Switch style={switchStyle}\n              fontSize={sizes.text.xsmall}\n              key={selectedModule.id + 'inputSwitch'}\n              text={'input'}\n              initState={selectedModule.isContainerInput}\n              onSwitch={(newState) => {\n                if (newState) {\n                  dispatch(markContainerInput(selectedModule.id))\n                } else {\n                  dispatch(unmarkContainerInput(selectedModule.id))\n                }\n              }}\n            />\n          </Conditional>\n          <Conditional showIf={showingContainerOutput}>\n            <Switch style={switchStyle}\n              fontSize={sizes.text.xsmall}\n              key={selectedModule.id + 'outputSwitch'}\n              text={'output'}\n              initState={selectedModule.isContainerOutput}\n              onSwitch={(newState) => {\n                if (newState) {\n                  dispatch(markContainerOutput(selectedModule.id))\n                } else {\n                  dispatch(unmarkContainerOutput(selectedModule.id))\n                }\n              }}\n            />\n          </Conditional>\n        </FlexRow>\n      </Conditional>\n    </Fragment>\n  )\n}\n\nexport default MarkContainerIO","import React from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport Conditional from '../../Conditional/Conditional'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  modules: Modules\n  onClose: () => void\n}\n\nfunction FileSaveButton({ modID, modules, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Conditional showIf={modules[modID].moduleType === CONTAINER}>\n      <Button className={classes.SaveButton}\n        onClick={() => {\n          window.openFileContainerSaveMenu(modID)\n          onClose()\n        }}\n      >\n        save to file\n      </Button>\n    </Conditional>\n  )\n}\n\nexport default FileSaveButton","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport ContextMenu from '../ContextMenu/ContextMenu'\nimport DeleteButton from './ModuleDeleteButton'\nimport InputOutputView from './InputOutputView'\nimport ContainerOpenButton from './ContainerOpenButton'\nimport SpaceDBSaveButton from './SpaceDBSaveButton'\nimport { MouseDivEvent } from '../types'\nimport MarkContainerIO from './MarkContainerIO'\nimport useJSS from './style'\nimport FileSaveButton from './FileSaveButton'\n\ndeclare global {\n  interface Window {\n    openModuleContextMenu: (event: MouseDivEvent, modID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, modID?: string) {\n  return {\n    isOpen,\n    event,\n    modID,\n  }\n}\n\nfunction ModuleContextMenu() {\n  const [{ isOpen, event, modID }, setData] = useState(makeData(false))\n  window.openModuleContextMenu = (event, modID) => {\n    setData(makeData(true, event, modID)) \n  }\n  const onClose = () => {\n    setData(makeData(false)) \n  }\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <ContextMenu onClose={onClose} event={event as MouseDivEvent} isOpen={isOpen}>\n      <div className={classes.Name}\n        title='rename module'\n        onClick={() => {\n          window.openModuleRenameMenu(modID as string)\n        }}\n      >{modules[modID as string]?.name}</div>\n      <ContainerOpenButton modules={modules} modID={modID as string} onClose={onClose} />\n      <InputOutputView modID={modID as string} modules={modules}/>\n      <SpaceDBSaveButton modules={modules} modID={modID as string} onClose={onClose} />\n      <FileSaveButton modules={modules} modID={modID as string} onClose={onClose} />\n      <MarkContainerIO modID={modID as string} />\n      <DeleteButton modID={modID as string} onClose={onClose}/>\n    </ContextMenu>\n  )\n}\n\nexport default ModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ saveName, onClose }: Props) {\n  return (\n    <DeleteButton onClick={() => {\n      window.containerSaveService.remove(saveName).then((res: string) => {\n        console.log(res)\n        //window.flashNotification(r)\n        window.refreshSpaceDBModules()\n        onClose()\n      })\n    }}/>\n  )\n}\n\nexport default ModuleDeleteButton","import React, { useState } from 'react'\nimport { zIndex } from '../../../../theme/zIndex'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ModuleDeleteButton from './ModuleDeleteButton'\n\ndeclare global {\n  interface Window {\n    openSDBModuleContextMenu: (event: MouseDivEvent, saveName: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, saveName?: string) {\n  return {\n    isOpen,\n    event,\n    saveName\n  }\n}\n\nfunction SDBModuleContextMenu() {\n  const [{ isOpen, event, saveName }, setData] = useState(makeData(false))\n  window.openSDBModuleContextMenu = (event, saveName) => {\n    setData(makeData(true, event, saveName)) \n  }\n  const onClose = () => setData(makeData(false))\n  return (\n    <ContextMenu event={event as MouseDivEvent}\n      onClose={() => setData(makeData(false))}\n      bounderStyle={{ zIndex: zIndex.centerMenu + 1 }}\n      isOpen={isOpen}\n    >\n      <ModuleDeleteButton saveName={saveName as string} onClose={onClose}/>\n    </ContextMenu>\n  )\n}\n\nexport default SDBModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  setSaveList: (arg: string[]) => void\n  onClose: () => void\n}\n\nfunction ProjectDeleteButton({ saveName, setSaveList, onClose }: Props) {\n  return (\n    <DeleteButton \n      onClick={() => {\n        window.openConfirmDeleteMenu(saveName, () => {\n          window.setTimeout(() => {\n            window.projectSaveService.find().then((saveNames: string[]) => { \n              setSaveList(saveNames) \n            })\n          }, 1000)\n        })\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ProjectDeleteButton","import React, { useState } from 'react'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ProjectDeleteButton from './ProjectDeleteButton'\n\ntype SetSaveList = (arg: string[]) => void\n\ndeclare global {\n  interface Window {\n    openSDBProjectContextMenu: (\n      event: MouseDivEvent,\n      saveName: string,\n      setSaveList: SetSaveList\n    ) => void\n  }\n}\n\nexport function makeData(\n  isOpen: boolean,\n  event?: MouseDivEvent,\n  saveName?: string,\n  setSaveList?: (arg: string[]) => void\n) {\n  return {\n    isOpen,\n    event,\n    saveName,\n    setSaveList\n  }\n}\n\nfunction SDBProjectContextMenu() {\n  const [{ isOpen, event, saveName, setSaveList }, setData] = useState(makeData(false))\n  window.openSDBProjectContextMenu = (event, saveName, setSaveList) => {\n    setData(makeData(true, event, saveName, setSaveList)) \n  }\n  const onClose = () => { setData(makeData(false)) }\n  return (\n    <ContextMenu event={event as MouseDivEvent} onClose={onClose} isOpen={isOpen}>\n      <ProjectDeleteButton saveName={saveName as string} setSaveList={setSaveList as SetSaveList} onClose={onClose} />\n    </ContextMenu>\n  )\n}\n\nexport default SDBProjectContextMenu","import React, { Fragment } from 'react'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport ModuleContextMenu from './Module/ModuleContextMenu'\nimport SDBModuleContextMenu from './SpaceDB/Modules/SDBModuleContextMenu'\nimport SDBProjectContextMenu from './SpaceDB/Projects/SDBProjectContextMenu'\n\nfunction ContextMenus() {\n  return (\n    <Fragment>\n      <ModuleContextMenu />\n      <SDBProjectContextMenu />\n      <SDBModuleContextMenu />\n      <ConnectionMenu />\n    </Fragment>\n  )\n}\n\nexport default ContextMenus","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n    flexShrink: 0,\n  },\n\n  FillControls: {\n    padding: '.1em'\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    justifyContent: 'center',\n    margin: '.2em'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n\n  Pad: {\n    width: '20vmin',\n    height: '15vmin',\n    borderRadius: '2vmin',\n    backgroundColor: 'black',\n  },\n\n  SrcName: {\n    fontSize: sizes.text.xsmall,\n    textAlign: 'center',\n    whiteSpace: 'normal',\n    justifyContent: 'center',\n    width: '100%',\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n    hyphens: 'auto',\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  setFunc: (arg: string) => void\n}\n\nfunction PadControl({ setFunc }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Pad}\n      onPointerDown={e => {\n        e.preventDefault()\n        setFunc('on')\n      }}\n      onPointerCancel={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n      onPointerUp={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n    />\n  )\n}\n\nexport default PadControl","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nlet justClicked = false\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          if (e.target.value.length !== 0) {\n            const newVal = clamp(Number(e.target.value), range)\n            if (onChange) {\n              onChange(newVal)\n            }\n            setInputVal(makeValString(newVal))\n          } else {\n            if (textRef.current) {\n              textRef.current.value = inputVal\n            }\n          }\n        }}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            if (justClicked) {\n              if (textRef.current) {\n                textRef.current.placeholder = textRef.current.value\n                textRef.current.value = ''\n                textRef.current.focus()\n              }\n            } else {\n              window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n              justClicked = true\n              window.setTimeout(() => { justClicked = false }, 200)\n            }\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        title='edit knob range'\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\nimport StatelessKnob from '../../Knob/StatelessKnob'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  displayModName?: string\n  label?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName, label }: Props) {\n  const { val, currRange } = useSelector((state: RootState) => {\n    return {\n      val: state.modules[actualModID].controlData[controlID].value as number,\n      currRange: state.modules[actualModID].controlData[controlID].range as [number, number],\n    }\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(actualModID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openKnobRangeSetMenu(actualModID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(actualModID, controlID, newRange))\n          })\n        }}\n      />\n      <div\n        style={{\n          marginTop: '-.3em'\n        }}\n      >{label ? label : displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n  label?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName, label }: Props) {\n  return (\n    <Button fontSize={sizes.text.small}\n      onClick={() => {\n        setFunc('')\n      }}\n    >\n      {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n    </Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport useJSS from './style'\nimport { SetFunc, AudioModuleWithTypes, ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\n\ninterface Props {\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  controlID: string\n  label?: string\n}\n\nfunction Type({ setFunc, controlID, actualModID, modName, label }: Props) {\n  const classes = useJSS()\n  const audioModule = window.audioModules[actualModID] as ConnectingAudioModule\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  const value = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value)\n  return (\n    <FlexRow style={{ justifyContent: 'center', margin: '1vmin 0vmin' }}>\n      <label htmlFor={'type'}>{label ? label : modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={e => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(actualModID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={actualModID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </FlexRow>\n  )\n}\n\nexport default Type","import React from 'react'\nimport useJSS from './style'\nimport { sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  actualModID: string\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n  label?: string\n}\n\nfunction File({ actualModID, controlID, setFunc, reRenderIcon, modName, label }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={actualModID + controlID}\n      >\n        <Button fontSize={sizes.text.small}>\n          {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n        </Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={actualModID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[actualModID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <div className={classes.SrcName}>\n        {window.audioTags[actualModID].srcName}\n      </div>\n    </div>\n  )\n}\n\nexport default File","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Switch from '../../Switch/Switch'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  label?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName, label }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={label ? label : modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React, { useState } from 'react'\nimport Sketch from 'react-p5'\nimport p5Types from 'p5'\nimport { AnalyzerModule } from '../../../audioModules/modules/analyzer'\nimport { mapValBetweenRanges } from '../../../helpers/genFuncs'\nimport { colors, sizes } from '../../../theme/theme'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { updateControlRange } from '../../../redux/allActions'\nimport FlexCol from '../../Flex/FlexCol'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  modID: string\n}\n\nconst height = 200\n\nfunction Graph({ modID }: Props) {\n  const analyzer = window.audioModules[modID] as AnalyzerModule\n  const yRange = useSelector((state: RootState) => state.modules[modID].controlData['time graph'].range as Range)\n  const zero = height - mapValBetweenRanges(0, yRange, [0, height])\n  const [width, setWidth] = useState(0)\n\n  function setup(p5: p5Types, canvasParentRef: Element) {\n    p5.createCanvas(canvasParentRef.clientWidth, height).parent(canvasParentRef)\n    p5.textAlign(p5.CENTER, p5.CENTER)\n    p5.fill(100)\n    setWidth(canvasParentRef.clientWidth)\n  }\n\n  function draw(p5: p5Types) {\n    analyzer.audioNode.getFloatTimeDomainData(analyzer.timeArray)\n    const xStep = width / analyzer.bufferLength\n    p5.background(0) // draw black background\n\n    let currX = 0\n    let currY = height - mapValBetweenRanges(analyzer.timeArray[0], yRange, [0, height])\n    p5.stroke(colors.analyzerModuleBG)\n    p5.strokeWeight(6)\n    for (let i = 0; i < analyzer.bufferLength - 1; i++) {\n      const nextX = (i + 1) * xStep\n      const nextY = height - mapValBetweenRanges(analyzer.timeArray[i + 1], yRange, [0, height])\n      p5.line(currX, currY, nextX, nextY)\n      currX = nextX\n      currY = nextY\n    }\n\n    const zeroXStep = width / 20\n    // draw 0 indicator\n    p5.stroke(100)\n    p5.strokeWeight(1)\n    p5.line(0, zero, zeroXStep, zero)\n    p5.text('0', 1.5 * zeroXStep, zero)\n  }\n\n  const dispatch = useDispatch()\n  return (\n    <FlexCol justifyContent='center' alignItems='center'>\n      <Sketch style={{ width: sizes.moduleView.bigIconWidth }}\n        setup={setup} \n        draw={draw} \n      />\n      <Button\n        onClick={() => {\n          window.openAnalyzerRangeSetMenu(yRange, newRange => {\n            dispatch(updateControlRange(modID, 'time graph', newRange))\n          })\n        }}\n      >\n        change range\n      </Button>\n    </FlexCol>\n  )\n}\n\nexport default Graph","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  BabylonCanvas: {\n    width: ({ width }) => width,\n    height: ({ height }) => height\n  },\n})\n\nexport default useJSS","import React, { CanvasHTMLAttributes, useEffect, useRef } from 'react'\nimport { Engine, EngineOptions, Scene, SceneOptions } from '@babylonjs/core'\nimport useJSS from './style'\n\ninterface Props extends CanvasHTMLAttributes<HTMLCanvasElement> {\n  antialias?: boolean\n  engineOptions?: EngineOptions\n  adaptToDeviceRatio?: boolean\n  sceneOptions?: SceneOptions\n  onRender: (scene: Scene) => void\n  onSceneReady: (scene: Scene) => void\n  width?: string,\n  height?: string,\n}\n\nfunction BabylonCanvas({ \n  onRender, onSceneReady, \n  antialias, engineOptions, \n  adaptToDeviceRatio, sceneOptions,\n  width, height, ...rest \n}: Props) {\n  const reactCanvas = useRef<HTMLCanvasElement>(null)\n  const { BabylonCanvas } = useJSS({ width, height })\n  useEffect(() => {\n    if (reactCanvas.current) {\n      const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio)\n      const scene = new Scene(engine, sceneOptions)\n      if (scene.isReady()) {\n        if (onSceneReady) onSceneReady(scene)\n      } else {\n        scene.onReadyObservable.addOnce(scene => { if (onSceneReady) onSceneReady(scene) })\n      }\n\n      engine.runRenderLoop(() => {\n        if (typeof onRender === 'function') {\n          onRender(scene)\n        }\n        scene.render()\n      })\n\n      const resize = () => {\n        scene.getEngine().resize()\n      }\n\n      if (window) {\n        window.addEventListener('resize', resize)\n      }\n\n      return () => {\n        scene.getEngine().dispose()\n\n        if (window) {\n          window.removeEventListener('resize', resize)\n        }\n      }\n    }\n  }, [adaptToDeviceRatio, antialias, engineOptions, onRender, onSceneReady, sceneOptions])\n\n  return (\n    <canvas className={BabylonCanvas}\n      ref={reactCanvas} \n      {...rest} \n    />\n  )\n}\n\nexport default BabylonCanvas","import { stringIn } from \"../helpers/genFuncs\"\n\nexport function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return !stringIn(entry[0], idsToFilterOut)\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return stringIn(entry[0], idsToKeep)\n  }))\n}\n\nexport function ObjFrom2Arrays(keys: string[], entries: any[]) {\n  if (keys.length === entries.length) {\n    return Object.fromEntries(keys.map((id, index) => {\n      return [id, entries[index]]\n    }))\n  }\n  return {}\n}","import { ObjFrom2Arrays } from \"../redux/helpers\"\n\nexport const notes: { [index: string]: number } = {\n  \"C0\": 16.35,\n  \"C#0\": 17.32,\n  \"Db0\": 17.32,\n  \"D0\": 18.35,\n  \"D#0\": 19.45,\n  \"Eb0\": 19.45,\n  \"E0\": 20.60,\n  \"F0\": 21.83,\n  \"F#0\": 23.12,\n  \"Gb0\": 23.12,\n  \"G0\": 24.50,\n  \"G#0\": 25.96,\n  \"Ab0\": 25.96,\n  \"A0\": 27.50,\n  \"A#0\": 29.14,\n  \"Bb0\": 29.14,\n  \"B0\": 30.87,\n  \"C1\": 32.70,\n  \"C#1\": 34.65,\n  \"Db1\": 34.65,\n  \"D1\": 36.71,\n  \"D#1\": 38.89,\n  \"Eb1\": 38.89,\n  \"E1\": 41.20,\n  \"F1\": 43.65,\n  \"F#1\": 46.25,\n  \"Gb1\": 46.25,\n  \"G1\": 49.00,\n  \"G#1\": 51.91,\n  \"Ab1\": 51.91,\n  \"A1\": 55.00,\n  \"A#1\": 58.27,\n  \"Bb1\": 58.27,\n  \"B1\": 61.74,\n  \"C2\": 65.41,\n  \"C#2\": 69.30,\n  \"Db2\": 69.30,\n  \"D2\": 73.42,\n  \"D#2\": 77.78,\n  \"Eb2\": 77.78,\n  \"E2\": 82.41,\n  \"F2\": 87.31,\n  \"F#2\": 92.50,\n  \"Gb2\": 92.50,\n  \"G2\": 98.00,\n  \"G#2\": 103.83,\n  \"Ab2\": 103.83,\n  \"A2\": 110.00,\n  \"A#2\": 116.54,\n  \"Bb2\": 116.54,\n  \"B2\": 123.47,\n  \"C3\": 130.81,\n  \"C#3\": 138.59,\n  \"Db3\": 138.59,\n  \"D3\": 146.83,\n  \"D#3\": 155.56,\n  \"Eb3\": 155.56,\n  \"E3\": 164.81,\n  \"F3\": 174.61,\n  \"F#3\": 185.00,\n  \"Gb3\": 185.00,\n  \"G3\": 196.00,\n  \"G#3\": 207.65,\n  \"Ab3\": 207.65,\n  \"A3\": 220.00,\n  \"A#3\": 233.08,\n  \"Bb3\": 233.08,\n  \"B3\": 246.94,\n  \"C4\": 261.63,\n  \"C#4\": 277.18,\n  \"Db4\": 277.18,\n  \"D4\": 293.66,\n  \"D#4\": 311.13,\n  \"Eb4\": 311.13,\n  \"E4\": 329.63,\n  \"F4\": 349.23,\n  \"F#4\": 369.99,\n  \"Gb4\": 369.99,\n  \"G4\": 392.00,\n  \"G#4\": 415.30,\n  \"Ab4\": 415.30,\n  \"A4\": 440.00,\n  \"A#4\": 466.16,\n  \"Bb4\": 466.16,\n  \"B4\": 493.88,\n  \"C5\": 523.25,\n  \"C#5\": 554.37,\n  \"Db5\": 554.37,\n  \"D5\": 587.33,\n  \"D#5\": 622.25,\n  \"Eb5\": 622.25,\n  \"E5\": 659.26,\n  \"F5\": 698.46,\n  \"F#5\": 739.99,\n  \"Gb5\": 739.99,\n  \"G5\": 783.99,\n  \"G#5\": 830.61,\n  \"Ab5\": 830.61,\n  \"A5\": 880.00,\n  \"A#5\": 932.33,\n  \"Bb5\": 932.33,\n  \"B5\": 987.77,\n  \"C6\": 1046.50,\n  \"C#6\": 1108.73,\n  \"Db6\": 1108.73,\n  \"D6\": 1174.66,\n  \"D#6\": 1244.51,\n  \"Eb6\": 1244.51,\n  \"E6\": 1318.51,\n  \"F6\": 1396.91,\n  \"F#6\": 1479.98,\n  \"Gb6\": 1479.98,\n  \"G6\": 1567.98,\n  \"G#6\": 1661.22,\n  \"Ab6\": 1661.22,\n  \"A6\": 1760.00,\n  \"A#6\": 1864.66,\n  \"Bb6\": 1864.66,\n  \"B6\": 1975.53,\n  \"C7\": 2093.00,\n  \"C#7\": 2217.46,\n  \"Db7\": 2217.46,\n  \"D7\": 2349.32,\n  \"D#7\": 2489.02,\n  \"Eb7\": 2489.02,\n  \"E7\": 2637.02,\n  \"F7\": 2793.83,\n  \"F#7\": 2959.96,\n  \"Gb7\": 2959.96,\n  \"G7\": 3135.96,\n  \"G#7\": 3322.44,\n  \"Ab7\": 3322.44,\n  \"A7\": 3520.00,\n  \"A#7\": 3729.31,\n  \"Bb7\": 3729.31,\n  \"B7\": 3951.07,\n  \"C8\": 4186.01,\n  \"C#8\": 4434.92,\n  \"Db8\": 4434.92,\n  \"D8\": 4698.64,\n  \"D#8\": 4978.03,\n  \"Eb8\": 4978.03\n}\n\nconst keysNoSharp = Object.keys(notes).filter(note => note.length <= 2 || note[1] !== '#')\n\nexport const notesNoSharp = ObjFrom2Arrays(\n  keysNoSharp,\n  keysNoSharp.map(note => notes[note])\n)\n\nexport const noteIndices = ObjFrom2Arrays(keysNoSharp, keysNoSharp.map((note, index) => index))","import { AbstractMesh, Color3, MeshBuilder, Plane, Scene, StandardMaterial, TransformNode } from \"@babylonjs/core\"\nimport { AdvancedDynamicTexture, TextBlock } from \"babylonjs-gui\"\nimport { Range } from \"../../../../audioModules/moduleTypes\"\nimport { mapValBetweenRanges } from \"../../../../helpers/genFuncs\"\nimport { noteIndices, notes, notesNoSharp } from \"../../../../helpers/notes\"\n\nexport const noteFreqRange = [Math.log(notes['C1']), Math.log(notes['C5'])] as Range\nexport const dialRange = [0, 2 * Math.PI * .95] as Range\n\nexport const diameter = 1600\nconst height = 160\n\nfunction makeTextPlane(name: string, text: string, width: number, fontSize: number) {\n  const textPlane = MeshBuilder.CreatePlane(name, {\n    width,\n    height: 40,\n    sourcePlane: new Plane(1, 0, 0, 0)\n  })\n  const textMat = AdvancedDynamicTexture.CreateForMesh(textPlane)\n  const textBlock = new TextBlock(`${name}text`, text)\n  textBlock.fontSize = fontSize\n  textBlock.width = width\n  textBlock.height = 50\n  textBlock.color = 'black'\n  textMat.addControl(textBlock)\n  return textPlane\n}\n\nfunction makeDial(scene: Scene) {\n  const dialMat = new StandardMaterial('dialMat', scene)\n  const tickMat = new StandardMaterial('tickMat', scene)\n  tickMat.diffuseColor = new Color3(0, .5, 0)\n\n  const dial = MeshBuilder.CreateCylinder('dial', {\n    height,\n    diameter,\n    tessellation: Math.pow(2, 7),\n  }, scene)\n  dial.material = dialMat\n  dial.cullingStrategy = AbstractMesh.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION\n  Object.keys(notesNoSharp).filter((note, index) => index >= noteIndices['C1'] && index <= noteIndices['C5']).forEach(note => {\n    const tickPos = mapValBetweenRanges(Math.log(notes[note]), noteFreqRange, dialRange)\n    const tickNode = new TransformNode(`${note}node`)\n    //tickNode.position.y = -10\n    const tick = MeshBuilder.CreateBox(`${note}tick`, {\n      height: height/2,\n      width: 2,\n      depth: 10,\n    })\n    tick.material = tickMat\n    tick.position.x = diameter / 2 + 2\n    tick.parent = tickNode\n    tickNode.rotation.y = -tickPos\n    tickNode.parent = dial\n\n    const noteTextPlane = makeTextPlane(`${note}textplane`, note, 50, 450)\n    noteTextPlane.position.y = height/2 - 20\n    noteTextPlane.parent = tick\n\n    const freqTextPlane = makeTextPlane(`${note}freqplane`, `${notes[note]}`.slice(0, Math.min(`${notes[note]}`.length, 5)), 50, 400)\n    freqTextPlane.position.y = - height/2 + 20\n    freqTextPlane.parent = tick\n  })\n}\n\nexport default makeDial","import { Color3, Color4, Mesh, PointLight, TargetCamera, Vector3 } from '@babylonjs/core'\nimport React from 'react'\nimport { TunerModule } from '../../../../audioModules/modules/tuner'\nimport { Range, TUNER } from '../../../../audioModules/moduleTypes'\nimport { clamp, mapValBetweenRanges } from '../../../../helpers/genFuncs'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { sizes } from '../../../../theme/theme'\nimport BabylonCanvas from '../../../BabylonCanvas/BabylonCanvas'\nimport makeDial, { dialRange, diameter, noteFreqRange } from './makeDial'\n\n\ninterface Props {\n  modID: string\n}\n\nfunction Tuner({ modID }: Props) {\n  let target = -.1\n  let frame = 0\n  const tuner = window.audioModules[modID] as TunerModule\n  return (\n    <BabylonCanvas\n      onSceneReady={scene => {\n        // set background / ambient color\n        scene.clearColor = Color4.FromHexString(getModuleColor(TUNER) as string)\n        scene.ambientColor = new Color3(.5, .5, .5)\n\n        // setup camera\n        const camPos = new Vector3(diameter/2 + 200, 0, 0)\n        const camera = new TargetCamera('tunerCam', camPos, scene)\n        //camera.fov = Math.PI / 3\n        camera.setTarget(new Vector3(0, 0, 0))\n\n        // setup lighting\n        const lightPos = new Vector3(1110.5, 300, 0)\n        //const light= new PointLight('light', lightPos, scene)\n        const light = new PointLight('light', lightPos, scene)\n        light.diffuse = new Color3(1, 0, 0)\n        light.specular = new Color3(0, .1, 0)\n\n        //make dial\n        makeDial(scene)\n        \n      }}\n      onRender={scene => {\n        if (frame === 0) {\n          const [maxFreq, maxdB] = tuner.controlSetFuncs['tuner']('') as Range\n          if (maxdB > -75) {\n            target = mapValBetweenRanges(clamp(Math.log(maxFreq), noteFreqRange as Range), noteFreqRange, dialRange)\n          } else {\n            target = -.15\n          }\n        }\n        const dial = scene.getMeshByName('dial') as Mesh\n        dial.rotation.y += .1 * (target - dial.rotation.y)\n        frame = (frame + 1) % 30\n      }}\n      style={{\n        borderRadius: '.8em',\n        marginTop: '1em',\n      }}\n      width={sizes.moduleView.bigIconWidth}\n      height='200px'\n    />\n  )\n}\n\nexport default Tuner","import { Mesh, MeshBuilder, Scene, StandardMaterial, VertexBuffer } from \"@babylonjs/core\";\nimport { multiply } from \"mathjs\";\nimport { clamp, GetAzimXZ, mapValBetweenRanges } from \"../../../../helpers/genFuncs\";\n\nexport const diameter = 100\n\nexport type Position = [number, number, number]\nexport type NumberIndexedObj = { [index: number]: number }\n\nexport function stepSpherePosition(sphere: Mesh, prevArray: number[], targetArray: number[], rate: number) {\n  // rate should be [0, 1], prob pretty low\n  const newPositionArray = prevArray.map((val, index) => {\n    return val + rate * (targetArray[index] - val)\n  })\n  sphere.updateVerticesData(VertexBuffer.PositionKind, newPositionArray)\n  return newPositionArray\n}\n\nexport function getSphereTargetArray(originalPositions: number[], sourceArray: Float32Array, sphereIndexCorrelator: NumberIndexedObj, scale: number, offset: number) {\n  let targetArray: number[] = []\n  for (let i = 0; i < originalPositions.length; i += 3) {\n    const position: Position = [originalPositions[i], originalPositions[i + 1], originalPositions[i + 2]]\n    const target = makeTargetForPoint(position, i, sphereIndexCorrelator, sourceArray, scale, offset)\n    targetArray.push(...target)\n  }\n  return targetArray\n}\n\nexport function makeSphereAndIndexCorrelator(scene: Scene, bufferLength: number, subdivisisions: number) {\n  const sphere = MeshBuilder.CreateSphere('sphere', {\n    segments: Math.pow(2, 6),\n    diameter,\n    updatable: true\n  }, scene)\n  const mat = new StandardMaterial('sphereMat', scene)\n  sphere.material = mat\n  return makeSphereIndexCorrelator(sphere, bufferLength, subdivisisions)\n}\n\nfunction makeSphereIndexCorrelator(sphere: Mesh, bufferLength: number, subdivisions: number) {\n  const positions = sphere.getVerticesData(VertexBuffer.PositionKind)\n  const indexCorrelator: NumberIndexedObj = {}\n  if (positions) {\n    for (let i = 0; i < positions.length; i += 3) {\n      const azim = GetAzimXZ(positions[i], positions[i+2])\n      indexCorrelator[i] = Math.floor(mapValBetweenRanges(\n        azim % (2 * Math.PI / subdivisions), \n        [0, 2 * Math.PI / subdivisions], \n        [0, bufferLength / 16]\n      ))\n    }\n  }\n  return indexCorrelator\n}\n\nfunction makeTargetForPoint(position: Position, index: number, sphereIndexCorrelator: NumberIndexedObj, sourceArray: Float32Array, scale: number, offset: number) {\n  const positionScale = clamp(scale * (sourceArray[sphereIndexCorrelator[index]] + offset), [.1, 2])\n  return multiply(position, positionScale)\n}\n\n","import { Color3, Color4, Mesh, PointLight, TargetCamera, Vector3, VertexBuffer } from '@babylonjs/core'\nimport React from 'react'\nimport { VisualizerModule } from '../../../../audioModules/modules/visualizer'\nimport { sizes } from '../../../../theme/theme'\nimport BabylonCanvas from '../../../BabylonCanvas/BabylonCanvas'\nimport { diameter, getSphereTargetArray, stepSpherePosition, makeSphereAndIndexCorrelator, NumberIndexedObj } from './helpers'\n\ninterface Props {\n  modID: string\n}\n\nfunction Visualizer({ modID }: Props) {\n  const visualizer = window.audioModules[modID] as VisualizerModule\n  let frame = 0\n  let indexCorrelator: NumberIndexedObj = {}\n  let originalPositions: number[] = []\n  let targetArray: number[] = []\n  let prevArray: number[] = []\n  return (\n    <BabylonCanvas\n      onSceneReady={scene => {\n        // set background / ambient color\n        scene.clearColor = new Color4(0, 0, 0)\n        scene.ambientColor = new Color3(.5, .5, .5)\n\n        // create camera\n        const camPos = new Vector3(diameter/2 + 200, 0, 0)\n        const camera = new TargetCamera('cam', camPos, scene)\n        camera.setTarget(new Vector3(0, 0, 0))\n\n        //setup light\n        const lightPos = new Vector3(diameter/2 + 200, 300, 0)\n        const light = new PointLight('light', lightPos, scene)\n        light.diffuse = new Color3(1, 0, 0)\n        light.specular = new Color3(0, .1, 0)\n\n        indexCorrelator = makeSphereAndIndexCorrelator(scene, visualizer.bufferLength, 3)\n        originalPositions = scene.getMeshByName('sphere')?.getVerticesData(VertexBuffer.PositionKind) as number[]\n        targetArray = [...originalPositions]\n        prevArray = [...originalPositions]\n      }}\n      onRender={scene => {\n        const sphere = scene.getMeshByName('sphere') as Mesh\n        sphere.rotation.y += .01\n        if (frame === 0) {\n          visualizer.controlSetFuncs['visualizer-update']('')\n          targetArray = getSphereTargetArray(originalPositions, visualizer.freqArray, indexCorrelator, 1/100, 200)\n        }\n        prevArray = stepSpherePosition(sphere, prevArray, targetArray, 1/10)\n        frame = (frame + 1) % 15\n      }}\n      style={{\n        borderRadius: '.8em',\n        marginTop: '1em',\n      }}\n      width={sizes.moduleView.bigIconWidth}\n      height='200px'\n    />\n  )\n}\n\nexport default Visualizer","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, GRAPH, PAD, TUNER_CONTROL, VISUALIZER_CONTROL } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport PadControl from './controls/Pad'\nimport ValueControl from './controls/Value'\nimport ButtonControl from './controls/Button'\nimport TypeControl from './controls/Type'\nimport FileControl from './controls/File'\nimport SwitchControl from './controls/Switch'\nimport GraphControl from './controls/Graph'\nimport TunerControl from './controls/Tuner/Tuner'\nimport VisualizerControl from './controls/Visualizer/Visualizer'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id}/>\n            :\n            controlType === BUTTON && controlID !== 'open'\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} actualModID={selectedModule.id}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={selectedModule.id} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            controlType === TUNER_CONTROL\n            ?\n            <TunerControl modID={selectedModule.id} />\n            :\n            controlType === VISUALIZER_CONTROL\n            ?\n            <VisualizerControl modID={selectedModule.id} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import React, { Fragment } from 'react'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH, GRAPH, PAD, TUNER_CONTROL, VISUALIZER_CONTROL } from '../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport useJSS from './style'\nimport PadControl from './controls/Pad'\nimport ValueControl from './controls/Value'\nimport ButtonControl from './controls/Button'\nimport TypeControl from './controls/Type'\nimport FileControl from './controls/File'\nimport SwitchControl from './controls/Switch'\nimport GraphControl from './controls/Graph'\nimport TunerControl from './controls/Tuner/Tuner'\nimport VisualizerControl from './controls/Visualizer/Visualizer'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRender: () => void\n}\n\nfunction AllContainerControls({ selectedModule, reRender }: Props) {\n  const modules = useSelector((state: RootState) => state.modules)\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID, name }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType } = modules[actualModID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const modName = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={modName} label={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={modName} label={name}/>\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRender} modName={modName} actualModID={actualModID} label={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={actualModID} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            controlType === TUNER_CONTROL\n            ?\n            <TunerControl modID={actualModID} />\n            :\n            controlType === VISUALIZER_CONTROL\n            ?\n            <VisualizerControl modID={actualModID} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AllContainerControls","import React from 'react'\nimport useJSS from './style'\nimport { ContainerModule } from '../../redux/stateTSTypes'\nimport AllContainerControls from './AllContainerControls'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <AllContainerControls selectedModule={selectedModule} reRender={reRenderIcon} />\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.icon,\n    height: sizes.moduleView.icon,\n    padding: '.5vmin',\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n})\n\nexport default useJSS","import { CONTAINER } from \"../../audioModules/moduleTypes\"\nimport { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}\n\nfunction onlyOneOutput(fromID: string, modules: Modules): boolean | string { // returns the string of the actual output id, or false\n  if (modules[fromID].moduleType === CONTAINER) {\n    if (modules[fromID].connectionOutputs.length === 1) {\n      return onlyOneOutput(modules[fromID].connectionOutputs[0], modules)\n    } else {\n      return false\n    }\n  } else {\n    if (modules[fromID].connectionOutputs.length === 1) {\n      return fromID\n    } else {\n      return false\n    }\n  }\n}\n\nfunction onlyOneInput(toID: string, modules: Modules): boolean | string {\n  if (modules[toID].moduleType === CONTAINER) {\n    if (modules[toID].connectionInputs.length === 1) {\n      return onlyOneInput(modules[toID].connectionInputs[0], modules)\n    } else {\n      return false\n    }\n  } else {\n    if (modules[toID].connectionInputs.length === 1 && window.audioModules[toID].connectingParamIDs.length === 0) {\n      return toID\n    } else {\n      return false\n    }\n  }\n}\n\nexport function onlyOneConnectionOption(fromID: string, toID: string, modules: Modules) {\n  const actualFromID = onlyOneOutput(fromID, modules)\n  const actualToID = onlyOneInput(toID, modules)\n  return {\n    onlyOne: typeof(actualFromID) === 'string' && typeof(actualToID) === 'string',\n    actualFromID,\n    actualToID\n  }\n}","import { RootState, ContainerModule, Modules, Connections } from \"./stateTSTypes\";\nimport { CONTAINER } from \"../audioModules/moduleTypes\";\nimport { keepOnlyIdsInObj } from \"./helpers\";\nimport { bothStringsIn } from \"../helpers/genFuncs\";\n\nfunction getChildrenRecursive(containerID: string, modules: Modules): string[] {\n  const childIDs = (modules[containerID] as ContainerModule).childModules\n  let containerChildIDs: string[] = []\n  for (const i in childIDs) {\n    if (modules[childIDs[i]].moduleType === CONTAINER) {\n      containerChildIDs = [...containerChildIDs, ...getChildrenRecursive(childIDs[i], modules) ]\n    }\n  }\n  return [ ...childIDs, ...containerChildIDs ]\n}\n\nexport function getContainerIDs(containerID: string, modules: Modules) {\n  return [ containerID, ...getChildrenRecursive(containerID, modules) ]\n}\n\nexport function getInternalConnectionIDs(connections: Connections, trimmedIDs: string[]) {\n  const allConnectionIDs = Object.keys(connections)\n  let connectionIDs: string[] = []\n  for (const i in allConnectionIDs) {\n    const { fromID, toID, actualOutputID, actualInputID } = connections[allConnectionIDs[i]]\n    const actualFromID = actualOutputID ? actualOutputID : fromID // actualIDs undefined if no containers involved in connection\n    const actualToID = actualInputID ? actualInputID : toID\n    if (bothStringsIn(actualFromID, actualToID, trimmedIDs)) {\n      connectionIDs = [...connectionIDs, allConnectionIDs[i]]\n    }\n  }\n  return connectionIDs\n}\n\nfunction getInternalConnections(connections: Connections, trimmedIDs: string[]) {\n  return keepOnlyIdsInObj(connections, getInternalConnectionIDs(connections, trimmedIDs)) as Connections\n}\n\nexport function getContainerModulesConnections(state: RootState, containerID: string) {\n  const trimmedIDs = [containerID, ...getChildrenRecursive(containerID, state.modules)]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    modules: trimmedModules,\n    connections: trimmedConnections,\n  }\n}\n\n\nexport function getContainerAsProject(state: RootState, containerID: string) {\n  const trimmedIDs = [ containerID, ...getChildrenRecursive(containerID, state.modules) ]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    baseContainerID: containerID,\n    modules: {\n      ...trimmedModules,\n      [containerID]: {\n        ...trimmedModules[containerID],\n        isBaseContainer: true,\n        parentID: null,\n      },\n    },\n    connections: trimmedConnections\n  }\n}","import {\n  ModuleType,\n  OSCILLATOR,\n  OUTPUT, GAIN,\n  AUTOFILTER,\n  KOMPRESSOR,\n  STEREO_PANNER,\n  SIGNAL_DELAY,\n  CONSTANT,\n  MEDIA_ELEMENT,\n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n  TUNER,\n  VISUALIZER,\n} from './moduleTypes'\nimport makeConstantSource from './modules/constant'\nimport makeAutoFilter from './modules/autoFilter'\nimport makeOutput from './modules/output'\nimport makeStereoPanner from './modules/stereoPanner'\nimport makeSignalDelay from './modules/signalDelay'\nimport makeKompressor from './modules/kompressor'\nimport makeGain from './modules/gain'\nimport makeOscillator from './modules/oscillator'\nimport makeLineInput from './modules/lineInput'\nimport makeContainer from './modules/container'\nimport makeDistortion from './modules/distortion'\nimport makeAnalyzer from './modules/analyzer'\nimport makeEnvelopedTrigger from './modules/envelopedTrigger'\nimport makeWhiteNoise from './modules/whiteNoise'\nimport makeTuner from './modules/tuner'\nimport makeVisualizer from './modules/visualizer'\n\n\nfunction restoreAudioModule(id: string, moduleType: ModuleType, prevControlData: ControlData) {\n  switch (moduleType) {\n    case OSCILLATOR:\n      const osc = makeOscillator(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: osc }\n      break\n    case GAIN:\n      const gain = makeGain(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: gain }\n      break\n    case OUTPUT:\n      const output = makeOutput(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: output }\n      break\n    case AUTOFILTER:\n      const filter = makeAutoFilter(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: filter }\n      break\n    case KOMPRESSOR:\n      const komp = makeKompressor(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: komp }\n      break\n    case STEREO_PANNER:\n      const panner = makeStereoPanner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: panner }\n      break\n    case SIGNAL_DELAY:\n      const delay = makeSignalDelay(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: delay }\n      break\n    case CONSTANT:\n      const constant = makeConstantSource(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: constant }\n      break\n    case MEDIA_ELEMENT:\n      window.addAudioTag(id)\n      if (window.reRenderAudioTags) window.reRenderAudioTags()\n      break\n    case LINE_IN:\n      makeLineInput(id)\n      break;\n    case CONTAINER:\n      const container = makeContainer(id)\n      window.audioModules = { ...window.audioModules, [id]: container };\n      break\n    case DISTORTION:\n      const distortion = makeDistortion(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: distortion }\n      break\n    case ANALYZER:\n      const analyzer = makeAnalyzer(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: analyzer }\n      break\n    case ENVELOPED_TRIGGER:\n      const envelopedTrigger = makeEnvelopedTrigger(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n      break\n    case WHITE_NOISE:\n      const whiteNoise = makeWhiteNoise(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n      break\n    case TUNER:\n      const tuner = makeTuner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: tuner }\n      break\n    case VISUALIZER:\n      const visualizer = makeVisualizer(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: visualizer }\n      break\n  }\n}\n\n\nexport default restoreAudioModule","import { Connections, Modules } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect } from \"./connection\"\n\nfunction mergeExistingContainerAM(modules: Modules, connections: Connections) {\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        window.setTimeout(() => {\n          connect(\n            window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n            window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n            param,\n            outputIndex,\n            inputIndex,\n          )\n        }, 200)\n      }\n    })\n  }\n}\n\nexport default mergeExistingContainerAM","function genRandomID(index: number, totNumber: number) {\n  return `${totNumber}${index}${Math.floor(20480 * Math.random())}`\n}\n\nexport default genRandomID","import { Modules, Connections, ContainerModule, RootState } from \"./stateTSTypes\"\nimport { ObjFrom2Arrays } from \"./helpers\"\nimport { stringIn } from \"../helpers/genFuncs\"\nimport { CONTAINER } from \"../audioModules/moduleTypes\"\nimport { Dispatch } from 'redux'\nimport { mergeContainer } from './allActions'\nimport { getContainerModulesConnections } from \"./getContainerAsProject\"\nimport mergeExistingContainerAM from \"../audioModules/mergeExistingAM\"\nimport genRandomID from \"./idGen\"\n\n\nfunction getReplicatedState(modules: Modules, connections: Connections, totNumberModules: number, totNumberConnections: number) {\n  // this function returns a copy of modules and connections, but with all modIDs and connectionIDs replaced.\n  // this is done so no IDs conflict when the new modules/connections are merged into the active redux state\n  const modIDs = Object.keys(modules)\n  const connectionIDs = Object.keys(connections)\n  const modIDConverter = ObjFrom2Arrays(modIDs, modIDs.map((modID, index) => {\n    return genRandomID(index, totNumberModules)\n  }))\n  const connectionIDConverter = ObjFrom2Arrays(connectionIDs, connectionIDs.map((connectionID, index) => {\n    return genRandomID(index, totNumberConnections)\n  }))\n  const newModules = ObjFrom2Arrays(Object.values(modIDConverter), modIDs.map(modID => {\n    if (modules[modID].moduleType === CONTAINER) {\n      const containerMod = modules[modID] as ContainerModule\n      return {\n        ...containerMod,\n        id: modIDConverter[modID],\n        inputs: containerMod.inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: containerMod.outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        containerControls: containerMod.containerControls\n          .map(containerControl => {\n            return {\n              ...containerControl,\n              modID: modIDConverter[containerControl.modID],\n              actualModID: modIDConverter[containerControl.actualModID],\n            }\n          }),\n        childModules: containerMod.childModules.map(id => modIDConverter[id]),\n        parentID: modules[modID].parentID ? modIDConverter[modules[modID].parentID as string] : null,\n        connectionOutputs: modules[modID].connectionOutputs.map(outputID => modIDConverter[outputID]),\n        connectionInputs: modules[modID].connectionInputs.map(inputID => modIDConverter[inputID])\n      }\n    } else {\n      return {\n        ...modules[modID],\n        id: modIDConverter[modID],\n        inputs: modules[modID].inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: modules[modID].outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        parentID: modIDConverter[modules[modID].parentID as string]\n      }\n    }\n  }))\n  const newConnections = ObjFrom2Arrays(Object.values(connectionIDConverter), connectionIDs.map(connectionID => {\n    const connection = connections[connectionID]\n    return {\n      ...connection,\n      fromID: modIDConverter[connection.fromID],\n      toID: modIDConverter[connection.toID],\n      actualOutputID: connection.actualOutputID ? modIDConverter[connection.actualOutputID] : undefined,\n      actualInputID: connection.actualInputID ? modIDConverter[connection.actualInputID] : undefined,\n    }\n  }))\n  return {\n    modIDConverter,\n    newModules,\n    newConnections,\n  }\n}\n\nexport function performContainerMerge(dispatch: Dispatch, modulesToMerge: Modules, connectionsToMerge: Connections, totNumberModules: number, totNumberConnections: number, parentID: string, containerID: string, row: number, col: number) {\n  // this function makes a copy of state with above function, then restores all modules and connections,\n  // and dispatches an action to merge the copied state with the full project state \n  const { modIDConverter, newModules, newConnections } = getReplicatedState(modulesToMerge, connectionsToMerge, totNumberModules, totNumberConnections)\n  mergeExistingContainerAM(newModules, newConnections)\n  dispatch(mergeContainer(modIDConverter[containerID], newModules, newConnections, parentID, row, col))\n}\n\nexport function duplicateContainer(dispatch: Dispatch, state: RootState, parentID: string, containerID: string, row: number, col: number) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const totNumberModules = Object.keys(state.modules).length\n  const totNumberConnections = Object.keys(state.connections).length\n  performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n}\n\nexport function loadSavedContainer(dispatch: Dispatch, name: string, totNumberModules: number, totNumberConnections: number, parentID: string, row: number, col: number) {\n  window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n    performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n  })\n}\n\nexport function loadProjectAsContainer(dispatch: Dispatch, currState: RootState, parentID: string, row: number, col: number, stateToRestore: RootState) {\n  // used for loading in projects as containers within an existing project\n  const { modules, connections, baseContainerID } = stateToRestore\n  const totNumberModules = Object.keys(currState.modules).length\n  const totNumberConnections = Object.keys(currState.connections).length\n  const { newModules, newConnections } = getReplicatedState(modules, connections, totNumberModules, totNumberConnections)\n  const goodNewModules = {\n    ...newModules,\n    [baseContainerID]: {\n      ...newModules[baseContainerID],\n      isBaseContainer: false,\n      parentID,\n    }\n  }\n  dispatch(mergeContainer(baseContainerID, goodNewModules, newConnections, parentID, row, col))\n}","import { RootState } from \"./stateTSTypes\"\nimport genRandomID from './idGen'\nimport { Dispatch } from 'redux'\nimport { addModule } from './allActions'\nimport { ModuleType } from \"../audioModules/moduleTypes\"\nimport restoreAudioModule from \"../audioModules/restoreAudioModule\"\n\nfunction duplicateModule(dispatch: Dispatch, state: RootState, modID: string, row: number, col: number) {\n  const newID = genRandomID(0, Object.keys(state.modules).length)\n  const { name, moduleType, controlData, parentID, connectionInputs, connectionOutputs } = state.modules[modID]\n  restoreAudioModule(newID, moduleType as ModuleType, controlData)\n  dispatch(addModule(newID, name, moduleType as ModuleType, controlData, parentID as string, row, col, connectionInputs, connectionOutputs))\n}\n\nexport default duplicateModule","import { DragEvent } from 'react'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { Dispatch } from 'redux'\nimport { ModuleType, CONTAINER } from '../../audioModules/moduleTypes'\nimport { moveModule } from '../../redux/allActions'\nimport { duplicateContainer, performContainerMerge } from '../../redux/replicateContainer'\nimport { MOVE, COPY } from './DropSquare'\nimport { ADD_MODULE } from '../../redux/modules/moduleActionTypes'\nimport duplicateModule from '../../redux/replicateModule'\n\nexport const CONTAINER_RESTORE = 'CONTAINER_RESTORE'\n\nexport function onDrop(e: DragEvent<HTMLDivElement>, dispatch: Dispatch, state: RootState, row: number, col: number, setHL: (isHL: boolean) => void) {\n  const id = e.dataTransfer.getData('id')\n  const fc = state.modules[window.fillContainerID] as ContainerModule\n  const currentChildren = fc.childModules\n  const possiblyMod = state.modules[id]\n  const possiblyOccupyingID = isOccupied(row, col, currentChildren, state.modules)\n  if (!possiblyMod) {\n    if (!possiblyOccupyingID) {\n      const dropType = e.dataTransfer.getData('type')\n      const name = e.dataTransfer.getData('name')\n      switch(dropType) {\n        case ADD_MODULE:\n          const moduleType = e.dataTransfer.getData('moduleType') as ModuleType\n          window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n          break\n        case CONTAINER_RESTORE:\n          const totNumberModules = Object.keys(state.modules).length\n          const totNumberConnections = Object.keys(state.connections).length\n          window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n            performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n          })\n          break\n      }\n      setHL(false)\n    }\n  } else if (possiblyOccupyingID) {\n    const fromRow = e.dataTransfer.getData('fromRow')\n    const fromCol = e.dataTransfer.getData('fromCol')\n    setHL(false)\n    dispatch(moveModule(id, row, col))\n    dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n    window.setTimeout(window.refreshArcherContainer, 1)\n  } else {\n    const moduleDragType = e.dataTransfer.getData('type')\n    setHL(false)\n    switch (moduleDragType) {\n      case MOVE:\n        dispatch(moveModule(id, row, col))\n        break\n      case COPY:\n        if (state.modules[id].moduleType === CONTAINER) {\n          duplicateContainer(dispatch, state, window.fillContainerID, id, row, col)\n        } else {\n          duplicateModule(dispatch, state, id, row, col)\n        }\n        break\n    }\n    window.setTimeout(window.refreshArcherContainer, 1)\n  }\n}","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { onDrop } from './callbacks'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n// drag types\nexport const MOVE = 'MOVE'\nexport const COPY = 'COPY'\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const state = useSelector((state: RootState) => state)\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length >= 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        setHL(false)\n        /* if (e.dataTransfer.types.length >= 3) {\n          setHL(false)\n        } */\n      }}\n      onDrop={e => {\n        onDrop(e, dispatch, state, row, col, setHL)\n      }}\n      onContextMenu={e => {\n        e.preventDefault()\n        window.openAddModuleMenu(row, col)\n      }}\n      onPointerEnter={e => {\n        e.preventDefault()\n        setHL(true)\n      }}\n      onPointerLeave={e => {\n        e.preventDefault()\n        setHL(false)\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\nimport { bothStringsIn } from '../../helpers/genFuncs'\nimport { iconOnDrop, iconOnDragStart } from './callbacks'\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isLarge, setLarge] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  const reRenderIcon = () => { toReRender(!reRender) }\n\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    width: isLarge ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isLarge ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon\n  }\n\n  const iconStyle = Object.assign({}, archerElementStyle, {\n    borderStyle: isLarge ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n  })\n\n  const nameStyle: CSS.Properties = {\n    fontSize: sizes.text.small,\n  }\n  \n  /*\n  const nameSpring = useSpring({\n    fontSize: isLarge ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n  */\n\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <div \n        className={classes.Icon} \n        style={iconStyle}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          iconOnDrop(e, modules, connections, mod, dispatch)\n        }}\n        draggable={!isLarge}\n        onDragStart={e => {\n          iconOnDragStart(e, mod)\n        }}\n        onClick={e => {\n          e.stopPropagation()\n          setLarge(!isLarge)\n          window.setTimeout(window.refreshArcherContainer, 0)\n        }}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openModuleContextMenu(e, mod.id)\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <div className={classes.IconName} style={nameStyle} onClick={e => {\n          if (isLarge) {\n            e.stopPropagation()\n            window.openModuleRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </div>\n        {\n        !isLarge ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          {mod.moduleType !== CONTAINER ? <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} /> : null}\n        </div>\n        }\n      </div>\n      <div className={classes.ArcherElement}\n        style={archerElementStyle}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.filter(connectionID => {\n              const { fromID, toID } = connections[connectionID]\n              return bothStringsIn(fromID, toID, (modules[window.fillContainerID] as ContainerModule).childModules)\n            }).map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { DragEvent } from 'react'\nimport { Modules, Module, Connections } from '../../redux/stateTSTypes'\nimport { MOVE, COPY } from '../DropSquare/DropSquare'\nimport { Dispatch } from 'redux'\nimport { moveModule } from '../../redux/allActions'\nimport { onlyOneConnectionOption } from './helpers'\nimport { executeConnection } from '../ContextMenus/ConnectionMenu/helpers'\n\nexport function iconOnDrop(\n  e: DragEvent<HTMLDivElement>,\n  modules: Modules,\n  connections: Connections,\n  mod: Module,\n  dispatch: Dispatch,\n) {\n  e.stopPropagation()\n  const id = e.dataTransfer.getData('id')\n  const moduleDragType = e.dataTransfer.getData('type')\n  if (id) {\n    const possiblyMod = modules[id]\n    if (possiblyMod && moduleDragType === MOVE) {\n      const fromRow = e.dataTransfer.getData('fromRow')\n      const fromCol = e.dataTransfer.getData('fromCol')\n      dispatch(moveModule(id, mod.row, mod.col))\n      dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n      window.setTimeout(window.refreshArcherContainer, 100)\n    }\n  } else {\n    if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n      alert('mod cannot accept input')\n    } else {\n      const fromID = e.dataTransfer.getData('fromID')\n      if (fromID) {\n        const { onlyOne, actualFromID, actualToID } = onlyOneConnectionOption(fromID, mod.id, modules)\n        if (onlyOne) {\n          executeConnection(\n            fromID, actualFromID as string, mod.id, actualToID as string, \n            modules, connections, dispatch, 0, 0,\n          )\n        } else {\n          e.persist()\n          window.openConnectionMenu(e, fromID, mod.id)\n        }\n      }\n    }\n  }\n}\n\nexport function iconOnDragStart(\n  e: DragEvent<HTMLDivElement>,\n  mod: Module\n) {\n  if (e.shiftKey) {\n    e.dataTransfer.setData('type', COPY)\n  } else {\n    e.dataTransfer.setData('type', MOVE)\n  }\n  e.dataTransfer.setData('id', mod.id)\n  e.dataTransfer.setData('fromRow', `${mod.row}`)\n  e.dataTransfer.setData('fromCol', `${mod.col}`)\n}","import React from 'react'\nimport FlexCol from '../Flex/FlexCol'\nimport AllContainerControls from '../LargeIcon/AllContainerControls'\nimport { useSelector } from 'react-redux'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { useReRender } from '../hooks'\nimport useJSS from './style'\n\nfunction FillControls() {\n  const selectedMod = useSelector((state: RootState) => state.modules[window.fillContainerID] as ContainerModule)\n  const reRender = useReRender()\n  const classes = useJSS()\n  return (\n    <FlexCol className={classes.FillControls} alignItems='center'>\n      <AllContainerControls selectedModule={selectedMod} reRender={reRender}/>\n    </FlexCol>\n  )\n}\n\nexport default FillControls","import { useState } from \"react\";\n\nexport function useReRender() {\n  const [,toReRender] = useState({})\n  const reRender = () => { toReRender({}) }\n  return reRender\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport Button from '../Button/Button'\nimport FlexRow from '../Flex/FlexRow'\nimport FillControls from './FillControls'\nimport Conditional from '../Conditional/Conditional'\n\ndeclare global {\n  interface Window { \n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${maxRow + 2}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${maxCol + 2}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openModuleRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <FlexRow>\n        <Conditional showIf={containerModule.containerControls.length !== 0}>\n          <FillControls />\n        </Conditional>\n        <ArcherContainer ref={archerContainerRef}\n          svgContainerStyle={{ zIndex: -1 }}\n          strokeWidth={8}\n          arrowLength={0}\n        >\n          <div className={classes.Fill} style={gridStyle}>\n            {isEmpty ? <DropSquare row={0} col={0}/> :\n            range(0, maxRow + 2).map(row => {\n              return range(0, maxCol + 2).map(col => {\n                return (\n                  <DropSquare\n                    key={`${row} ${col}`}\n                    row={row} \n                    col={col}\n                  />\n                )\n              })\n            }).flat()}\n            {containerModule.childModules.map(moduleID => {\n              const mod = modules[moduleID]\n              return (\n                <ModuleViewIcon\n                  key={mod.id}\n                  mod={mod}\n                  gridRow={mod.row + 1}\n                  gridCol={mod.col + 1}\n                />\n              )\n            })}\n          </div>\n        </ArcherContainer>\n      </FlexRow>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: `${sizes.rightDrawer.width}px`,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: `${sizes.rightDrawer.width}px`,\n    height: 'calc(100% - 60px)',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    //overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: `${sizes.rightDrawer.width}px`,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n\n  SDBSaveList: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'scroll',\n    height: '60%',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { RootState, Connections } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect, disconnect } from \"./connection\"\n\nfunction connectLate(numTries: number, fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, actualOutputID?: string, actualInputID?: string) {\n  if (numTries > 10) {\n    alert('restore failed')\n  } else {\n    window.setTimeout(() => {\n      if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(numTries + 1, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    }, 500)\n  }\n}\n\nfunction restoreAMFromState(prevConnections: Connections, { modules, connections }: RootState) {\n  Object.keys(prevConnections).forEach(connectionID => {\n    const { fromID, toID, param, outputIndex, actualOutputID, actualInputID } = prevConnections[connectionID]\n    if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n      disconnect(\n        window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n        window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n        param,\n        outputIndex, // may need to figure out how to pass in inputIndex\n      )\n    }\n  })\n  window.numberRestores++\n  window.audioModules = {}\n  window.audioTags = {}\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(0, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    })\n  }\n}\n\nexport default restoreAMFromState","import React, { useState, useEffect } from 'react'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { restoreFromState } from '../../redux/allActions'\nimport restoreAMFromState from '../../audioModules/restoreAMFromState'\nimport { colors } from '../../theme/theme'\nimport Button from '../Button/Button'\nimport useJSS from './style'\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\nconst buttonStyle = {\n  backgroundColor: 'transparent'\n}\n\nfunction SpaceDBMenu() {\n  const [ saveList, setSaveList ] = useState<string[]>([])\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  useEffect(() => {\n    window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n  }, [])\n  const classes = useJSS()\n  return (\n    <div style={{  }}>\n      <Button style={{ backgroundColor: colors.sdbSaveButton }}\n        onClick={() => {\n          window.openSpaceDBProjectSaveMenu(saveList, () => {\n            window.setTimeout(() => {\n              window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n            }, 1000)\n          })\n        }}\n      >\n        save project\n      </Button>\n      <div className={classes.SDBSaveList}>\n        {saveList.map((saveName, index) => {\n          return (\n            <Button style={buttonStyle}\n              key={index}\n              onClick={() => {\n                window.projectSaveService.get(saveName).then((savedState: RootState) => {\n                  restoreAMFromState(connections, savedState)\n                  dispatch(restoreFromState(savedState))\n                })\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault()\n                e.persist()\n                window.openSDBProjectContextMenu(e, saveName, setSaveList)\n              }}\n            >\n              {saveName}\n            </Button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBMenu","import React, { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\n\nfunction BlankProjectButton() {\n  const numMods = useSelector((state: RootState) => Object.keys(state.modules).length)\n  return (\n    <Fragment>\n      {numMods < 2 ? null :\n        <Button\n          onClick={() => {\n            window.openConfirmBlankProjectMenu()\n          }}\n        >blank project</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default BlankProjectButton","import { ContainerSave } from \"../redux/stateTSTypes\"\n\nexport async function saveJSONToFileHandle(fileHandle: FileSystemFileHandle, json: any) {\n  const writable = await fileHandle.createWritable()\n  await writable.write(JSON.stringify(json))\n  await writable.close()\n}\n\nexport async function loadJSONFromPickedFile(onFileHandle?: (fileHandle: FileSystemFileHandle) => void) {\n  const [ fileHandle ] = await window.showOpenFilePicker()\n  if (fileHandle) {\n    if (onFileHandle) onFileHandle(fileHandle)\n    const file = await fileHandle.getFile() as any\n    const data = await file.text()\n    return JSON.parse(data)\n  } else {\n    return null\n  }\n}\n\nexport async function saveJSONToChosenFile(json: any, onSaved?: () => void) {\n  window.saveFileHandle = await window.showSaveFilePicker({\n    types: [\n      {\n        description: 'space machine project',\n        accept: {\n          'example/*': ['.sm'],\n        },\n      }\n    ]\n  })\n  await saveJSONToFileHandle(window.saveFileHandle, json)\n  if (onSaved) onSaved()\n} \n\nexport function getTrimmedSMFileName(fileHandle: FileSystemFileHandle) {\n  const name = fileHandle.name\n  return name.slice(0, name.length - 3)\n}\n\nexport async function getDirectoryContentNames(dirHandle: FileSystemDirectoryHandle) {\n  let names: string[] = []\n  for await (const entry of dirHandle.values()) {\n    names.push(entry.name)\n  }\n  return names\n}\n\nexport async function getDirectorySMMNames(dirHandle: FileSystemDirectoryHandle) {\n  const allNames = await getDirectoryContentNames(dirHandle)\n  return allNames.filter(name => name.length > 4 && name.slice(name.length - 4) === '.smm')\n    .map(name => name.slice(0, name.length - 4))\n}\n\nexport async function saveSMM(dirHandle: FileSystemDirectoryHandle, saveName: string, containerSave: ContainerSave) {\n  const fileHandle = await dirHandle.getFileHandle(`${saveName}.smm`, { create: true })\n  await saveJSONToFileHandle(fileHandle, containerSave)\n}\n\nexport async function getSavedSMMFromName(dirHandle: FileSystemDirectoryHandle, saveName: string): Promise<ContainerSave> {\n  const fileHandle = await dirHandle.getFileHandle(`${saveName}.smm`)\n  const file = await fileHandle.getFile() as any\n  const stringData = await file.text()\n  return JSON.parse(stringData)\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { loadJSONFromPickedFile } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction OpenFileButton({ reRender, state }: Props) {\n  const dispatch = useDispatch()\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        const newState = await loadJSONFromPickedFile(fileHandle => {\n          window.saveFileHandle = fileHandle\n        })\n        if (newState) {\n          restoreAMFromState(state.connections, newState)\n          dispatch(restoreFromState(newState))\n          reRender()\n        } else {\n          window.flashNotification('rgba(1, 1, 1, .4)', 'no file selected')\n        }\n      }}\n    >open</Button>\n  )\n}\n\nexport default OpenFileButton","import React from 'react'\nimport { getTrimmedSMFileName, saveJSONToChosenFile } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction SaveAsNewButton({ state, reRender }: Props) {\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        saveJSONToChosenFile(state, () => {\n          reRender()\n          window.flashNotification(colors.success, `${getTrimmedSMFileName(window.saveFileHandle)} saved`)\n        })\n      }}\n    >save as</Button>\n  )\n}\n\nexport default SaveAsNewButton","import React, { Fragment } from 'react'\nimport { getTrimmedSMFileName, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n}\n\nfunction SaveCurrentButton({ state }: Props) {\n  return (\n    <Fragment>\n      {!window.saveFileHandle ? \n        <Button fontSize={sizes.text.medium} \n          notClickable={true}\n          style={{\n            backgroundColor: 'transparent',\n            color: colors.disabled,\n          }}\n        > no file open </Button>\n      :\n        <Button fontSize={sizes.text.medium}\n          onClick={async () => {\n            await saveJSONToFileHandle(window.saveFileHandle, state)\n            window.flashNotification(colors.success, `${getTrimmedSMFileName(window.saveFileHandle)} saved`)\n          }}\n        >{`save ${getTrimmedSMFileName(window.saveFileHandle)}`}</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default SaveCurrentButton","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\nimport BlankProjectButton from './BlankProjectButton'\nimport OpenFileButton from './OpenFileButton'\nimport SaveAsNewButton from './SaveAsNewButton'\nimport SaveCurrentButton from './SaveCurrentButton'\n\ndeclare global {\n  interface Window {\n    saveFileHandle?: any\n    reRenderFileMenu: () => void\n  }\n}\n\nfunction FileMenu() {\n  const state = useSelector((state: RootState) => state)\n  const [, toReRender] = useState({})\n  window.reRenderFileMenu = () => { toReRender({}) }\n  return (\n    <FlexRow alignItems='center' flexWrap='wrap' style={{ width: '100%' }}>\n      <OpenFileButton state={state} reRender={window.reRenderFileMenu} />\n      <SaveAsNewButton state={state} reRender={window.reRenderFileMenu}/>\n      <SaveCurrentButton state={state} />\n      <BlankProjectButton />\n    </FlexRow>\n  )\n}\n\nexport default FileMenu","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { clamp } from '../../helpers/genFuncs'\nimport SpaceDBMenu from './SpaceDBMenu'\nimport FileMenu from './FileMenu/FileMenu'\n\nconst SPACEDB_PROJECTS = 'spaceDB projects'\nconst FILE = 'file'\n\nlet drawerWidth = `${sizes.rightDrawer.width}`\n\nconst addPx = (arg: string) => `${arg}px`\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(window.usingElectron ? SPACEDB_PROJECTS : FILE)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  }, [])\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}`\n            if (drawerRef.current) { drawerRef.current.style.width = addPx(drawerWidth) }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = addPx(drawerWidth) }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = addPx(drawerWidth) }\n            if (toggleRef.current) { toggleRef.current.style.right = addPx(drawerWidth) }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          {!window.usingElectron ? null : \n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={SPACEDB_PROJECTS}\n            onClick={() => { setSR(SPACEDB_PROJECTS) }}\n            selectedRoute={selectedRoute}\n          />}\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={FILE}\n            onClick={() => { setSR(FILE) }}\n            selectedRoute={selectedRoute}\n          />\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SPACEDB_PROJECTS\n            ?\n            <SpaceDBMenu />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n    numberRestores: number\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\nwindow.numberRestores = 0\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id + window.numberRestores}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: colors.centerMenuBackground,\n    backdropFilter: 'blur(5px)',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: zIndex.centerMenu,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'fixed',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '1.2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: `.1em solid ${colors.centerMenuBorder}`,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { animated } from 'react-spring'\n\ninterface Props {\n  isClosed?: boolean\n  className?: string\n  style?: CSS.Properties\n  headerClassName?: string\n  headerStyle?: CSS.Properties\n  children: React.ReactNode\n  header?: string\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n}\n\nfunction CenterMenu({ isClosed, className, style, headerClassName, headerStyle, children, header, onClose, bounderStyle }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {isClosed ? null :\n      <animated.div className={classes.CenterMenuBounder}\n        onPointerDown={e => {\n          e.stopPropagation()\n          onClose()\n        }}\n        style={bounderStyle}\n      >\n        <div className={className ? `${classes.CenterMenu} ${className}` : classes.CenterMenu}\n          onPointerDown={(e) => {e.stopPropagation()}}\n          style={style}\n        >\n          {!header ? null : \n          <div className={headerClassName ? `${classes.Header} ${headerClassName}` : classes.Header}\n            style={headerStyle}\n          >\n            {header}\n          </div>}\n          {children}\n        </div>\n      </animated.div>}\n    </Fragment>\n  )\n}\n\nexport default CenterMenu","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openKnobRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, controlID = '', onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    controlID,\n    onChangeSubmit,\n  }\n}\n\nfunction KnobRangeSetMenu() {\n  const [{ isOpen, controlID, onChangeSubmit }, setData] = useState(makeData(false))\n  const modules = useSelector((state: RootState) => state.modules)\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(0)\n  const [maxRange, setMaxRange] = useState<[number, number] | undefined>(undefined)\n  window.openKnobRangeSetMenu = (modID, controlID, onChangeSubmit) => {\n    const { range, maxRange } = modules[modID].controlData[controlID]\n    setData(makeData(\n      true, \n      controlID, \n      onChangeSubmit\n    ))\n    setMin((range as [number, number])[0])\n    setMax((range as [number, number])[1])\n    setMaxRange(maxRange)\n  }\n  const onClose = () => { \n    setData(makeData(false))\n  }\n  const classes = useJSS()\n  return (\n    <CenterMenu isClosed={!isOpen} header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          if (maxRange) {\n            if (inRange(min, maxRange as [number, number]) && inRange(max, maxRange as [number, number])) {\n              if (max > min) {\n                onChangeSubmit([min, max])\n                onClose()\n              } else {\n                alert('min must be less than max')\n              }\n            } else {\n              alert('a value is not within maximum range bounds')\n            }\n          } else {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          }\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default KnobRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '1em',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.medium,\n    textAlign: 'center',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState, useRef } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\n\ndeclare global {\n  interface Window {\n    openSpaceDBProjectSaveMenu: (saveList: string[], onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveList: string[] = [], preOnClose = () => { }) {\n  return {\n    isOpen,\n    saveList,\n    preOnClose,\n  }\n}\n\nfunction SpaceDBProjectSaveMenu() {\n  const [{ isOpen, saveList, preOnClose }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const { baseContainerID, modules } = state\n  const [saveName, setSaveName] = useState('')\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  window.openSpaceDBProjectSaveMenu = (saveList, onClose) => {\n    setSaveName(modules[baseContainerID].name)\n    setConfirmSaveData({ isOpen: false, message: '' })\n    setData(makeData(true, saveList, onClose)) \n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save project'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <FlexRow style={{ alignItems: 'center' }}>\n        <input className={classes.CenterMenuInput}\n          value={saveName}\n          placeholder={modules[baseContainerID].name}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                if (stringIn(saveName, saveList)) {\n                  setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n                } else {\n                  window.projectSaveService.create({\n                    saveName,\n                    state\n                  }).then((res: any) => {\n                    if (res) {\n                      window.flashNotification('green', 'project saved')\n                    }\n                  })\n                  onClose()\n                }\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          ref={inputRef}\n          autoFocus\n        />\n        <Button\n          onPointerDown={e => e.preventDefault()}\n          onClick={e => {\n            e.preventDefault()\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'save already exists. do you want to replace it?' })\n            } else {\n              window.projectSaveService.create({\n                saveName,\n                state\n              }).then((res: any) => {\n                if (res) {\n                  window.flashNotification('green', 'project saved')\n                }\n              })\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n      </FlexRow>\n      {!confirmSaveData.isOpen ? null\n        :\n        <FlexCol>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <FlexRow style={{ justifyContent: 'center' }}>\n            <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n              onClick={() => {\n                inputRef.current?.focus()\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                window.projectSaveService.update(saveName, state).then((res: any) => {\n                  if (res) {\n                    window.flashNotification('green', 'project updated')\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </FlexRow>\n        </FlexCol>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBProjectSaveMenu","import React, { useState } from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openConfirmDeleteMenu: (saveName: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveName = '', onClose = () => { }) {\n  return {\n    isOpen,\n    saveName,\n    preOnClose: onClose\n  }\n}\n\nfunction ConfirmDeleteMenu() {\n  const [{ isOpen, saveName, preOnClose }, setData] = useState(makeData(false))\n  window.openConfirmDeleteMenu = (saveName, onClose) => { setData(makeData(true, saveName, onClose)) }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  return (\n    <CenterMenu header={`are you sure you want to delete ${saveName}?`}\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n          onClick={() => {\n            onClose()\n          }}\n        >no</Button>\n        <Button style={{ backgroundColor: colors.confirmButton }}\n          onClick={() => {\n            window.projectSaveService.remove(saveName)\n            onClose()\n          }}\n        >yes</Button>\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmDeleteMenu","import { saveSMM } from \"../../../helpers/fileAccess\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { getContainerModulesConnections } from \"../../../redux/getContainerAsProject\"\nimport { RootState } from \"../../../redux/stateTSTypes\"\n\nexport function getFileDirectory(badDir: string) {\n  for (var i = badDir.length; i > 0; i--) {\n    if (badDir[i] === '/') {\n      return badDir.slice(0, i + 1)\n    }\n  }\n  return badDir\n}\n\nexport function confirmContainerSaveName(setConfirmSaveData: (arg: any) => void, containerID: string, name: string, saveList: string[], state: RootState, onClose: () => void) {\n  if (!stringIn(name, saveList)) {\n    const { modules, connections } = getContainerModulesConnections(state, containerID)\n    window.containerSaveService.create({\n      saveName: name,\n      containerID,\n      modules,\n      connections,\n    }).then((success: string) => {\n      if (success) {\n        window.flashNotification('green', 'module saved to spaceDB')\n        window.refreshSpaceDBModules()\n      }\n    })\n    onClose()\n  } else {\n    setConfirmSaveData({ isOpen: true, message: 'module with this name already exists. would you like to update it?' })\n  }\n}\n\nexport async function saveContainerToFile(saveName: string, containerID: string, state: RootState) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const save = {\n    containerID,\n    modules,\n    connections\n  }\n  await saveSMM(window.moduleDirectoryHandle, saveName, save)\n}","import React, { useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport Conditional from '../../Conditional/Conditional'\nimport FlexCol from '../../Flex/FlexCol'\nimport FlexRow from '../../Flex/FlexRow'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { saveContainerToFile } from './helpers'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    openFileContainerSaveMenu: (containerModID: string) => void\n  }\n}\n\nlet initName = ''\nlet modID = ''\n\nfunction FileContainerSaveMenu() {\n  const [open, setOpen] = useState(false)\n  const [saveName, setSaveName] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false) \n  const state = useSelector((state: RootState) => state) \n  window.openFileContainerSaveMenu = (containerModID) => {\n    modID = containerModID\n    initName = state.modules[containerModID].name\n    setSaveName(initName)\n    setConfirmOpen(false)\n    setOpen(true) \n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  async function trySaveModule() {\n    if (stringIn(saveName, window.fileModuleSaveNames)) {\n      setConfirmOpen(true)\n    } else {\n      await saveContainerToFile(saveName, modID, state)\n      window.flashNotification(colors.success, `${saveName} saved to file`)\n      onClose()\n    }\n  }\n  const classes = useJSS()\n  const inputRef = useRef<HTMLInputElement>(null)\n  return (\n    <CenterMenu header='' isClosed={!open} onClose={onClose}>\n      <input className={classes.CenterMenuInput}\n        onChange={e => {\n          setSaveName(e.target.value)\n        }}\n        value={saveName}\n        placeholder={initName}\n        onKeyDown={e => {\n          switch(e.key) {\n            case 'Enter': trySaveModule(); break;\n            case 'Esc': onClose(); break;\n          }\n        }}\n        ref={inputRef}\n        autoFocus\n      />\n      <Button\n        onClick={trySaveModule}\n      >\n        save\n      </Button>\n      <Conditional showIf={confirmOpen}>\n        <FlexCol>\n          <div>module with this name already exists. would you like to update it?</div>\n          <FlexRow>\n            <Button\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n\n                }\n                setConfirmOpen(false)\n              }}\n            >\n              no\n            </Button>\n            <Button\n              onClick={() => {\n                saveContainerToFile(saveName, modID, state)\n                onClose()\n              }}\n            >\n              yes\n            </Button>\n          </FlexRow>\n        </FlexCol>\n      </Conditional>\n    </CenterMenu>\n  )\n}\n\nexport default FileContainerSaveMenu","import React, { useState, useRef, Fragment } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { getContainerModulesConnections } from '../../../redux/getContainerAsProject'\nimport { sizes, colors } from '../../../theme/theme'\nimport { confirmContainerSaveName } from './helpers'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openSpaceDBContainerSaveMenu: (saveList: string[], id: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, id = '', saveList: string[] = [], onClose = () => {}, initName = '') {\n  return {\n    isOpen,\n    id,\n    saveList,\n    preOnClose: onClose,\n    initName\n  }\n}\n\nfunction SpaceDBContainerSaveMenu() {\n  const [{ isOpen, id, saveList, preOnClose, initName }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const [name, setName] = useState('')\n  window.openSpaceDBContainerSaveMenu = (saveList, id, onClose) => {\n    setData(makeData(true, id, saveList, onClose, state.modules[id].name))\n    setName(state.modules[id].name)\n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save container module'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <input className={classes.CenterMenuInput}\n        value={name}\n        placeholder={initName}\n        ref={inputRef}\n        onChange={e => {\n          setName(e.target.value)\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': // enter\n              confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n              break\n            case 'Escape': // escape\n              onClose()\n              break\n          }\n        }}\n        autoFocus\n      />\n      <Button\n        onClick={() => {\n          confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n        }}\n      >confirm</Button>\n      {\n        !confirmSaveData.isOpen ? null :\n        <Fragment>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <div style={{ display: 'flex' }}>\n            <Button style={{ backgroundColor: colors.denyButton }}\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n                }\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                const { modules, connections } = getContainerModulesConnections(state, id)\n                window.containerSaveService.update(name, {\n                  saveName: name,\n                  containerID: id,\n                  modules,\n                  connections,\n                }).then((success: string) => {\n                  if (success) {\n                    window.flashNotification('green', 'module updated')\n                    window.refreshSpaceDBModules()\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </div>\n        </Fragment>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBContainerSaveMenu","import React, { useState } from 'react'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { sizes, colors } from '../../../theme/theme'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openAnalyzerRangeSetMenu: (range: Range, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    onChangeSubmit,\n  }\n}\n\nfunction AnalyzerRangeSetMenu() {\n  const [{ isOpen, onChangeSubmit }, setData] = useState(makeData(false))\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(0)\n  window.openAnalyzerRangeSetMenu = (range, onChangeSubmit) => { \n    setMin(range[0])\n    setMax(range[1])\n    setData(makeData(true, onChangeSubmit))\n  }\n  const onClose = () => { setData(makeData(false)) }\n  const classes = useJSS()\n  return (\n    <CenterMenu isClosed={!isOpen} header='set analyzer range' onClose={onClose}>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMax(Number(e.target.value))\n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          onChangeSubmit([min, max])\n          onClose()\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default AnalyzerRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport useJSS from './style'\n\ninterface Props {\n  isOpen: boolean\n  header: string\n  onSubmit: (newName: string) => void\n  placeholder: string\n  onClose: () => void\n}\n\nfunction RenameMenu({ isOpen, header, onSubmit, placeholder, onClose }: Props) {\n  const classes = useJSS()\n  const [val, setVal] = useState('')\n  const [isTooShort, setIsTooShort] = useState(false)\n  function trySubmit() {\n    if (val.length > 0) {\n      onSubmit(val)\n      onClose()\n      setVal('')\n    } else {\n      setIsTooShort(true)\n    }\n  }\n  return (\n    <CenterMenu isClosed={!isOpen} header={header} onClose={() => { onClose(); setVal('') }}>\n      <div className={classes.CMInputBounder}>\n        <input className={classes.CenterMenuInput}\n          placeholder={placeholder}\n          value={val}\n          onChange={e => {\n            setVal(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                trySubmit()\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          autoFocus\n        />\n        <Button\n          onClick={() => {\n            trySubmit()\n          }}\n        >\n          confirm\n        </Button>\n        {\n          !isTooShort ? null :\n          <div className={classes.Error}>\n            please enter a name\n          </div>\n        }\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\nimport RenameMenu from './RenameMenu'\n\ndeclare global {\n  interface Window {\n    openModuleRenameMenu: (toRenameID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, toRenameID = '') {\n  return {\n    isOpen,\n    toRenameID,\n  }\n}\n\nfunction RenameModuleMenu() {\n  const [{ isOpen, toRenameID }, setData] = useState(makeData(false))\n  window.openModuleRenameMenu = toRenameID => { setData(makeData(true, toRenameID)) }\n  const onClose = () => { setData(makeData(false)) }\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename module' \n      isOpen={isOpen}\n      onSubmit={newName => {\n        dispatch(renameModule(toRenameID, newName))\n      }}\n      placeholder={modules[toRenameID]?.name}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameModuleMenu","import React, { useState } from 'react'\nimport RenameMenu from './RenameMenu'\nimport { useDispatch } from 'react-redux'\nimport { renameContainerControl } from '../../../redux/allActions'\nimport { ContainerControl } from '../../../redux/stateTSTypes'\n\ndeclare global {\n  interface Window {\n    openControlRenameMenu: (placeholder: string, parentModID: string, containerControl: ContainerControl) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, placeholder = '', parentModID = '', containerControl?: ContainerControl) {\n  return {\n    isOpen,\n    placeholder,\n    containerControl,\n    parentModID\n  }\n}\n\nfunction RenameControlMenu() {\n  const [{ isOpen, placeholder, containerControl, parentModID }, setData] = useState(makeData(false))\n  window.openControlRenameMenu = (placeholder, parentModID, containerControl) => { setData(makeData(true, placeholder, parentModID, containerControl)) }\n  const onClose = () => setData(makeData(false))\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename control'\n      isOpen={isOpen}\n      onSubmit={newName => {\n        const { modID, controlID, actualModID } = containerControl as ContainerControl\n        dispatch(renameContainerControl(newName, parentModID, modID, controlID, actualModID))\n        window.flashNotification('green', 'control passthrough renamed')\n      }}\n      placeholder={placeholder}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameControlMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  LeftBar: {\n    width: sizes.addModuleMenu.leftBarWidth,\n    //height: sizes.addModuleMenu.height,\n    backgroundColor: colors.addModuleLeftBarBG,\n  },\n\n  LeftBarButton: {\n    borderRadius: '0em',\n    margin: '0em',\n    backgroundColor: 'transparent',\n    //borderStyle: 'none solid none none',\n    borderColor: 'transparent',\n    borderWidth: '1px',\n    '&:hover': {\n      borderColor: 'transparent',\n    }\n  },\n\n  RouterBounder: {\n    alignItems: 'center'\n  },\n\n  IconRouter: {\n    width: sizes.addModuleMenu.iconRouterWidth,\n    height: sizes.addModuleMenu.height,\n    overflowY: 'scroll',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridAutoRows: '20vmin',\n    gridAutoFlow: 'row',\n    placeItems: 'center',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  SearchBar: {\n    width: '80%',\n    height: '1.5em',\n    marginTop: '1.3em',\n    marginBottom: '.4em',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.addModuleSearchBarBG,\n    color: colors.addModuleSearchBarText,\n    textAlign: 'center',\n    borderStyle: 'none',\n    borderRadius: '.2em',\n    '&:focus': {\n      outline: 'none',\n    }\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\nimport { addModuleMenuGroups, SPACEDB_MODULES } from './AddModuleMenu'\nimport useJSS from './style'\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n}\n\nfunction LeftBar({ selectedGroup, setSG }: Props) {\n  const classes = useJSS()\n  return (\n    <FlexCol className={classes.LeftBar}>\n      {addModuleMenuGroups.filter(group => window.usingElectron || group !== SPACEDB_MODULES)\n      .map((group, index) => {\n        const isHL = group === selectedGroup\n        return (\n          <Button className={classes.LeftBarButton}\n            key={index}\n            style={{\n              color: isHL ? colors.selectedText : 'white',\n            }}\n            onClick={() => {\n              setSG(group)\n            }}\n          >\n            { group }\n          </Button>\n        )\n      })}\n    </FlexCol>\n  )\n}\n\nexport default LeftBar","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ModuleType } from '../../../../../audioModules/moduleTypes'\nimport genRandomID from '../../../../../redux/idGen'\nimport { ADD_MODULE } from '../../../../../redux/modules/moduleActionTypes'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  fullName: string\n  shortName: string\n  moduleType: string\n  isFocussed?: boolean\n  totNumModules: number\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcon({ fullName, shortName, moduleType, isFocussed, totNumModules, row, col, onClose }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.addModule(\n      genRandomID(0, totNumModules),\n      shortName,\n      window.fillContainerID,\n      moduleType as ModuleType,\n      dispatch,\n      row, col\n    )\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(moduleType),\n          borderColor: isFocussed ? 'white' : colors.grey\n        }}\n        onFocus={e => { \n          e.preventDefault()\n          console.log('focussing 2')\n        }}\n        onClick={addModule}\n        draggable={true}\n        onDragStart={event => { // but the div disappears making this not work\n          event.persist()\n          event.dataTransfer.setData('type', ADD_MODULE)\n          event.dataTransfer.setData('id', genRandomID(0, totNumModules))\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', shortName)\n          //onClose()\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': addModule()\n          }\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default ModuleIcon","import React, { Fragment } from 'react'\nimport { ModuleType } from '../../../../../audioModules/moduleTypes'\nimport { DrawerModuleData } from './moduleData'\nimport ModuleIcon from './ModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  moduleData: DrawerModuleData\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcons({ totNumModules, moduleData, row, col, onClose }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon key={index} \n            fullName={fullName} \n            shortName={shortName} \n            moduleType={moduleType as ModuleType} \n            totNumModules={totNumModules} \n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE, TUNER, VISUALIZER } from \"../../../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, shortname, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n  ['distortion', 'dist', DISTORTION],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n  ['enveloped pad', 'env', ENVELOPED_TRIGGER],\n  ['white noise', 'noise', WHITE_NOISE]\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n  ['analyzer', 'analyzer', ANALYZER],\n  ['tuner', 'tuner', TUNER],\n  ['visualizer', 'viz', VISUALIZER],\n]\n\nexport const allModuleData: DrawerModuleData = effectModuleData.concat(sourceModuleData).concat(utilityModuleData)","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CONTAINER } from '../../../../../audioModules/moduleTypes'\nimport { performContainerMerge } from '../../../../../redux/replicateContainer'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  moduleName: string\n  totNumberModules: number\n  totNumberConnections: number\n  onClose: () => void\n  row: number\n  col: number\n  isFocussed?: boolean\n}\n\nfunction SpaceDBModuleIcon({ moduleName, totNumberModules, totNumberConnections, onClose, row, col, isFocussed }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.containerSaveService.get(moduleName).then(({ containerID, modules, connections }: any) => {\n      performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n    })\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(CONTAINER),\n          borderColor: isFocussed ? 'white' : colors.grey,\n        }}\n        onClick={addModule}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openSDBModuleContextMenu(e, moduleName)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {moduleName}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBModuleIcon","import React, { Fragment, useEffect } from 'react'\nimport SpaceDBModuleIcon from './SpaceDBModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  totNumConnections: number\n  onClose: () => void\n  row: number\n  col: number\n  spaceDBModules: string[]\n}\n\nfunction SpaceDBModules({ spaceDBModules, totNumModules, totNumConnections, onClose, row, col }: Props) {\n  useEffect(() => {\n    window.refreshSpaceDBModules()\n  }, [])\n  return (\n    <Fragment>\n      {spaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon \n            moduleName={moduleName}\n            key={index}\n            totNumberModules={totNumModules}\n            totNumberConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SpaceDBModules","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CONTAINER } from '../../../../../audioModules/moduleTypes'\nimport { getSavedSMMFromName } from '../../../../../helpers/fileAccess'\nimport { performContainerMerge } from '../../../../../redux/replicateContainer'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  name: string\n  totNumModules: number\n  totNumConnections: number\n  row: number\n  col: number\n  onClose: () => void\n  isFocussed?: boolean\n}\n\nfunction FileModuleIcon({ name, totNumModules, totNumConnections, row, col, onClose, isFocussed }: Props) {\n  const classes = useJSS()\n  async function addModule() {\n    const { containerID, modules, connections } = await getSavedSMMFromName(window.moduleDirectoryHandle, name)\n    performContainerMerge(\n      dispatch, \n      modules, \n      connections, \n      totNumModules, \n      totNumConnections,\n      window.fillContainerID,\n      containerID,\n      row, col\n    )\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(CONTAINER),\n          borderColor: isFocussed ? 'white' : colors.grey,\n        }}\n        onClick={addModule}\n      />\n      <div className={classes.DrawerItemText}>\n        {name}\n      </div>\n    </div>\n  )\n}\n\nexport default FileModuleIcon","import React, { Fragment } from 'react'\nimport { allModuleData } from './base/moduleData'\nimport ModuleIcon from './base/ModuleIcon'\nimport FileModuleIcon from './file/FileModuleIcon'\nimport SpaceDBModuleIcon from './spaceDB/SpaceDBModuleIcon'\n\ninterface Props {\n  query: string\n  spaceDBModules: string[]\n  totNumModules: number\n  totNumConnections: number\n  onClose: () => void\n  row: number\n  col: number\n}\n\nfunction SearchIcons({ query, spaceDBModules, totNumModules, totNumConnections, onClose, row, col }: Props) {\n  const upperCaseQuery = query.toUpperCase()\n  const filteredSpaceDBModules = spaceDBModules.filter(moduleName => moduleName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  const filteredModuleData = allModuleData.filter(([fullName, ,]) => fullName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  const filteredFileModules = window.fileModuleSaveNames.filter(modName => modName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  return (\n    <Fragment>\n      {filteredSpaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon\n            key={moduleName}\n            moduleName={moduleName}\n            totNumberModules={totNumModules}\n            totNumberConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n            isFocussed={index === 0}\n          />\n        )\n      })}\n      {filteredFileModules.map((saveName, index) => {\n        return (\n          <FileModuleIcon \n            key={saveName}\n            name={saveName}\n            totNumModules={totNumModules}\n            totNumConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n            isFocussed={filteredSpaceDBModules.length === 0 && index === 0}\n          />\n        )\n      })}\n      {filteredModuleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon\n            isFocussed={filteredSpaceDBModules.length === 0 && filteredFileModules.length === 0 && index === 0}\n            key={index}\n            fullName={fullName}\n            shortName={shortName}\n            moduleType={moduleType}\n            totNumModules={totNumModules}\n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SearchIcons","import React, { Fragment, useState } from 'react'\nimport { getDirectorySMMNames } from '../../../../../helpers/fileAccess'\nimport { sizes } from '../../../../../theme/theme'\nimport Button from '../../../../Button/Button'\nimport FileModuleIcon from './FileModuleIcon'\n\ndeclare global {\n  interface Window {\n    moduleDirectoryHandle: any\n    fileModuleSaveNames: string[]\n  }\n}\n\ninterface Props {\n  totNumModules: number\n  totNumConnections: number\n  row: number\n  col: number\n  onClose: () => void\n}\n\nwindow.fileModuleSaveNames = []\n\nfunction FileModules({ totNumModules, totNumConnections, row, col, onClose }: Props) {\n  const [fileModules, setFileModules] = useState<string[]>(window.fileModuleSaveNames)\n  return (\n    <Fragment>\n      {window.moduleDirectoryHandle ?\n      (fileModules.length === 0 ?\n      <Fragment>\n        <Button fontSize={sizes.text.small} notClickable>\n          no modules in this directory.\n          save modules by right clicking a custom container,\n          and selecting save to file.\n        </Button>\n        <Button\n          onClick={async () => {\n            window.moduleDirectoryHandle =  await window.showDirectoryPicker()\n            window.fileModuleSaveNames = await getDirectorySMMNames(window.moduleDirectoryHandle)\n            setFileModules(window.fileModuleSaveNames)\n          }}\n        >\n          change directory\n        </Button>\n      </Fragment>\n      :\n      fileModules.map((name, index) => {\n        return (\n          <FileModuleIcon key={index}\n            name={name} onClose={onClose}\n            totNumModules={totNumModules}\n            totNumConnections={totNumConnections}\n            row={row} col={col}\n          />\n        )\n      })\n      )\n      :\n      <Button\n        onClick={async () => {\n          window.moduleDirectoryHandle = await window.showDirectoryPicker()\n          window.fileModuleSaveNames = await getDirectorySMMNames(window.moduleDirectoryHandle)\n          setFileModules(window.fileModuleSaveNames)\n        }}\n      >\n        select module directory\n      </Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default FileModules","import React from 'react'\nimport ModuleIcons from './Icons/base/ModuleIcons'\nimport useJSS from './style'\nimport { EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES, SEARCH, FILE_MODULES } from './AddModuleMenu'\nimport { effectModuleData, sourceModuleData, utilityModuleData } from './Icons/base/moduleData'\nimport SpaceDBModules from './Icons/spaceDB/SpaceDBModules'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport SearchIcons from './Icons/SearchIcons'\nimport FileModules from './Icons/file/FileModules'\n\ninterface Props {\n  selectedGroup: string\n  row: number\n  col: number\n  query: string\n  onClose: () => void\n  spaceDBModules: string[]\n}\n\nfunction IconRouter({ selectedGroup, row, col, onClose, query, spaceDBModules }: Props) {\n  const totNumModules = useSelector((state: RootState) => Object.keys(state.modules).length)\n  const totNumConnections = useSelector((state: RootState) => Object.keys(state.connections).length)\n  const classes = useJSS()\n  return (\n    <div className={classes.IconRouter}>\n      <ModuleIcons totNumModules={totNumModules}\n        moduleData={\n          selectedGroup === EFFECTS ? effectModuleData : \n          selectedGroup === SOURCES ? sourceModuleData :\n          selectedGroup === UTILITY ? utilityModuleData :\n          []\n        }\n        row={row} col={col}\n        onClose={onClose}\n      />\n      {selectedGroup !== SPACEDB_MODULES ? null :\n      <SpaceDBModules\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n      {selectedGroup !== FILE_MODULES ? null :\n      <FileModules\n        onClose={onClose}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        row={row} col={col}\n      />}\n      {selectedGroup !== SEARCH ? null :\n      <SearchIcons\n        query={query}\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n    </div>\n  )\n}\n\nexport default IconRouter","import React, { RefObject } from 'react'\nimport { SEARCH } from './AddModuleMenu'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    addSelectedSearchModule: () => void\n  }\n}\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n  setQuery: (arg: string) => void\n  searchRef: RefObject<HTMLInputElement>\n  onClose: () => void\n}\n\nlet prevSelectedGroup: string\n\nfunction SearchBar({ selectedGroup, setSG, setQuery, searchRef, onClose }: Props) {\n  const classes = useJSS()\n  if (selectedGroup !== SEARCH) {\n    prevSelectedGroup = selectedGroup\n  }\n  return (\n    <input className={classes.SearchBar}\n      ref={searchRef}\n      onChange={e => {\n        if (e.target.value.length === 0) {\n          setSG(prevSelectedGroup)\n          window.addSelectedSearchModule = () => {}\n        } else {\n          setQuery(e.target.value)\n          setSG(SEARCH)\n        }\n      }}\n      onKeyDown={e => {\n        switch(e.key) {\n          case 'Escape': onClose(); break;\n          case 'Enter': window.addSelectedSearchModule(); break;\n        }\n      }}\n      placeholder='search'\n    />\n  )\n}\n\nexport default SearchBar","import React, { useEffect, useRef, useState } from 'react'\nimport LeftBar from './LeftBar'\nimport IconRouter from './IconRouter'\nimport SearchBar from './SearchBar'\nimport useJSS from './style'\nimport { useSpring } from 'react-spring'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\nimport FlexCol from '../../Flex/FlexCol'\nimport { zIndex } from '../../../theme/zIndex'\n\ndeclare global {\n  interface Window {\n    openAddModuleMenu: (row: number, col: number) => void\n    refreshSpaceDBModules: () => void\n  }\n}\n\nexport const EFFECTS = 'effects'\nexport const SOURCES = 'sources'\nexport const UTILITY = 'utility'\nexport const SPACEDB_MODULES = 'spaceDB'\nexport const FILE_MODULES = 'local file'\nexport const SEARCH = 'search'\n\nexport const addModuleMenuGroups = [\n  EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES, FILE_MODULES\n]\n\nfunction makeData(isOpen: boolean, row?: number, col?: number) {\n  return {\n    isOpen,\n    row,\n    col,\n  }\n}\n\nfunction AddModuleMenu() {\n  const [{ isOpen, row, col }, setData] = useState(makeData(false))\n  const searchRef = useRef<HTMLInputElement>(null)\n  window.openAddModuleMenu = (row, col) => {\n    setQuery('')\n    setData(makeData(true, row, col))\n    if (searchRef.current) {\n      searchRef.current.value = ''\n      searchRef.current.focus()\n    }\n  }\n  const onClose = () => { setData(makeData(false)) }\n  const [selectedGroup, setSG] = useState(EFFECTS)\n  const [query, setQuery] = useState('') // used with the search bar\n  const [spaceDBModules, setSpaceDBModules] = useState<string[]>([])\n  window.refreshSpaceDBModules = () => {\n    window.containerSaveService.find().then((saveNames: string[]) => { setSpaceDBModules(saveNames) })\n  }\n  const styleSpring = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: {\n      tension: 270,\n    }\n  })\n  useEffect(() => {\n    if (window.usingElectron) window.refreshSpaceDBModules()\n  }, [])\n  const classes = useJSS()\n  return (\n    <CenterMenu header='add module'\n      onClose={onClose}\n      bounderStyle={Object.assign({}, styleSpring, {\n        zIndex: isOpen ? zIndex.centerMenu : zIndex.background - 1,\n      })}\n    >\n      <FlexRow>\n        <FlexCol className={classes.RouterBounder}>\n          <SearchBar selectedGroup={selectedGroup} setSG={setSG} setQuery={setQuery} searchRef={searchRef} onClose={onClose} />\n          <LeftBar selectedGroup={selectedGroup} setSG={setSG} />\n        </FlexCol>\n        <IconRouter \n          selectedGroup={selectedGroup} \n          row={row as number} col={col as number} \n          onClose={onClose} query={query} \n          spaceDBModules={spaceDBModules} \n        />\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default AddModuleMenu","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModule = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModule","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID, name }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: true,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: true,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  }\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: false,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: false,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  }\n}\n\nexport default unmarkContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\"\nimport { RenameContainerControlAction } from \"../moduleTSTypes\"\n\nconst renameContainerControl = (modules: Modules, { name, parentModID, modID, controlID, actualModID }: RenameContainerControlAction) => {\n  const containerMod = modules[parentModID] as ContainerModule\n  return Object.assign({}, modules, {\n    [parentModID]: {\n      ...containerMod,\n      containerControls: containerMod.containerControls.map(containerControl => {\n        const notRightControl = (\n          containerControl.controlID !== controlID ||\n          containerControl.actualModID !== actualModID\n        )\n        if (notRightControl) {\n          return containerControl\n        } else {\n          return {\n            ...containerControl,\n            name: name\n          }\n        }\n      })\n    }\n  })\n}\n\nexport default renameContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n  RenameContainerControlAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n  renameContainerControlReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      case RENAME_CONTAINER_CONTROL: return renameContainerControlReducer(state, action as RenameContainerControlAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\nimport genRandomID from \"../../idGen\"\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = genRandomID(0, Object.keys(connections).length)\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\"\nimport { getContainerIDs, getInternalConnectionIDs } from \"../../getContainerAsProject\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const toTrimModIDs = modules[id].moduleType === CONTAINER ? getContainerIDs(id, modules) : [ id ]\n  const toTrimConnectionIDs = modules[id].moduleType === CONTAINER ? \n    [...modules[id].inputs, ...modules[id].outputs, ...getInternalConnectionIDs(connections, toTrimModIDs)] \n    : [...modules[id].inputs, ...modules[id].outputs]\n  const trimmedModules = filterOutFromObj(modules, toTrimModIDs) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, toTrimConnectionIDs),\n  }\n}\n\nexport default removeModule","import { Modules, Connections, ContainerModule } from \"../../stateTSTypes\"\nimport { MergeContainerAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nconst mergeContainer = (modules: Modules, connections: Connections, { containerID, newModules, newConnections, row, col, parentID }: MergeContainerAction): ConnectionReducerReturn => {\n  return {\n    newModules: Object.assign({}, modules, newModules, {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: [ ...(modules[parentID] as ContainerModule).childModules, containerID ]\n      },\n      [containerID]: {\n        ...newModules[containerID],\n        parentID,\n        row,\n        col,\n        isBaseContainer: false,\n      }\n    }),\n    newConnections: Object.assign({}, connections, newConnections)\n  }\n}\n\nexport default mergeContainer","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\nimport mergeContainer from './reducers/mergeContainer'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action: ConnectionAction): ConnectionReducerReturn => {\n  switch (action.type) {\n    case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n    case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n    case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n    case MERGE_CONTAINER: return mergeContainer(modules, connections, action as MergeContainerAction)\n    default: return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\nimport restoreAMFromState from '../audioModules/restoreAMFromState'\n\nexport function createInitState(forceNew?: boolean) {\n  const savedState = forceNew ? 'undefined' : window.localStorage.getItem('spaceState')\n  if (savedState && savedState !== 'undefined') {\n    const restoredState = JSON.parse(savedState as string)\n    restoreAMFromState({}, restoredState)\n    return restoredState\n  } else {\n    window.audioModules = {}\n    return {\n      modules: moduleReducer(),\n      connections: {},\n      baseContainerID: bcidReducer(),\n    }\n  }\n}\n\nconst initState = createInitState()\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE || action.type === MERGE_CONTAINER) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    const newState = (action as RootAction).state\n    const fullNewState = Object.assign(newState, newState.connections ? {} : {\n      connections: {}\n    })\n    window.localStorage.setItem('spaceState', JSON.stringify(fullNewState))\n    return fullNewState\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    const newState = {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n    window.localStorage.setItem('spaceState', JSON.stringify(newState))\n    return newState\n  }\n}\n\nexport default rootReducer\n","import React, { Dispatch, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { saveJSONToChosenFile, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { createInitState } from '../../../redux/rootReducer'\nimport { Connections, RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../../CenterMenus/CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\n\ndeclare global {\n  interface Window {\n    openConfirmBlankProjectMenu: () => void\n  }\n}\n\nfunction makeBlankProject(dispatch: Dispatch<any>, connections: Connections) {\n  const emptyState = createInitState(true)\n  restoreAMFromState(connections, emptyState)\n  dispatch(restoreFromState(emptyState))\n  window.flashNotification(colors.success, 'created blank project')\n  window.saveFileHandle = undefined\n  window.reRenderFileMenu()\n}\n\nfunction ConfirmBlankProject() {\n  const [isOpen, setOpen] = useState(false)\n  window.openConfirmBlankProjectMenu = () => {\n    setOpen(true) \n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n\n  const state = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <CenterMenu isClosed={!isOpen} onClose={onClose}>\n      <div \n        style={{ \n          fontSize: sizes.text.medium,\n          textAlign: 'center',\n        }}\n      > would you like to save the current project before closing? </div>\n      <FlexRow>\n        <Button\n          onClick={() => {\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >no</Button>\n        <Button\n          onClick={async () => {\n            if (window.saveFileHandle) {\n              await saveJSONToFileHandle(window.saveFileHandle, state)\n            } else {\n              await saveJSONToChosenFile(state)\n            }\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >yes</Button>\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmBlankProject","import React, { Fragment } from 'react'\nimport KnobRangeSetMenu from './RangeSetMenu/KnobRangeSetMenu'\nimport SpaceDBProjectSaveMenu from './SaveMenu/SpaceDBProjectSaveMenu'\nimport ConfirmDeleteMenu from './ConfirmDeleteMenu/ConfirmDeleteMenu'\nimport FileContainerSaveMenu from './SaveMenu/FileContainerSaveMenu'\nimport SpaceDBContainerSaveMenu from './SaveMenu/SpaceDBContainerSaveMenu'\nimport AnalyzerRangeSetMenu from './RangeSetMenu/AnalyzerRangeSetMenu'\nimport RenameModuleMenu from './RenameMenu/RenameModuleMenu'\nimport RenameControlMenu from './RenameMenu/RenameControlMenu'\nimport AddModuleMenu from './AddModuleMenu/AddModuleMenu'\nimport ConfirmBlankProject from '../RightDrawer/FileMenu/ConfirmBlankProject'\n\nfunction CenterMenus() {\n          \n  return (\n    <Fragment>\n      <AddModuleMenu/>\n      <RenameModuleMenu/>\n      <RenameControlMenu/>\n      <KnobRangeSetMenu/>\n      <AnalyzerRangeSetMenu/>\n      <SpaceDBProjectSaveMenu/>\n      <SpaceDBContainerSaveMenu/>\n      <ConfirmDeleteMenu/>\n      <FileContainerSaveMenu/>\n      <ConfirmBlankProject/>\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","export interface NotificationData {\n  isOpen: boolean\n  color: string\n  text: string\n}\n\nexport function makeNotificationData(isOpen: boolean, color = '', text = ''): NotificationData {\n  return {\n    isOpen,\n    color,\n    text,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Notification: {\n    position: 'fixed',\n    top: '10vh',\n    left: '50vw',\n    transform: 'translate(-50%, 0%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '2vmin',\n    borderRadius: '4vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    zIndex: 1000,\n    fontSize: sizes.text.small\n  }\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { makeNotificationData } from './makeData'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport Conditional from '../Conditional/Conditional'\n\ndeclare global {\n  interface Window {\n    flashNotification: (color: string, text: string) => void\n  }\n}\n\nconst notificationTime = 2500 //milliseconds\n\nfunction Notification() {\n  const [{ isOpen, color, text }, setNotificationData] = useState(makeNotificationData(false))\n  const [isVisible, setIsVisible] = useState(false)\n  const classes = useJSS()\n  window.flashNotification = (color, text) => { \n    setNotificationData(makeNotificationData(true, color, text))\n    setIsVisible(true)\n    window.setTimeout(() => {\n      setIsVisible(false)\n    }, notificationTime)\n  }\n  const spring = useSpring({\n    opacity: isVisible ? 1 : 0,\n    onRest: () => { if (!isOpen) setNotificationData(makeNotificationData(false)) }\n  })\n  return (\n    <Conditional showIf={isOpen}>\n      <animated.div className={classes.Notification}\n        style={Object.assign({ backgroundColor: color }, spring)}\n      >\n        {text}\n      </animated.div>\n    </Conditional>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { AudioModules } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport PointerLayer, { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\nimport configureSpaceDB from './configureSpaceDB'\nimport setUserAgent from './setUserAgent'\nimport ContextMenus from '../components/ContextMenus/ContextMenus'\nimport ModuleViewFill from '../components/ModuleView/Fill'\nimport RightDrawer from '../components/RightDrawer/RightDrawer'\nimport AudioTags from '../components/AudioTags/AudioTags'\nimport CenterMenus from '../components/CenterMenus/CenterMenus'\nimport Notification from '../components/Notification/Notification'\n\ndeclare global {\n  interface Window { \n    fillContainerID: string\n    audioModules: AudioModules\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.fillContainerID = 'project'\n\nmakeAddModule()\nconfigureSpaceDB()\nsetUserAgent()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n      <ContextMenus />\n      <Notification />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trash.9d2c8d42.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";"],"sourceRoot":""}