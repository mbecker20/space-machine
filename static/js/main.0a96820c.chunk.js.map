{"version":3,"sources":["theme/zIndex.ts","App/style.ts","audioModules/moduleTypes.ts","redux/modules/moduleActions.ts","redux/modules/moduleActionTypes.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","redux/root/rootActions.ts","redux/root/rootActionTypes.ts","audioCtx.ts","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/modules/mediaElement.ts","audioModules/modules/distortion.ts","audioModules/modules/analyzer.ts","audioModules/modules/envelopedTrigger.ts","audioModules/modules/whiteNoise.ts","audioModules/modules/tuner.ts","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","App/configureSpaceDB.ts","App/setUserAgent.ts","components/ContextMenus/ContextMenu/helpers.ts","theme/theme.ts","components/ContextMenus/ContextMenu/style.ts","components/ContextMenus/ContextMenu/ContextMenu.tsx","audioModules/connection.ts","components/Button/style.ts","components/Button/Button.tsx","components/SVG/TrashSVG.tsx","components/ContextMenus/style.ts","components/ContextMenus/DeleteButton.tsx","components/ContextMenus/Module/ModuleDeleteButton.tsx","components/ContextMenus/Module/style.ts","components/ContextMenus/Module/InputOutputView.tsx","components/ContextMenus/Module/ContainerOpenButton.tsx","components/ContextMenus/Module/SpaceDBSaveButton.tsx","components/Flex/style.ts","components/Flex/FlexRow.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/Flex/FlexCol.tsx","components/ContextMenus/Module/MarkContainerControls.tsx","components/ContextMenus/Module/MarkContainerIO.tsx","components/Conditional/Conditional.tsx","components/ContextMenus/Module/FileSaveButton.tsx","components/ContextMenus/Module/ModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Modules/ModuleDeleteButton.tsx","components/ContextMenus/SpaceDB/Modules/SDBModuleContextMenu.tsx","components/ContextMenus/SpaceDB/Projects/ProjectDeleteButton.tsx","components/ContextMenus/SpaceDB/Projects/SDBProjectContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","components/ModuleView/style.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Type.tsx","helpers/genFuncs.ts","components/Knob/helpers.ts","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/controls/Graph.tsx","theme/moduleColor.ts","components/BabylonCanvas/style.ts","components/BabylonCanvas/BabylonCanvas.tsx","redux/helpers.ts","helpers/notes.ts","components/LargeIcon/controls/Tuner/makeDial.ts","components/LargeIcon/controls/Tuner/Tuner.tsx","components/LargeIcon/controls/Pad.tsx","components/LargeIcon/ControlMenu.tsx","components/LargeIcon/ContainerControlMenu.tsx","components/DropSquare/style.ts","redux/getContainerAsProject.ts","audioModules/restoreAudioModule.ts","audioModules/mergeExistingAM.ts","redux/idGen.ts","redux/replicateContainer.ts","redux/replicateModule.ts","components/DropSquare/callbacks.ts","components/ModuleView/helpers.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/Icon.tsx","components/ModuleView/callbacks.ts","components/ModuleView/Fill.tsx","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/restoreAMFromState.ts","components/RightDrawer/SpaceDBMenu.tsx","components/RightDrawer/FileMenu/BlankProjectButton.tsx","helpers/fileAccess.ts","components/RightDrawer/FileMenu/OpenFileButton.tsx","components/RightDrawer/FileMenu/SaveAsNewButton.tsx","components/RightDrawer/FileMenu/SaveCurrentButton.tsx","components/RightDrawer/FileMenu/FileMenu.tsx","components/RightDrawer/RightDrawer.tsx","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/CenterMenus/CenterMenu/style.ts","components/CenterMenus/CenterMenu/CenterMenu.tsx","components/AutoPlacingGrid.tsx/style.ts","components/AutoPlacingGrid.tsx/AutoPlacingGrid.tsx","components/CenterMenus/ConnectionMenu/Modules/helpers.ts","components/CenterMenus/ConnectionMenu/Modules/style.ts","components/CenterMenus/ConnectionMenu/Modules/InModule.tsx","components/CenterMenus/ConnectionMenu/Modules/ContainerInModule.tsx","components/CenterMenus/ConnectionMenu/Modules/OutModule.tsx","components/CenterMenus/ConnectionMenu/Modules/ContainerOutModule.tsx","components/CenterMenus/ConnectionMenu/ConnectionMenu.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/RangeSetMenu/KnobRangeSetMenu.tsx","components/CenterMenus/SaveMenu/style.ts","components/CenterMenus/SaveMenu/SpaceDBProjectSaveMenu.tsx","components/CenterMenus/ConfirmDeleteMenu/ConfirmDeleteMenu.tsx","components/CenterMenus/SaveMenu/helpers.ts","components/CenterMenus/SaveMenu/FileContainerSaveMenu.tsx","components/CenterMenus/SaveMenu/SpaceDBContainerSaveMenu.tsx","components/CenterMenus/RangeSetMenu/AnalyzerRangeSetMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RenameMenu/RenameModuleMenu.tsx","components/CenterMenus/RenameMenu/RenameControlMenu.tsx","components/CenterMenus/AddModuleMenu/style.ts","components/CenterMenus/AddModuleMenu/LeftBar.tsx","components/CenterMenus/AddModuleMenu/Icons/style.ts","components/CenterMenus/AddModuleMenu/Icons/base/ModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/base/ModuleIcons.tsx","components/CenterMenus/AddModuleMenu/Icons/base/moduleData.ts","components/CenterMenus/AddModuleMenu/Icons/spaceDB/SpaceDBModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/spaceDB/SpaceDBModules.tsx","components/CenterMenus/AddModuleMenu/Icons/file/FileModuleIcon.tsx","components/CenterMenus/AddModuleMenu/Icons/SearchIcons.tsx","components/CenterMenus/AddModuleMenu/Icons/file/FileModules.tsx","components/CenterMenus/AddModuleMenu/IconRouter.tsx","components/CenterMenus/AddModuleMenu/SearchBar.tsx","components/CenterMenus/AddModuleMenu/AddModuleMenu.tsx","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/renameContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/reducers/mergeContainer.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","components/RightDrawer/FileMenu/ConfirmBlankProject.tsx","components/CenterMenus/CenterMenus.tsx","components/Notification/makeData.ts","components/Notification/style.ts","components/Notification/Notification.tsx","App/App.tsx","serviceWorker.ts","redux/store.ts","index.tsx","icons/trash.svg","icons/settings.svg"],"names":["zIndex","useJSS","createUseStyles","Bounder","backgroundImage","backgroundPosition","width","height","display","fontSize","color","position","top","left","userSelect","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","CONTAINER","VALUE","addModule","id","name","moduleType","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","updateControlRange","newRange","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","mergeContainer","containerID","newModules","newConnections","restoreFromState","state","audioCtx","window","AudioContext","webkitAudioContext","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","value","controlSetFuncs","Number","stop","start","audioNode","connectingParamIDs","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","typeTypes","makeOutput","resume","masterGain","createGain","connect","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","audioModules","makeContainer","makeMediaElement","audioRef","current","url","src","pause","play","createMediaElementSource","ref","makeDistortionCurve","amount","x","k","curve","Float32Array","deg","Math","PI","i","abs","makeDistortion","distortion","createWaveShaper","newAmount","newOversample","floor","oversample","makeAnalyzer","analyzer","createAnalyser","fftSize","bufferLength","frequencyBinCount","timeArray","makeEnvelopedTrigger","constant","decay","sustain","val","currTime","currentTime","linearRampToValueAtTime","setTargetAtTime","cancelAndHoldAtTime","bufferSize","sampleRate","makeWhiteNoise","buffer","createBuffer","data","getChannelData","random","noise","createBufferSource","loop","downSample","freqArray","harmonic","over","map","num","getFreqFromIndex","index","makeTuner","pow","smoothingTimeConstant","getFloatFrequencyData","maxBin","maxdB","harmonicArray","numHarmonics","min","harmonicCopy","add","addHarmonics","makeAddModule","dispatch","osc","oscControlData","controlType","paramID","range","gainControlData","output","outputControlData","maxRange","filter","filterControlData","komp","kompControlData","panner","pannerControlData","delay","delayControlData","constantControlData","mediaControlData","addAudioTag","reRenderAudioTags","container","containerControlData","distortionControlData","analyzerControlData","envelopedTrigger","envelopedTriggerControlData","whiteNoise","whiteNoiseControlData","tuner","tunerControlData","makePointerLayerData","isOpen","pointerId","onPointerMove","onPointerUp","PointerLayer","pointerLayerData","resetPointerLayerData","classes","pointerLayerRef","useRef","useEffect","className","e","configureSpaceDB","spaceDB","feathers","restClient","rest","configure","fetch","projectSaveService","service","containerSaveService","setUserAgent","userAgent","toLowerCase","indexOf","usingElectron","getLocation","innerHeight","pageY","offsetHeight","innerWidth","pageX","offsetWidth","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","smallSize","smallBorderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","diameter","leftBarWidth","iconRouterWidth","backgroundColor","ContextMenu","maxHeight","padding","overflowY","MenuItem","maxWidth","borderStyle","borderColor","event","children","onClose","bounderStyle","style","cmRef","useState","location","setLocation","onPointerDown","Object","assign","stopPropagation","fromMod","toMod","length","alert","disconnect","Button","cursor","notClickable","margin","textAlign","boxShadow","onClick","onKeyDown","onContextMenu","TrashSVG","alt","trashSVG","DeleteButtonBounder","DeleteButtonSVG","DeleteButton","ModuleDeleteButton","am","useDispatch","connections","useSelector","selectedModule","modules","inputs","forEach","inputData","actualOutputID","actualInputID","outputs","outputData","Connection","Name","MenuHeader","whiteSpace","OpenButton","SaveButton","InputOutputView","key","ContainerOpenButton","fillContainerID","reRenderFillContainer","SpaceDBSaveButton","find","containerSaves","openSpaceDBContainerSaveMenu","FlexRow","flexWrap","FlexCol","SwitchSVG","marginLeft","flexShrink","Text","fullWidth","fullHeight","rectWidth","rectHeight","rectX","circleCY","Switch","text","onSwitch","initState","isSwitched","setSwitched","spring","useSpring","cx","fill","config","tension","y","rx","ry","circle","cy","r","onDrop","onDragOver","MarkContainerControls","open","containerControls","keys","control","containerControl","markedToContainer","modName","isMarked","nowMarked","openControlRenameMenu","switchStyle","MarkContainerIO","baseContainerID","showingContainerInput","showingContainerOutput","isContainerInput","newState","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","Conditional","showIf","FileSaveButton","openFileContainerSaveMenu","makeData","ModuleContextMenu","setData","openModuleContextMenu","title","openModuleRenameMenu","saveName","remove","res","console","log","refreshSpaceDBModules","SDBModuleContextMenu","openSDBModuleContextMenu","ProjectDeleteButton","setSaveList","openConfirmDeleteMenu","setTimeout","saveNames","SDBProjectContextMenu","openSDBProjectContextMenu","ContextMenus","FillBounder","FillHeaderBounder","FillHeader","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","flexFlow","IconControlContainer","justifySelf","overflowX","ArcherElement","gridTemplateRows","gridTemplateColumns","IconName","IconConnector","alignSelf","ControlBounder","ControlMenu","ControlTypeSelect","ControlInput","Pad","SrcName","overflowWrap","wordWrap","hyphens","File","setFunc","reRenderIcon","label","htmlFor","opacity","onChange","file","target","files","URL","createObjectURL","audioTags","srcName","Type","audioModule","stringIn","str","ar","bothStringsIn","str1","str2","out","push","clamp","max","inRange","mapValBetweenRanges","fromRange","toRange","valProportion","toRangeDif","getRotation","makeValString","roundedNumString","toString","slice","KnobContainer","placeItems","KnobSVG","gridRow","gridColumn","KnobText","InteractionLayer","SettingsButton","placeSelf","justClicked","StatelessKnob","initValue","onEveryChange","onSettingsClick","inputVal","setInputVal","svgRef","scale","tempVal","textRef","movementY","transform","stroke","strokeWidth","onBlur","newVal","blur","onDragStart","preventDefault","shiftKey","placeholder","focus","openPointerLayer","settingsSVG","ValueControl","displayModName","currRange","openKnobRangeSetMenu","ButtonControl","SwitchControl","Graph","yRange","zero","setWidth","setup","p5","canvasParentRef","createCanvas","clientWidth","parent","CENTER","draw","getFloatTimeDomainData","xStep","background","currX","currY","strokeWeight","nextX","nextY","line","zeroXStep","openAnalyzerRangeSetMenu","getModuleColor","BabylonCanvas","onRender","onSceneReady","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","reactCanvas","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","getEngine","addEventListener","dispose","removeEventListener","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","keepOnlyIdsInObj","idsToKeep","ObjFrom2Arrays","notes","keysNoSharp","note","notesNoSharp","noteIndices","noteFreqRange","dialRange","makeTextPlane","textPlane","MeshBuilder","CreatePlane","sourcePlane","Plane","textMat","AdvancedDynamicTexture","CreateForMesh","textBlock","TextBlock","addControl","makeDial","dialMat","StandardMaterial","tickMat","diffuseColor","Color3","dial","CreateCylinder","tessellation","material","cullingStrategy","AbstractMesh","CULLINGSTRATEGY_OPTIMISTIC_INCLUSION","tickPos","tickNode","TransformNode","tick","CreateBox","depth","rotation","noteTextPlane","freqTextPlane","Tuner","frame","clearColor","Color4","FromHexString","ambientColor","camPos","Vector3","TargetCamera","setTarget","lightPos","light","PointLight","diffuse","specular","maxFreq","getMeshByName","marginTop","PadControl","onPointerCancel","Value","ContainerControlMenu","DropSquare","getChildrenRecursive","childIDs","childModules","containerChildIDs","getInternalConnectionIDs","trimmedIDs","allConnectionIDs","connectionIDs","getInternalConnections","getContainerModulesConnections","restoreAudioModule","mergeExistingContainerAM","toType","fromType","genRandomID","totNumber","getReplicatedState","totNumberModules","totNumberConnections","modIDs","modIDConverter","connectionIDConverter","values","containerMod","outputID","inputID","connection","undefined","performContainerMerge","modulesToMerge","connectionsToMerge","duplicateModule","newID","setHL","dataTransfer","getData","currentChildren","possiblyMod","possiblyOccupyingID","mod","isOccupied","fromRow","fromCol","refreshArcherContainer","moduleDragType","MOVE","COPY","duplicateContainer","dropType","get","isHL","dsStyle","onDragEnter","types","onDragLeave","openAddModuleMenu","onPointerEnter","onPointerLeave","ModuleViewIcon","gridCol","isLarge","setLarge","reRender","toReRender","archerElementStyle","iconStyle","nameStyle","openConnectionMenu","iconOnDrop","draggable","iconOnDragStart","persist","relations","targetId","targetAnchor","sourceAnchor","strokeColor","ModuleViewFill","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","arrowLength","flat","DrawerBounder","right","Drawer","DrawerHeader","DrawerHeaderItem","textDecoration","ItemRouter","alignContent","Toggle","ToggleLine","SDBSaveList","HeaderItem","linkStyle","selectedRoute","restoreAMFromState","prevConnections","numberRestores","connectLate","numTries","buttonStyle","SpaceDBMenu","saveList","openSpaceDBProjectSaveMenu","savedState","BlankProjectButton","numMods","openConfirmBlankProjectMenu","saveJSONToFileHandle","fileHandle","json","a","createWritable","writable","write","JSON","stringify","close","loadJSONFromPickedFile","onFileHandle","showOpenFilePicker","getFile","parse","saveJSONToChosenFile","onSaved","showSaveFilePicker","description","accept","saveFileHandle","getTrimmedSMFileName","getDirectoryContentNames","dirHandle","names","getDirectorySMMNames","allNames","saveSMM","containerSave","getFileHandle","create","getSavedSMMFromName","stringData","OpenFileButton","flashNotification","SaveAsNewButton","SaveCurrentButton","FileMenu","reRenderFileMenu","drawerWidth","addPx","RightDrawer","setOpen","drawerSpring","setSR","drawerRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","adjusting","div","setPointerCapture","clientX","releasePointerCapture","onWheel","scrollLeft","deltaY","AudioTag","possiblyMediaElement","autoPlay","AudioTags","ids","CenterMenuBounder","backdropFilter","CenterMenu","border","Header","isClosed","headerClassName","headerStyle","header","AutoPlacingGrid","numRows","numCols","gridAutoFlow","direction","gridAutoRows","gridAutoColumns","gap","justifyItems","connectionExists","actualToID","newParam","Module","flexGrow","ConnectorBounder","marginBottom","ConnectorName","ParamName","ConnectionReciever","SmallConnectionReciever","InModule","startsBig","isFromContainer","isToContainer","audioMod","isBig","setBig","marginRight","input","actualFromID","ContainerInModule","isBase","modInputs","childrenStartBig","inputModID","OutModule","ContainerOutModule","modOutputs","outputModID","ConnectionMenu","CMInputBounder","CenterMenuInput","onChangeSubmit","KnobRangeSetMenu","setMin","setMax","setMaxRange","preOnClose","SpaceDBProjectSaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","inputRef","autoFocus","update","ConfirmDeleteMenu","confirmContainerSaveName","success","saveContainerToFile","save","moduleDirectoryHandle","initName","FileContainerSaveMenu","confirmOpen","setConfirmOpen","containerModID","trySaveModule","fileModuleSaveNames","SpaceDBContainerSaveMenu","setName","AnalyzerRangeSetMenu","InputSubmit","Error","RenameMenu","onSubmit","setVal","isTooShort","setIsTooShort","trySubmit","toRenameID","RenameModuleMenu","newName","renameModule","parentModID","RenameControlMenu","renameContainerControl","LeftBar","LeftBarButton","RouterBounder","IconRouter","SearchBar","outline","selectedGroup","setSG","addModuleMenuGroups","group","SPACEDB_MODULES","DrawerItem","DrawerIcon","DrawerItemText","ModuleIcon","fullName","shortName","isFocussed","totNumModules","addSelectedSearchModule","onFocus","ModuleIcons","moduleData","effectModuleData","sourceModuleData","utilityModuleData","allModuleData","concat","SpaceDBModuleIcon","moduleName","SpaceDBModules","spaceDBModules","totNumConnections","FileModuleIcon","SearchIcons","query","upperCaseQuery","toUpperCase","filteredSpaceDBModules","filteredModuleData","filteredFileModules","FileModules","fileModules","setFileModules","showDirectoryPicker","prevSelectedGroup","EFFECTS","SOURCES","UTILITY","FILE_MODULES","SEARCH","setQuery","searchRef","AddModuleMenu","setSpaceDBModules","styleSpring","toContainerControls","isBaseContainer","renameContainer","markContainerInput","markContainerOutput","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","renameContainerControlReducer","bcidReducer","removeModule","toTrimModIDs","getContainerIDs","toTrimConnectionIDs","trimmedModules","childID","connectionReducer","createInitState","combinedModuleConnectionReducer","rootReducer","makeBlankProject","emptyState","ConfirmBlankProject","CenterMenus","makeNotificationData","Notification","setNotificationData","isVisible","setIsVisible","notificationTime","App","setPointerLayerData","Boolean","hostname","match","store","createStore","composeWithDevTools","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.0a96820c.chunk.js","sourcesContent":["interface ZIndex {\n  [index: string]: number\n}\n\nexport const zIndex: ZIndex = {\n  background: -1,\n  centerMenu: 100,\n  contextMenu: 50,\n  moduleViewBounder: 0,\n}","import { createUseStyles } from 'react-jss'\nimport { zIndex } from '../theme/zIndex'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    //backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    backgroundImage: 'url(https://i.imgur.com/mSjoh6M.jpg)',\n    backgroundPosition: 'center',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: zIndex.background,\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: zIndex.moduleViewBounder,\n    overflow: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\nimport { DistortionModule } from './modules/distortion'\nimport { AnalyzerModule } from './modules/analyzer'\nimport { WhiteNoiseModule } from './modules/whiteNoise'\nimport { TunerModule } from './modules/tuner'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\nexport const DISTORTION = 'DISTORTION'\nexport const ANALYZER = 'ANALYZER'\nexport const ENVELOPED_TRIGGER = 'ENVELOPED_TRIGGER'\nexport const WHITE_NOISE = 'WHITE_NOISE'\nexport const TUNER = 'TUNER'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN' | 'DISTORTION' | 'ANALYZER' | 'ENVELOPED_TRIGGER' | 'WHITE_NOISE' | 'TUNER'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule | DistortionModule | AnalyzerModule | WhiteNoiseModule | TunerModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const NONE = 'NONE' // no control rendered, but the func is available\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\nexport const GRAPH = 'GRAPH'\nexport const PAD = 'PAD'\nexport const TUNER_CONTROL = 'TUNER_CONTROL'\n\nexport type ControlType = 'NONE' | 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH' | 'GRAPH' | 'PAD' | 'TUNER_CONTROL'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => number | number[] | void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID?: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n  markedToContainer?: boolean\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction, RenameContainerControlAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string, name?: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n    name,\n  }\n}\n\nexport const renameContainerControl = (name: string, parentModID: string, modID: string, controlID: string, actualModID: string): RenameContainerControlAction => {\n  return {\n    type: RENAME_CONTAINER_CONTROL,\n    name,\n    parentModID,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const RENAME_CONTAINER_CONTROL = 'RENAME_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { Modules, Connections } from \"../stateTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}\n\nexport const mergeContainer = (containerID: string, newModules: Modules, newConnections: Connections, parentID: string, row: number, col: number): MergeContainerAction => {\n  return {\n    type: MERGE_CONTAINER,\n    containerID,\n    newModules,\n    newConnections,\n    parentID,\n    row,\n    col,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\nexport const MERGE_CONTAINER = 'MERGE_CONTAINER'\n","import { RESTORE_FROM_STATE } from \"./rootActionTypes\";\nimport { RootState } from \"../stateTSTypes\";\nimport { RestoreFromStateAction } from \"./rootActionTSTypes\";\n\nexport function restoreFromState(state: RootState): RestoreFromStateAction {\n  return {\n    type: RESTORE_FROM_STATE,\n    state,\n  }\n}","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","declare global {\n  interface Window {\n    webkitAudioContext: AudioContext\n  }\n}\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext // works with safari\nconst audioCtx = new AudioContext()\nexport default audioCtx","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [0.0001, 1000],\n      maxRange: [0.0001, 1000],\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-40, 40],\n      maxRange: [-40, 40],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [0, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 440],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    \n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    \n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs, FILE, BUTTON, ControlData } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nexport function makeMediaElementControlData(): ControlData {\n  return {\n    'choose file': {\n      controlType: FILE,\n    },\n    'play': {\n      controlType: BUTTON,\n    },\n    'pause': {\n      controlType: BUTTON,\n    }\n  }\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      },\n      'pause': () => {\n        (audioRef.current as HTMLAudioElement).pause()\n      },\n      'play': () => {\n        (audioRef.current as HTMLAudioElement).play()\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import audioCtx from '../../audioCtx'\nimport { VALUE, ControlData, BaseAM } from '../moduleTypes';\n\nexport interface DistortionModule extends BaseAM {\n  audioNode: WaveShaperNode,\n}\n\nexport function makeDistortionControlData(): ControlData {\n  return {\n    'amount': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 1000],\n    },\n    'oversample': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 4],\n      maxRange: [0, 4],\n    }\n  }\n}\n\nfunction makeDistortionCurve(amount: number) {\n  var k = typeof amount === 'number' ? amount : 50,\n    n_samples = 44100,\n    curve = new Float32Array(n_samples),\n    deg = Math.PI / 180,\n    i = 0,\n    x;\n  for (; i < n_samples; ++i) {\n    x = i * 2 / n_samples - 1;\n    curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n  }\n  return curve\n}\n\nfunction makeDistortion(prevControlData?: ControlData): DistortionModule {\n  const distortion = audioCtx.createWaveShaper()\n  distortion.curve = makeDistortionCurve(prevControlData ? prevControlData['amount'].value as number : 0)\n\n  const controlSetFuncs = {\n    'amount': (newAmount: string) => {\n      distortion.curve = makeDistortionCurve(Number(newAmount))\n    },\n    'oversample': (newAmount: string) => {\n      const newOversample = Math.floor(Number(newAmount))\n      if (newOversample < 2) {\n        distortion.oversample = 'none'\n      } else if (newOversample < 4) {\n        distortion.oversample = '2x'\n      } else {\n        distortion.oversample = '4x'\n      }\n    }\n  }\n  return {\n    audioNode: distortion,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeDistortion","import audioCtx from '../../audioCtx'\nimport { ControlSetFuncs, BaseAM, ControlData, GRAPH } from '../moduleTypes'\n\nexport interface AnalyzerModule extends BaseAM {\n  audioNode: AnalyserNode\n  timeArray: Float32Array\n  bufferLength: number\n}\n\nexport function makeAnalyzerControlData(): ControlData {\n  return {\n    'time graph': {\n      controlType: GRAPH,\n      range: [-1.5, 1.5],\n    }\n  }\n}\n\nfunction makeAnalyzer(prevControlData?: ControlData): AnalyzerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = 1024\n  const bufferLength = analyzer.frequencyBinCount\n  const timeArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'time graph': () => {\n      \n    }\n  }\n\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    timeArray,\n    bufferLength,\n  }\n}\n\nexport default makeAnalyzer","import { BaseAM, ControlData, VALUE, PAD } from \"../moduleTypes\"\nimport audioCtx from '../../audioCtx'\n\nexport interface EnvelopedTriggerModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeEnvelopedTriggerControlData(): ControlData {\n  return {\n    'trigger': {\n      controlType: PAD,\n    },\n    'attack': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'decay': {\n      controlType: VALUE,\n      value: 0.2,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'sustain': {\n      controlType: VALUE,\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 100],\n    },\n    'release': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n  }\n}\n\nfunction makeEnvelopedTrigger(prevControlData?: ControlData): EnvelopedTriggerModule {\n  const constant = audioCtx.createConstantSource()\n  constant.offset.value = 0\n\n  let attack = .1\n  let decay = 0.2\n  let sustain = 1\n  let release = .1\n\n  if (prevControlData) {\n    attack = prevControlData['attack'].value as number\n    decay = prevControlData['decay'].value as number\n    sustain = prevControlData['sustain'].value as number\n    release = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs = {\n    'trigger': (val: string) => {\n      const currTime = audioCtx.currentTime\n      if (val === 'on') {\n        constant.offset.linearRampToValueAtTime(1, currTime + attack)\n        constant.offset.setTargetAtTime(sustain, currTime + attack, decay)\n      } else {\n        constant.offset.cancelAndHoldAtTime(currTime)\n        constant.offset.setTargetAtTime(0, currTime, release)\n      }\n    },\n    'attack': (val: string) => {\n      attack = Number(val)\n    },\n    'decay': (val: string) => {\n      decay = Number(val)\n    },\n    'sustain': (val: string) => {\n      sustain = Number(val)\n    },\n    'release': (val: string) => {\n      release = Number(val)\n    },\n  }\n\n  constant.start()\n\n  return {\n    audioNode: constant,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeEnvelopedTrigger","import audioCtx from \"../../audioCtx\";\nimport { BaseAM, ControlData } from \"../moduleTypes\";\n\nexport interface WhiteNoiseModule extends BaseAM {\n  audioNode: AudioBufferSourceNode\n}\n\nexport function makeWhiteNoiseControlData(): ControlData {\n  return {}\n}\n\nconst length = 10\nconst bufferSize = audioCtx.sampleRate * length\n\nfunction makeWhiteNoise(prevControlData?: ControlData): WhiteNoiseModule {\n  const buffer = audioCtx.createBuffer(1, bufferSize, audioCtx.sampleRate)\n  let data = buffer.getChannelData(0)\n  for (let i = 0; i < bufferSize; i++) {\n    data[i] = Math.random() * 2 - 1\n  }\n  let noise = audioCtx.createBufferSource()\n  noise.buffer = buffer\n  noise.loop = true\n  noise.start()\n\n  return {\n    audioNode: noise,\n    connectingParamIDs: [],\n    controlSetFuncs: {},\n  }\n}\n\nexport default makeWhiteNoise","import { add } from \"mathjs\"\nimport audioCtx from \"../../audioCtx\"\nimport { BaseAM, ControlData, ControlSetFuncs, TUNER_CONTROL } from \"../moduleTypes\"\n\nexport interface TunerModule extends BaseAM {\n  audioNode: AnalyserNode,\n  freqArray: Float32Array,\n  bufferLength: number\n}\n\nexport function makeTunerControlData(): ControlData {\n  return {\n    'tuner': {\n      controlType: TUNER_CONTROL,\n    },\n  }\n}\n\nfunction downSample(freqArray: number[], bufferLength: number, harmonic: number) {\n  let over = false\n  return freqArray.map((num, i) => {\n    if (over) {\n      return 0\n    } else if (harmonic * i < bufferLength) {\n      return freqArray[harmonic * i]\n    } else {\n      over = true\n      return 0\n    }\n  })\n}\n\nfunction addHarmonics(freqArray: Float32Array, bufferLength: number, numHarmonics: number) {\n  let min = Math.min(...freqArray)\n  let harmonicArray = [...freqArray.map(val => val - min)]\n  let harmonicCopy = [...harmonicArray]\n  for (let harmonic = 2; harmonic <= numHarmonics; harmonic++) {\n    harmonicArray = add(harmonicArray, downSample(harmonicCopy, bufferLength, harmonic)) as number[]\n  }\n  return harmonicArray\n}\n\nfunction getFreqFromIndex(index: number, bufferLength: number) {\n  return index * audioCtx.sampleRate / (2 * bufferLength)\n}\n\nfunction makeTuner(prevControlData?: ControlData): TunerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = Math.pow(2, 15)\n  analyzer.smoothingTimeConstant = 0\n  const bufferLength = analyzer.frequencyBinCount\n  const freqArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'tuner': () => {\n      // returns the current max freq, and db at that freq\n      analyzer.getFloatFrequencyData(freqArray)\n      let maxBin = 0\n      let maxdB = 0\n      const harmonicArray = addHarmonics(freqArray, bufferLength, 5)\n      for (let i = 0; i < bufferLength; i++) {\n        if (harmonicArray[i] > maxdB) {\n          maxdB = harmonicArray[i]\n          maxBin = i\n        }\n      }\n      return [getFreqFromIndex(maxBin, bufferLength), freqArray[maxBin]]\n    }\n  }\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    bufferLength,\n    freqArray,\n  }\n}\n\nexport default makeTuner","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n  TUNER,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\nimport { makeMediaElementControlData } from './modules/mediaElement'\nimport makeDistortion, { makeDistortionControlData } from './modules/distortion'\nimport makeAnalyzer, { makeAnalyzerControlData } from './modules/analyzer'\nimport makeEnvelopedTrigger, { makeEnvelopedTriggerControlData } from './modules/envelopedTrigger'\nimport makeWhiteNoise, { makeWhiteNoiseControlData } from './modules/whiteNoise'\nimport makeTuner, { makeTunerControlData } from './modules/tuner'\n\ndeclare global {\n  interface Window {\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n  }\n}\n\nfunction makeAddModule() {\n  window.addModule = function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData = makeMediaElementControlData()\n        window.addAudioTag(id); window.reRenderAudioTags()\n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0']))\n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n      case DISTORTION:\n        const distortion = makeDistortion()\n        const distortionControlData = makeDistortionControlData()\n        window.audioModules = { ...window.audioModules, [id]: distortion }\n        dispatch(addModule(id, name, moduleType, distortionControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ANALYZER:\n        const analyzer = makeAnalyzer()\n        const analyzerControlData = makeAnalyzerControlData()\n        window.audioModules = { ...window.audioModules, [id]: analyzer }\n        dispatch(addModule(id, name, moduleType, analyzerControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ENVELOPED_TRIGGER:\n        const envelopedTrigger = makeEnvelopedTrigger()\n        const envelopedTriggerControlData = makeEnvelopedTriggerControlData()\n        window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n        dispatch(addModule(id, name, moduleType, envelopedTriggerControlData, parentID, row, col, [], ['0']))\n        break\n      case WHITE_NOISE:\n        const whiteNoise = makeWhiteNoise()\n        const whiteNoiseControlData = makeWhiteNoiseControlData()\n        window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n        dispatch(addModule(id, name, moduleType, whiteNoiseControlData, parentID, row, col, [], ['0']))\n        break\n      case TUNER:\n        const tuner = makeTuner()\n        const tunerControlData = makeTunerControlData()\n        window.audioModules = { ...window.audioModules, [id]: tuner }\n        dispatch(addModule(id, name, moduleType, tunerControlData, parentID, row, col, ['0'], ['0']))\n        break\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import feathers from '@feathersjs/feathers'\nimport rest from '@feathersjs/rest-client'\n\ndeclare global {\n  interface Window {\n    projectSaveService: any\n    containerSaveService: any\n  }\n}\n\nfunction configureSpaceDB() {\n  const spaceDB = feathers()\n  const restClient = rest('http://192.168.1.64:30300') // spaceDB\n\n  spaceDB.configure(restClient.fetch(window.fetch))\n  window.projectSaveService = spaceDB.service('project-save-service')\n  window.containerSaveService = spaceDB.service('container-save-service')\n}\n\nexport default configureSpaceDB","declare global {\n  interface Window {\n    usingElectron: boolean\n  }\n}\n\nfunction setUserAgent() {\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.indexOf(' electron/') > -1) {\n    window.usingElectron = true\n  } else {\n    window.usingElectron = false\n  }\n}\n\nexport default setUserAgent","import { MouseEvent, RefObject } from \"react\";\n\nexport function getLocation(e: MouseEvent<HTMLDivElement>, ref: RefObject<HTMLDivElement>) {\n  if (!ref.current) {\n    return {\n      top: -1000,\n      left: -1000,\n    }\n  } else {\n    return {\n      top: (window.innerHeight - e.pageY) >= ref.current.offsetHeight ?\n        e.pageY : window.innerHeight - ref.current.offsetHeight,\n      left: (window.innerWidth - e.pageX) >= ref.current.offsetWidth ?\n        e.pageX : window.innerWidth - ref.current.offsetWidth,\n    }\n  }\n  \n}","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: '#000000c4',\n  centerMenuBackground: '#000000b3',\n  centerMenuBorder: grey,\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n  disabled: '#ffffff61',\n\n  dropSquareHL: '#ffffff60',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  moduleInput: '#da1212',\n  paramInput: 'blue',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C',\n\n  analyzerModuleBG: '#00347D',\n\n  confirmButton: '#00802da6',\n  denyButton: '#cc00006e',\n\n  // Context menu\n  contextMenuItemBorder: 'black',\n  contextMenuBackground: '#08101deb',\n\n  sdbSaveButton: '#282c349c',\n\n  // add module menu\n  addModuleLeftBarBG: 'transparent',\n  addModuleLeftBarButtonHL: '#ffffff60',\n  addModuleSearchBarBG: '#1d1d2b',\n  addModuleSearchBarText: 'white',\n\n  // notification\n  success: '#00802d',\n}\n\nexport const paramColors = ['#dbde02', '#0a9408', '#470ff5', '#0ba8cc']\n// yellow, green, purple, light blue\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400', // converted to px\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIconWidth: '25vmin',\n    bigIconHeight: '35vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '2.5vmin',\n    smallSize: '1.5vmin',\n    smallBorderRadius: '1.5vmin',\n  },\n  knob: {\n    size: 7, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  },\n  switch: {\n    diameter: 3 // in vmin\n  },\n  addModuleMenu: {\n    leftBarWidth: '20vmin',\n    iconRouterWidth: '60vmin',\n    height: '60vmin',\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst maxWidth = '8em'\nconst maxHeight = '12em'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    zIndex: zIndex.contextMenu,\n  },\n\n  ContextMenu: {\n    maxHeight,\n    backgroundColor: colors.contextMenuBackground,\n    padding: '.2em',\n    borderRadius: '.2em',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0em',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  MenuItem: {\n    maxWidth,\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      borderColor: colors.contextMenuItemBorder\n    }\n  }\n})\n\nexport default useJSS","import React, { ReactNode, useEffect, useRef, useState } from 'react'\nimport { MouseDivEvent } from '../types'\nimport { getLocation } from './helpers'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children: ReactNode\n  event: MouseDivEvent\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n  style?: CSS.Properties\n}\n\nfunction ContextMenu({ event, children, onClose, bounderStyle, style }: Props) {\n  const classes = useJSS()\n  const cmRef = useRef<HTMLDivElement>(null)\n  const [location, setLocation] = useState(getLocation(event, cmRef))\n  useEffect(() => {\n    setLocation(getLocation(event, cmRef))\n  }, [event])\n  return (\n    <div className={classes.Bounder}\n      onPointerDown={onClose}\n      style={bounderStyle}\n    >\n      <div className={classes.ContextMenu}\n        style={Object.assign({\n          top: location.top,\n          left: location.left,\n        }, style)}\n        ref={cmRef}\n        onPointerDown={e => { e.stopPropagation() }}\n      >\n        { children }\n      </div>\n    </div>\n  )\n}\n\nexport default ContextMenu","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: ({ notClickable }) => notClickable ? '' : 'pointer',\n      borderColor: ({ notClickable }) => notClickable ? 'transparent' : 'white',\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '.4em',\n    margin: '.3em',\n    textAlign: 'center',\n    fontSize: ({ fontSize }) => fontSize,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n})\n\nexport default useJSS","import React, { RefObject, KeyboardEvent, MouseEvent } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  children?: React.ReactNode\n  onClick?: (e: MouseEvent<HTMLDivElement>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n  ref?: RefObject<HTMLDivElement>\n  onKeyDown?: (e: KeyboardEvent<HTMLDivElement>) => void\n  onContextMenu?: (e: MouseEvent<HTMLDivElement>) => void\n  fontSize?: string\n  notClickable?: boolean\n}\n\nfunction Button({ className, onClick, children, style, onPointerDown, ref, onKeyDown, onContextMenu, fontSize, notClickable }: Props) {\n  const classes = useJSS({ fontSize, notClickable })\n  return (\n    <div className={className ? `${classes.Button} ${className}` : classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n      ref={ref}\n      onKeyDown={onKeyDown}\n      onContextMenu={onContextMenu}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import React from 'react'\nimport trashSVG from '../../icons/trash.svg'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  alt: string\n}\n\nfunction TrashSVG({ className, style, alt }: Props) {\n  return (\n    <img className={className}\n      style={style}\n      src={trashSVG}\n      alt={alt}\n    />\n  )\n}\n\nexport default TrashSVG","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DeleteButtonBounder: {\n    backgroundColor: colors.deleteButton,\n    fontSize: sizes.text.small,\n    padding: '.2em .4em',\n    '&:hover': {\n      borderColor: colors.deleteButton,\n    },\n  },\n\n  DeleteButtonSVG: {\n    width: '1.5em',\n    height: '1.5em',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport Button from '../Button/Button'\nimport TrashSVG from '../SVG/TrashSVG'\nimport useJSS from './style'\n\ninterface Props {\n  onClick: () => void\n}\n\nfunction DeleteButton({ onClick }: Props) {\n  const classes = useJSS()\n  return (\n    <Button className={classes.DeleteButtonBounder}\n      onPointerDown={e => { e.stopPropagation() }}\n      onClick={onClick}\n    >\n      <TrashSVG className={classes.DeleteButtonSVG}\n        alt={'delete'}\n      />\n    </Button>\n  )\n}\n\nexport default DeleteButton","import React from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../../redux/allActions'\nimport { useSelector } from 'react-redux'\nimport DeleteButton from '../DeleteButton'\n\ninterface Props {\n  modID: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ modID, onClose }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <DeleteButton\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(selectedModule.id))\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ModuleDeleteButton","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Connection: {\n    fontSize: sizes.text.xsmall,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  Name: {\n    fontSize: sizes.text.medium,\n    margin: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  MenuHeader: {\n    fontSize: sizes.text.small,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    whiteSpace: 'noWrap',\n  },\n\n  OpenButton: {\n    fontSize: sizes.text.small,\n  },\n\n  SaveButton: {\n    fontSize: sizes.text.small\n  },\n})\n\nexport default useJSS","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { Modules, RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../../redux/allActions'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  modID: string\n  modules: Modules\n}\n\nfunction InputOutputView({ modID, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <Fragment>\n\n      {selectedModule.inputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>inputs</div>\n      }\n\n      {selectedModule.inputs.map((connectionID, index) => {\n        const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[fromID].name\n        return (\n          <div className={classes.Connection}\n            key={fromID + param + 'inp' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => {e.stopPropagation()}}\n          >\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n\n      {selectedModule.outputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>outputs</div>\n      }\n\n      {selectedModule.outputs.map((connectionID, index) => {\n        const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[toID].name\n        return (\n          <div className={classes.Connection}\n            key={toID + param + 'out' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => { e.stopPropagation() }}\n          >\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default InputOutputView","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction ContainerOpenButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {modules[modID].moduleType !== CONTAINER ? null :\n        <Button className={classes.OpenButton}\n          onClick={() => {\n            window.fillContainerID = modID\n            window.reRenderFillContainer()\n            onClose()\n          }}\n          onPointerDown={(e) => { e.stopPropagation() }}\n        >\n          open\n        </Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default ContainerOpenButton","import React, { Fragment } from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\n\ninterface Props {\n  modules: Modules\n  modID: string\n  onClose: () => void\n}\n\nfunction SpaceDBSaveButton({ modules, modID, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {!window.usingElectron || modules[modID].moduleType !== CONTAINER ? null :\n      <Button className={classes.SaveButton}\n        onClick={() => {\n          window.containerSaveService.find().then((containerSaves: string[]) => {\n            window.openSpaceDBContainerSaveMenu(containerSaves, modID, onClose)\n          })\n          onClose()\n        }}\n      >\n        save to spaceDB\n      </Button>}\n    </Fragment>\n  )\n}\n\nexport default SpaceDBSaveButton","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  FlexRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n    flexWrap: ({ flexWrap }) => flexWrap,\n  },\n\n  FlexCol: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: ({ justifyContent }) => justifyContent,\n    alignItems: ({ alignItems }) => alignItems,\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  justifyContent?: string\n  alignItems?: string\n  flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse',\n}\n\nfunction FlexRow({ className, children, style, ref, justifyContent, alignItems, flexWrap }: Props) {\n  const classes = useJSS({ justifyContent, alignItems, flexWrap })\n  return (\n    <div className={className ? `${classes.FlexRow} ${className}` : classes.FlexRow}\n      style={style}\n      ref={ref}\n    >\n      { children }\n    </div>\n  )\n}\n\nexport default FlexRow","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    padding: '1vmin',\n  },\n\n  SwitchSVG: {\n    marginLeft: '1.5vmin',\n    flexShrink: 0,\n    //padding: '.5vmin',\n  },\n\n  Text: {\n    fontSize: ({ fontSize }) => fontSize,\n  }\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors, sizes } from '../../theme/theme'\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n  fontSize?: string\n}\n\nconst heightDif = 1\n\nconst fullWidth = 2 * sizes.switch.diameter\nconst fullHeight = sizes.switch.diameter + heightDif\n\nconst rectWidth = 1.5 * sizes.switch.diameter\nconst rectHeight = sizes.switch.diameter - heightDif\nconst rectX = sizes.switch.diameter / 4\nconst rectY = heightDif\n\nconst circleCY = (sizes.switch.diameter + heightDif) / 2\n\n\nfunction Switch({ text, onSwitch, initState, style, fontSize }: Props) {\n  const [isSwitched, setSwitched] = useState(initState)\n  const classes = useJSS({ fontSize })\n  const spring = useSpring({\n    cx: isSwitched ? `${fullWidth - sizes.switch.diameter / 2}vmin` : `${sizes.switch.diameter / 2}vmin`,\n    fill: isSwitched ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div className={classes.Text}\n        onClick={() => { onSwitch(!isSwitched); setSwitched(!isSwitched) }}\n      >\n        {text}\n      </div>\n      <svg className={classes.SwitchSVG}\n        width={`${fullWidth}vmin`}\n        height={`${fullHeight}vmin`}\n        onClick={() => {\n          onSwitch(!isSwitched); setSwitched(!isSwitched)\n        }}\n      >\n        <rect width={`${rectWidth}vmin`} height={`${rectHeight}vmin`} x={`${rectX}vmin`} y={`${rectY}vmin`} rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={`${circleCY}vmin`} r={`${sizes.switch.diameter / 2}vmin`} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import React, { DragEvent } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  className?: string\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n  onDrop?: (e: DragEvent<HTMLDivElement>) => void\n  onDragOver?: (e: DragEvent<HTMLDivElement>) => void\n  justifyContent?: string\n  alignItems?: string\n}\n\nfunction FlexCol({ className, children, style, ref, onDrop, onDragOver, justifyContent, alignItems }: Props) {\n  const classes = useJSS({ justifyContent, alignItems })\n  return (\n    <div className={className ? `${classes.FlexCol} ${className}` : classes.FlexCol}\n      style={style}\n      ref={ref}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n    >\n      { children }\n    </div>\n  );\n}\n\nexport default FlexCol","import React, { Fragment } from 'react'\nimport { sizes } from '../../../theme/theme'\nimport { Module, ContainerModule, RootState, ContainerControl } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../../redux/allActions'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport FlexRow from '../../Flex/FlexRow'\nimport Switch from '../../Switch/Switch'\nimport FlexCol from '../../Flex/FlexCol'\nimport useJSS from './style'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  const classes = useJSS()\n  const open = selectedModule.moduleType === CONTAINER ? \n    (selectedModule as ContainerModule).containerControls.length !== 0 \n    :\n    Object.keys(selectedModule.controlData).length !== 0\n  return (\n    <Fragment>\n      {!open ? null :\n      <FlexCol>\n        <div className={classes.MenuHeader}> mark as container control </div>\n        <FlexRow justifyContent='center' style={{ flexWrap: 'wrap', maxWidth: '40vmin' }}>\n          {\n            selectedModule.moduleType === CONTAINER ?\n            (selectedModule as ContainerModule).containerControls.map((control, index) => {\n              const { modID, controlID, actualModID, name, markedToContainer } = control\n              const modName = modules[modID].name\n              let containerControl: ContainerControl\n              const isMarked = markedToContainer ? true : false\n              if (isMarked) {\n                containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                  return (\n                    containerControl.controlID === controlID &&\n                    containerControl.actualModID === actualModID\n                  )\n                })[0]\n              }\n              return (\n                <FlexRow>\n                  <Switch initState={isMarked} text={name ? name : `${modName} - ${controlID}`}\n                    style={{ fontSize: sizes.text.small, padding: '.2em' }}\n                    key={modID + index}\n                    onSwitch={nowMarked => {\n                      if (nowMarked) {\n                        dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                      } else {\n                        dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                      }\n                    }}\n                  />\n                  {\n                    !isMarked ? null :\n                    <Button fontSize={sizes.text.xsmall}\n                      onClick={() => {\n                        window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                      }}\n                    >\n                      edit\n                    </Button>\n                  }\n                </FlexRow>\n              )\n            }) : null\n          }\n          {\n          selectedModule.moduleType === CONTAINER ? null :\n          Object.keys(selectedModule.controlData).map((controlID, index) => {\n            const isMarked = selectedModule.controlData[controlID].markedToContainer ? true : false\n            let containerControl: ContainerControl\n            if (isMarked) {\n              containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                return (\n                  containerControl.controlID === controlID &&\n                  containerControl.actualModID === selectedModule.id\n                )\n              })[0]\n            }\n            return (\n              <FlexRow key={index}>\n                <Switch initState={isMarked} text={controlID}\n                  style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                  key={controlID + index}\n                  onSwitch={nowMarked => {\n                    if (nowMarked) {\n                      dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    } else {\n                      dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                    }\n                  }} \n                />\n                {\n                  !isMarked ? null :\n                  <Button style={{ fontSize: sizes.text.small }}\n                    onClick={() => {\n                      window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                    }}\n                  >\n                    edit\n                  </Button>\n                }\n              </FlexRow>\n            )\n          })\n          }\n        </FlexRow>\n      </FlexCol>}\n    </Fragment>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\nimport Switch from '../../Switch/Switch'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\n\ninterface Props {\n  modID: string\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.small,\n  padding: '.1em',\n}\n\nfunction MarkContainerIO({ modID }: Props) {\n  const dispatch = useDispatch()\n  const baseContainerID = useSelector((state: RootState) => state.baseContainerID)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  const showingContainerInput = selectedModule.connectionInputs.length !== 0\n  const showingContainerOutput = selectedModule.connectionOutputs.length !== 0\n  const classes = useJSS()\n  return (\n    window.fillContainerID !== baseContainerID ?\n    <Fragment>\n      <MarkContainerControls selectedModule={selectedModule} />\n      {!showingContainerInput && !showingContainerOutput ?  null :\n      <div\n        className={classes.MenuHeader}\n      >mark as container io</div>\n      }\n      <FlexRow justifyContent='center'>\n        {!showingContainerInput ? null :\n        <Switch style={switchStyle}\n          fontSize={ sizes.text.xsmall }\n          key={selectedModule.id + 'inputSwitch'}\n          text={'input'} \n          initState={selectedModule.isContainerInput}\n          onSwitch={(newState) => {\n            if (newState) {\n              dispatch(markContainerInput(selectedModule.id))\n            } else {\n              dispatch(unmarkContainerInput(selectedModule.id))\n            }\n          }}\n        />}\n        {!showingContainerOutput ? null :\n        <Switch style={switchStyle}\n          fontSize={ sizes.text.xsmall }\n          key={selectedModule.id + 'outputSwitch'}\n          text={'output'}\n          initState={selectedModule.isContainerOutput}\n          onSwitch={(newState) => {\n            if (newState) {\n              dispatch(markContainerOutput(selectedModule.id))\n            } else {\n              dispatch(unmarkContainerOutput(selectedModule.id))\n            }\n          }}\n        />\n        }\n      </FlexRow>\n    </Fragment>\n    :\n    null\n  )\n}\n\nexport default MarkContainerIO","import React, { Fragment, ReactNode } from 'react'\n\ninterface Props {\n  children: ReactNode\n  showIf: boolean\n}\n\nfunction Conditional({ children, showIf }: Props) {\n  return (\n    <Fragment>\n      {!showIf ? null : children}\n    </Fragment>\n  )\n}\n\nexport default Conditional","import React from 'react'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { Modules } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\nimport Conditional from '../../Conditional/Conditional'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  modules: Modules\n  onClose: () => void\n}\n\nfunction FileSaveButton({ modID, modules, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <Conditional showIf={modules[modID].moduleType === CONTAINER}>\n      <Button className={classes.SaveButton}\n        onClick={() => {\n          window.openFileContainerSaveMenu(modID)\n          onClose()\n        }}\n      >\n        save to file\n      </Button>\n    </Conditional>\n  )\n}\n\nexport default FileSaveButton","import React, { Fragment, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport ContextMenu from '../ContextMenu/ContextMenu'\nimport DeleteButton from './ModuleDeleteButton'\nimport InputOutputView from './InputOutputView'\nimport ContainerOpenButton from './ContainerOpenButton'\nimport SpaceDBSaveButton from './SpaceDBSaveButton'\nimport { MouseDivEvent } from '../types'\nimport MarkContainerIO from './MarkContainerIO'\nimport useJSS from './style'\nimport FileSaveButton from './FileSaveButton'\n\ndeclare global {\n  interface Window {\n    openModuleContextMenu: (event: MouseDivEvent, modID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, modID?: string) {\n  return {\n    isOpen,\n    event,\n    modID,\n  }\n}\n\nfunction ModuleContextMenu() {\n  const modules = useSelector((state: RootState) => state.modules)\n  const [{ isOpen, event, modID }, setData] = useState(makeData(false))\n  window.openModuleContextMenu = (event, modID) => setData(makeData(true, event, modID))\n  const onClose = () => { setData(makeData(false)) }\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} onClose={onClose}>\n          <div className={classes.Name}\n            title='rename module'\n            onClick={() => {\n              window.openModuleRenameMenu(modID as string)\n            }}\n          >{modules[modID as string]?.name}</div>\n          <ContainerOpenButton modules={modules} modID={modID as string} onClose={onClose} />\n          <InputOutputView modID={modID as string} modules={modules}/>\n          <SpaceDBSaveButton modules={modules} modID={modID as string} onClose={onClose} />\n          <FileSaveButton modules={modules} modID={modID as string} onClose={onClose} />\n          <MarkContainerIO modID={modID as string} />\n          <DeleteButton modID={modID as string} onClose={onClose}/>\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default ModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  onClose: () => void\n}\n\nfunction ModuleDeleteButton({ saveName, onClose }: Props) {\n  return (\n    <DeleteButton onClick={() => {\n      window.containerSaveService.remove(saveName).then((res: string) => {\n        console.log(res)\n        //window.flashNotification(r)\n        window.refreshSpaceDBModules()\n        onClose()\n      })\n    }}/>\n  )\n}\n\nexport default ModuleDeleteButton","import React, { Fragment, useState } from 'react'\nimport { zIndex } from '../../../../theme/zIndex'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ModuleDeleteButton from './ModuleDeleteButton'\n\ndeclare global {\n  interface Window {\n    openSDBModuleContextMenu: (event: MouseDivEvent, saveName: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, event?: MouseDivEvent, saveName?: string) {\n  return {\n    isOpen,\n    event,\n    saveName\n  }\n}\n\nfunction SDBModuleContextMenu() {\n  const [{ isOpen, event, saveName }, setData] = useState(makeData(false))\n  window.openSDBModuleContextMenu = (event, saveName) => { setData(makeData(true, event, saveName)) }\n  const onClose = () => setData(makeData(false))\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} \n          onClose={() => setData(makeData(false))}\n          bounderStyle={{ zIndex: zIndex.centerMenu + 1 }}\n        >\n          <ModuleDeleteButton saveName={saveName as string} onClose={onClose}/>\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default SDBModuleContextMenu","import React from 'react'\nimport DeleteButton from '../../DeleteButton'\n\ninterface Props {\n  saveName: string\n  setSaveList: (arg: string[]) => void\n  onClose: () => void\n}\n\nfunction ProjectDeleteButton({ saveName, setSaveList, onClose }: Props) {\n  return (\n    <DeleteButton \n      onClick={() => {\n        window.openConfirmDeleteMenu(saveName, () => {\n          window.setTimeout(() => {\n            window.projectSaveService.find().then((saveNames: string[]) => { \n              setSaveList(saveNames) \n            })\n          }, 1000)\n        })\n        onClose()\n      }}\n    />\n  )\n}\n\nexport default ProjectDeleteButton","import React, { Fragment, useState } from 'react'\nimport ContextMenu from '../../ContextMenu/ContextMenu'\nimport { MouseDivEvent } from '../../types'\nimport ProjectDeleteButton from './ProjectDeleteButton'\n\ntype SetSaveList = (arg: string[]) => void\n\ndeclare global {\n  interface Window {\n    openSDBProjectContextMenu: (\n      event: MouseDivEvent,\n      saveName: string,\n      setSaveList: SetSaveList\n    ) => void\n  }\n}\n\nexport function makeData(\n  isOpen: boolean,\n  event?: MouseDivEvent,\n  saveName?: string,\n  setSaveList?: (arg: string[]) => void\n) {\n  return {\n    isOpen,\n    event,\n    saveName,\n    setSaveList\n  }\n}\n\nfunction SDBProjectContextMenu() {\n  const [{ isOpen, event, saveName, setSaveList }, setData] = useState(makeData(false))\n  window.openSDBProjectContextMenu = (event, saveName, setSaveList) => { setData(makeData(true, event, saveName, setSaveList)) }\n  const onClose = () => { setData(makeData(false)) }\n  return (\n    <Fragment>\n      {!isOpen ? null :\n        <ContextMenu event={event as MouseDivEvent} onClose={onClose}>\n          <ProjectDeleteButton saveName={saveName as string} setSaveList={setSaveList as SetSaveList} onClose={onClose} />\n        </ContextMenu>\n      }\n    </Fragment>\n  )\n}\n\nexport default SDBProjectContextMenu","import React, { Fragment } from 'react'\nimport ModuleContextMenu from './Module/ModuleContextMenu'\nimport SDBModuleContextMenu from './SpaceDB/Modules/SDBModuleContextMenu'\nimport SDBProjectContextMenu from './SpaceDB/Projects/SDBProjectContextMenu'\n\nfunction ContextMenus() {\n  return (\n    <Fragment>\n      <ModuleContextMenu />\n      <SDBProjectContextMenu />\n      <SDBModuleContextMenu />\n    </Fragment>\n  )\n}\n\nexport default ContextMenus","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n    flexShrink: 0,\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    justifyContent: 'center',\n    margin: '0vmin 1vmin'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n\n  Pad: {\n    width: '20vmin',\n    height: '15vmin',\n    borderRadius: '2vmin',\n    backgroundColor: 'black',\n  },\n\n  SrcName: {\n    fontSize: sizes.text.xsmall,\n    textAlign: 'center',\n    whiteSpace: 'normal',\n    justifyContent: 'center',\n    width: '100%',\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n    hyphens: 'auto',\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport { sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  actualModID: string\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n  label?: string\n}\n\nfunction File({ actualModID, controlID, setFunc, reRenderIcon, modName, label }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={actualModID + controlID}\n      >\n        <Button fontSize={sizes.text.small}>\n          {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n        </Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={actualModID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[actualModID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <div className={classes.SrcName}>\n        {window.audioTags[actualModID].srcName}\n      </div>\n    </div>\n  )\n}\n\nexport default File","import React from 'react'\nimport useJSS from './style'\nimport { SetFunc, AudioModuleWithTypes, ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\n\ninterface Props {\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  controlID: string\n  label?: string\n}\n\nfunction Type({ setFunc, controlID, actualModID, modName, label }: Props) {\n  const classes = useJSS()\n  const audioModule = window.audioModules[actualModID] as ConnectingAudioModule\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  const value = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value)\n  return (\n    <FlexRow style={{ justifyContent: 'center', margin: '1vmin 0vmin' }}>\n      <label htmlFor={'type'}>{label ? label : modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={e => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(actualModID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={actualModID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </FlexRow>\n  )\n}\n\nexport default Type","export function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1]\n}\n\nexport function mapValBetweenRanges(val: number, fromRange: [number, number], toRange: [number, number]) {\n\tconst valProportion = (val - fromRange[0]) / (fromRange[1] - fromRange[0])\n\tconst toRangeDif = toRange[1] - toRange[0]\n\treturn toRange[0] + valProportion * toRangeDif\n}","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nlet justClicked = false\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          if (e.target.value.length !== 0) {\n            const newVal = clamp(Number(e.target.value), range)\n            if (onChange) {\n              onChange(newVal)\n            }\n            setInputVal(makeValString(newVal))\n          } else {\n            if (textRef.current) {\n              textRef.current.value = inputVal\n            }\n          }\n        }}\n        onKeyDown={e => {\n          if (e.key === 'Enter') {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            if (justClicked) {\n              if (textRef.current) {\n                textRef.current.placeholder = textRef.current.value\n                textRef.current.value = ''\n                textRef.current.focus()\n              }\n            } else {\n              window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n              justClicked = true\n              window.setTimeout(() => { justClicked = false }, 200)\n            }\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        title='edit knob range'\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\nimport StatelessKnob from '../../Knob/StatelessKnob'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  displayModName?: string\n  label?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName, label }: Props) {\n  const { val, currRange } = useSelector((state: RootState) => {\n    return {\n      val: state.modules[actualModID].controlData[controlID].value as number,\n      currRange: state.modules[actualModID].controlData[controlID].range as [number, number],\n    }\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(actualModID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openKnobRangeSetMenu(actualModID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(actualModID, controlID, newRange))\n          })\n        }}\n      />\n      <div>{label ? label : displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n  label?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName, label }: Props) {\n  return (\n    <Button fontSize={sizes.text.small}\n      onClick={() => {\n        setFunc('')\n      }}\n    >\n      {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n    </Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Switch from '../../Switch/Switch'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  label?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName, label }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={label ? label : modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React, { useState } from 'react'\nimport Sketch from 'react-p5'\nimport p5Types from 'p5'\nimport { AnalyzerModule } from '../../../audioModules/modules/analyzer'\nimport { mapValBetweenRanges } from '../../../helpers/genFuncs'\nimport { colors, sizes } from '../../../theme/theme'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { updateControlRange } from '../../../redux/allActions'\nimport FlexCol from '../../Flex/FlexCol'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  modID: string\n}\n\nconst height = 200\n\nfunction Graph({ modID }: Props) {\n  const analyzer = window.audioModules[modID] as AnalyzerModule\n  const yRange = useSelector((state: RootState) => state.modules[modID].controlData['time graph'].range as Range)\n  const zero = height - mapValBetweenRanges(0, yRange, [0, height])\n  const [width, setWidth] = useState(0)\n\n  function setup(p5: p5Types, canvasParentRef: Element) {\n    p5.createCanvas(canvasParentRef.clientWidth, height).parent(canvasParentRef)\n    p5.textAlign(p5.CENTER, p5.CENTER)\n    p5.fill(100)\n    setWidth(canvasParentRef.clientWidth)\n  }\n\n  function draw(p5: p5Types) {\n    analyzer.audioNode.getFloatTimeDomainData(analyzer.timeArray)\n    const xStep = width / analyzer.bufferLength\n    p5.background(0) // draw black background\n\n    let currX = 0\n    let currY = height - mapValBetweenRanges(analyzer.timeArray[0], yRange, [0, height])\n    p5.stroke(colors.analyzerModuleBG)\n    p5.strokeWeight(6)\n    for (let i = 0; i < analyzer.bufferLength - 1; i++) {\n      const nextX = (i + 1) * xStep\n      const nextY = height - mapValBetweenRanges(analyzer.timeArray[i + 1], yRange, [0, height])\n      p5.line(currX, currY, nextX, nextY)\n      currX = nextX\n      currY = nextY\n    }\n\n    const zeroXStep = width / 20\n    // draw 0 indicator\n    p5.stroke(100)\n    p5.strokeWeight(1)\n    p5.line(0, zero, zeroXStep, zero)\n    p5.text('0', 1.5 * zeroXStep, zero)\n  }\n\n  const dispatch = useDispatch()\n  return (\n    <FlexCol justifyContent='center' alignItems='center'>\n      <Sketch style={{ width: sizes.moduleView.bigIconWidth }}\n        setup={setup} \n        draw={draw} \n      />\n      <Button style={{ width: '10em' }}\n        onClick={() => {\n          window.openAnalyzerRangeSetMenu(yRange, newRange => {\n            dispatch(updateControlRange(modID, 'time graph', newRange))\n          })\n        }}\n      >\n        change range\n      </Button>\n    </FlexCol>\n  )\n}\n\nexport default Graph","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE, TUNER } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType?: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG\n    case ENVELOPED_TRIGGER: return colors.sourceModuleBG\n    case WHITE_NOISE: return colors.sourceModuleBG\n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n    case DISTORTION: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n    case ANALYZER: return colors.analyzerModuleBG\n    case TUNER: return colors.analyzerModuleBG\n  }\n}\n\nexport default getModuleColor ","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  BabylonCanvas: {\n    width: ({ width }) => width,\n    height: ({ height }) => height\n  },\n})\n\nexport default useJSS","import React, { CanvasHTMLAttributes, useEffect, useRef } from 'react'\nimport { Engine, EngineOptions, Scene, SceneOptions } from '@babylonjs/core'\nimport useJSS from './style'\n\ninterface Props extends CanvasHTMLAttributes<HTMLCanvasElement> {\n  antialias?: boolean\n  engineOptions?: EngineOptions\n  adaptToDeviceRatio?: boolean\n  sceneOptions?: SceneOptions\n  onRender: (scene: Scene) => void\n  onSceneReady: (scene: Scene) => void\n  width?: string,\n  height?: string,\n}\n\nfunction BabylonCanvas({ \n  onRender, onSceneReady, \n  antialias, engineOptions, \n  adaptToDeviceRatio, sceneOptions,\n  width, height, ...rest \n}: Props) {\n  const reactCanvas = useRef<HTMLCanvasElement>(null)\n  const { BabylonCanvas } = useJSS({ width, height })\n  useEffect(() => {\n    if (reactCanvas.current) {\n      const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio)\n      const scene = new Scene(engine, sceneOptions)\n      if (scene.isReady()) {\n        if (onSceneReady) onSceneReady(scene)\n      } else {\n        scene.onReadyObservable.addOnce(scene => { if (onSceneReady) onSceneReady(scene) })\n      }\n\n      engine.runRenderLoop(() => {\n        if (typeof onRender === 'function') {\n          onRender(scene)\n        }\n        scene.render()\n      })\n\n      const resize = () => {\n        scene.getEngine().resize()\n      }\n\n      if (window) {\n        window.addEventListener('resize', resize)\n      }\n\n      return () => {\n        scene.getEngine().dispose()\n\n        if (window) {\n          window.removeEventListener('resize', resize)\n        }\n      }\n    }\n  }, [adaptToDeviceRatio, antialias, engineOptions, onRender, onSceneReady, sceneOptions])\n\n  return (\n    <canvas className={BabylonCanvas}\n      ref={reactCanvas} \n      {...rest} \n    />\n  )\n}\n\nexport default BabylonCanvas","import { stringIn } from \"../helpers/genFuncs\"\n\nexport function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return !stringIn(entry[0], idsToFilterOut)\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return stringIn(entry[0], idsToKeep)\n  }))\n}\n\nexport function ObjFrom2Arrays(keys: string[], entries: any[]) {\n  if (keys.length === entries.length) {\n    return Object.fromEntries(keys.map((id, index) => {\n      return [id, entries[index]]\n    }))\n  }\n  return {}\n}","import { ObjFrom2Arrays } from \"../redux/helpers\"\n\nexport const notes: { [index: string]: number } = {\n  \"C0\": 16.35,\n  \"C#0\": 17.32,\n  \"Db0\": 17.32,\n  \"D0\": 18.35,\n  \"D#0\": 19.45,\n  \"Eb0\": 19.45,\n  \"E0\": 20.60,\n  \"F0\": 21.83,\n  \"F#0\": 23.12,\n  \"Gb0\": 23.12,\n  \"G0\": 24.50,\n  \"G#0\": 25.96,\n  \"Ab0\": 25.96,\n  \"A0\": 27.50,\n  \"A#0\": 29.14,\n  \"Bb0\": 29.14,\n  \"B0\": 30.87,\n  \"C1\": 32.70,\n  \"C#1\": 34.65,\n  \"Db1\": 34.65,\n  \"D1\": 36.71,\n  \"D#1\": 38.89,\n  \"Eb1\": 38.89,\n  \"E1\": 41.20,\n  \"F1\": 43.65,\n  \"F#1\": 46.25,\n  \"Gb1\": 46.25,\n  \"G1\": 49.00,\n  \"G#1\": 51.91,\n  \"Ab1\": 51.91,\n  \"A1\": 55.00,\n  \"A#1\": 58.27,\n  \"Bb1\": 58.27,\n  \"B1\": 61.74,\n  \"C2\": 65.41,\n  \"C#2\": 69.30,\n  \"Db2\": 69.30,\n  \"D2\": 73.42,\n  \"D#2\": 77.78,\n  \"Eb2\": 77.78,\n  \"E2\": 82.41,\n  \"F2\": 87.31,\n  \"F#2\": 92.50,\n  \"Gb2\": 92.50,\n  \"G2\": 98.00,\n  \"G#2\": 103.83,\n  \"Ab2\": 103.83,\n  \"A2\": 110.00,\n  \"A#2\": 116.54,\n  \"Bb2\": 116.54,\n  \"B2\": 123.47,\n  \"C3\": 130.81,\n  \"C#3\": 138.59,\n  \"Db3\": 138.59,\n  \"D3\": 146.83,\n  \"D#3\": 155.56,\n  \"Eb3\": 155.56,\n  \"E3\": 164.81,\n  \"F3\": 174.61,\n  \"F#3\": 185.00,\n  \"Gb3\": 185.00,\n  \"G3\": 196.00,\n  \"G#3\": 207.65,\n  \"Ab3\": 207.65,\n  \"A3\": 220.00,\n  \"A#3\": 233.08,\n  \"Bb3\": 233.08,\n  \"B3\": 246.94,\n  \"C4\": 261.63,\n  \"C#4\": 277.18,\n  \"Db4\": 277.18,\n  \"D4\": 293.66,\n  \"D#4\": 311.13,\n  \"Eb4\": 311.13,\n  \"E4\": 329.63,\n  \"F4\": 349.23,\n  \"F#4\": 369.99,\n  \"Gb4\": 369.99,\n  \"G4\": 392.00,\n  \"G#4\": 415.30,\n  \"Ab4\": 415.30,\n  \"A4\": 440.00,\n  \"A#4\": 466.16,\n  \"Bb4\": 466.16,\n  \"B4\": 493.88,\n  \"C5\": 523.25,\n  \"C#5\": 554.37,\n  \"Db5\": 554.37,\n  \"D5\": 587.33,\n  \"D#5\": 622.25,\n  \"Eb5\": 622.25,\n  \"E5\": 659.26,\n  \"F5\": 698.46,\n  \"F#5\": 739.99,\n  \"Gb5\": 739.99,\n  \"G5\": 783.99,\n  \"G#5\": 830.61,\n  \"Ab5\": 830.61,\n  \"A5\": 880.00,\n  \"A#5\": 932.33,\n  \"Bb5\": 932.33,\n  \"B5\": 987.77,\n  \"C6\": 1046.50,\n  \"C#6\": 1108.73,\n  \"Db6\": 1108.73,\n  \"D6\": 1174.66,\n  \"D#6\": 1244.51,\n  \"Eb6\": 1244.51,\n  \"E6\": 1318.51,\n  \"F6\": 1396.91,\n  \"F#6\": 1479.98,\n  \"Gb6\": 1479.98,\n  \"G6\": 1567.98,\n  \"G#6\": 1661.22,\n  \"Ab6\": 1661.22,\n  \"A6\": 1760.00,\n  \"A#6\": 1864.66,\n  \"Bb6\": 1864.66,\n  \"B6\": 1975.53,\n  \"C7\": 2093.00,\n  \"C#7\": 2217.46,\n  \"Db7\": 2217.46,\n  \"D7\": 2349.32,\n  \"D#7\": 2489.02,\n  \"Eb7\": 2489.02,\n  \"E7\": 2637.02,\n  \"F7\": 2793.83,\n  \"F#7\": 2959.96,\n  \"Gb7\": 2959.96,\n  \"G7\": 3135.96,\n  \"G#7\": 3322.44,\n  \"Ab7\": 3322.44,\n  \"A7\": 3520.00,\n  \"A#7\": 3729.31,\n  \"Bb7\": 3729.31,\n  \"B7\": 3951.07,\n  \"C8\": 4186.01,\n  \"C#8\": 4434.92,\n  \"Db8\": 4434.92,\n  \"D8\": 4698.64,\n  \"D#8\": 4978.03,\n  \"Eb8\": 4978.03\n}\n\nconst keysNoSharp = Object.keys(notes).filter(note => note.length <= 2 || note[1] !== '#')\n\nexport const notesNoSharp = ObjFrom2Arrays(\n  keysNoSharp,\n  keysNoSharp.map(note => notes[note])\n)\n\nexport const noteIndices = ObjFrom2Arrays(keysNoSharp, keysNoSharp.map((note, index) => index))","import { AbstractMesh, Color3, MeshBuilder, Plane, Scene, StandardMaterial, TransformNode } from \"@babylonjs/core\"\nimport { AdvancedDynamicTexture, TextBlock } from \"babylonjs-gui\"\nimport { Range } from \"../../../../audioModules/moduleTypes\"\nimport { mapValBetweenRanges } from \"../../../../helpers/genFuncs\"\nimport { noteIndices, notes, notesNoSharp } from \"../../../../helpers/notes\"\n\nexport const noteFreqRange = [Math.log(notes['C1']), Math.log(notes['C5'])] as Range\nexport const dialRange = [0, 2 * Math.PI * .95] as Range\n\nexport const diameter = 1600\nconst height = 160\n\nfunction makeTextPlane(name: string, text: string, width: number, fontSize: number) {\n  const textPlane = MeshBuilder.CreatePlane(name, {\n    width,\n    height: 40,\n    sourcePlane: new Plane(1, 0, 0, 0)\n  })\n  const textMat = AdvancedDynamicTexture.CreateForMesh(textPlane)\n  const textBlock = new TextBlock(`${name}text`, text)\n  textBlock.fontSize = fontSize\n  textBlock.width = width\n  textBlock.height = 50\n  textBlock.color = 'black'\n  textMat.addControl(textBlock)\n  return textPlane\n}\n\nfunction makeDial(scene: Scene) {\n  const dialMat = new StandardMaterial('dialMat', scene)\n  const tickMat = new StandardMaterial('tickMat', scene)\n  tickMat.diffuseColor = new Color3(0, .5, 0)\n\n  const dial = MeshBuilder.CreateCylinder('dial', {\n    height,\n    diameter,\n    tessellation: Math.pow(2, 7),\n  }, scene)\n  dial.material = dialMat\n  dial.cullingStrategy = AbstractMesh.CULLINGSTRATEGY_OPTIMISTIC_INCLUSION\n  Object.keys(notesNoSharp).filter((note, index) => index >= noteIndices['C1'] && index <= noteIndices['C5']).forEach(note => {\n    const tickPos = mapValBetweenRanges(Math.log(notes[note]), noteFreqRange, dialRange)\n    const tickNode = new TransformNode(`${note}node`)\n    //tickNode.position.y = -10\n    const tick = MeshBuilder.CreateBox(`${note}tick`, {\n      height: height/2,\n      width: 2,\n      depth: 10,\n    })\n    tick.material = tickMat\n    tick.position.x = diameter / 2 + 2\n    tick.parent = tickNode\n    tickNode.rotation.y = -tickPos\n    tickNode.parent = dial\n\n    const noteTextPlane = makeTextPlane(`${note}textplane`, note, 50, 450)\n    noteTextPlane.position.y = height/2 - 20\n    noteTextPlane.parent = tick\n\n    const freqTextPlane = makeTextPlane(`${note}freqplane`, `${notes[note]}`.slice(0, Math.min(`${notes[note]}`.length, 5)), 50, 400)\n    freqTextPlane.position.y = - height/2 + 20\n    freqTextPlane.parent = tick\n  })\n}\n\nexport default makeDial","import { Color3, Color4, Mesh, PointLight, TargetCamera, Vector3 } from '@babylonjs/core'\nimport React, { Fragment } from 'react'\nimport { TunerModule } from '../../../../audioModules/modules/tuner'\nimport { Range, TUNER } from '../../../../audioModules/moduleTypes'\nimport { clamp, mapValBetweenRanges } from '../../../../helpers/genFuncs'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { sizes } from '../../../../theme/theme'\nimport BabylonCanvas from '../../../BabylonCanvas/BabylonCanvas'\nimport makeDial, { dialRange, diameter, noteFreqRange } from './makeDial'\n\n\ninterface Props {\n  modID: string\n}\n\nfunction Tuner({ modID }: Props) {\n  let target = -.1\n  let frame = 0\n  const tuner = window.audioModules[modID] as TunerModule\n  return (\n    <Fragment>\n      <BabylonCanvas\n        onSceneReady={scene => {\n          // set background / ambient color\n          scene.clearColor = Color4.FromHexString(getModuleColor(TUNER) as string)\n          scene.ambientColor = new Color3(.5, .5, .5)\n\n          // setup camera\n          const camPos = new Vector3(diameter/2 + 200, 0, 0)\n          const camera = new TargetCamera('tunerCam', camPos, scene)\n          //camera.fov = Math.PI / 3\n          camera.setTarget(new Vector3(0, 0, 0))\n\n          // setup lighting\n          const lightPos = new Vector3(1110.5, 300, 0)\n          //const light= new PointLight('light', lightPos, scene)\n          const light = new PointLight('light', lightPos, scene)\n          light.diffuse = new Color3(1, 0, 0)\n          light.specular = new Color3(0, .1, 0)\n\n          //make dial\n          makeDial(scene)\n          \n        }}\n        onRender={scene => {\n          if (frame === 0) {\n            const [maxFreq, maxdB] = tuner.controlSetFuncs['tuner']('') as Range\n            if (maxdB > -75) {\n              target = mapValBetweenRanges(clamp(Math.log(maxFreq), noteFreqRange as Range), noteFreqRange, dialRange)\n            } else {\n              target = -.15\n            }\n          }\n          const dial = scene.getMeshByName('dial') as Mesh\n          dial.rotation.y += .1 * (target - dial.rotation.y)\n          frame = (frame + 1) % 30\n        }}\n        style={{\n          borderRadius: '.8em',\n          marginTop: '1em',\n        }}\n        width={sizes.moduleView.bigIconWidth}\n        height='200px'\n      />\n    </Fragment>\n  )\n}\n\nexport default Tuner","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  setFunc: (arg: string) => void\n}\n\nfunction PadControl({ setFunc }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Pad}\n      onPointerDown={e => {\n        e.preventDefault()\n        setFunc('on')\n      }}\n      onPointerCancel={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n      onPointerUp={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n    />\n  )\n}\n\nexport default PadControl","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, GRAPH, PAD, TUNER_CONTROL } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl, TunerControl } from './controls/all'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id}/>\n            :\n            controlType === BUTTON && controlID !== 'open'\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} actualModID={selectedModule.id}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={selectedModule.id} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            controlType === TUNER_CONTROL\n            ?\n            <TunerControl modID={selectedModule.id} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import React from 'react'\nimport useJSS from './style'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH, GRAPH, PAD, TUNER_CONTROL } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl, TunerControl } from './controls/all'\nimport { useSelector } from 'react-redux'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <div className={classes.ControlMenu}>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID, name }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType } = modules[actualModID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const modName = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={modName} label={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={modName} label={name}/>\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} modName={modName} actualModID={actualModID} label={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={actualModID} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            controlType === TUNER_CONTROL\n            ?\n            <TunerControl modID={actualModID} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.icon,\n    height: sizes.moduleView.icon,\n    padding: '.5vmin',\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n})\n\nexport default useJSS","import { RootState, ContainerModule, Modules, Connections } from \"./stateTSTypes\";\nimport { CONTAINER } from \"../audioModules/moduleTypes\";\nimport { keepOnlyIdsInObj } from \"./helpers\";\nimport { bothStringsIn } from \"../helpers/genFuncs\";\n\nfunction getChildrenRecursive(containerID: string, modules: Modules): string[] {\n  const childIDs = (modules[containerID] as ContainerModule).childModules\n  let containerChildIDs: string[] = []\n  for (const i in childIDs) {\n    if (modules[childIDs[i]].moduleType === CONTAINER) {\n      containerChildIDs = [...containerChildIDs, ...getChildrenRecursive(childIDs[i], modules) ]\n    }\n  }\n  return [ ...childIDs, ...containerChildIDs ]\n}\n\nexport function getContainerIDs(containerID: string, modules: Modules) {\n  return [ containerID, ...getChildrenRecursive(containerID, modules) ]\n}\n\nexport function getInternalConnectionIDs(connections: Connections, trimmedIDs: string[]) {\n  const allConnectionIDs = Object.keys(connections)\n  let connectionIDs: string[] = []\n  for (const i in allConnectionIDs) {\n    const { fromID, toID, actualOutputID, actualInputID } = connections[allConnectionIDs[i]]\n    const actualFromID = actualOutputID ? actualOutputID : fromID // actualIDs undefined if no containers involved in connection\n    const actualToID = actualInputID ? actualInputID : toID\n    if (bothStringsIn(actualFromID, actualToID, trimmedIDs)) {\n      connectionIDs = [...connectionIDs, allConnectionIDs[i]]\n    }\n  }\n  return connectionIDs\n}\n\nfunction getInternalConnections(connections: Connections, trimmedIDs: string[]) {\n  return keepOnlyIdsInObj(connections, getInternalConnectionIDs(connections, trimmedIDs)) as Connections\n}\n\nexport function getContainerModulesConnections(state: RootState, containerID: string) {\n  const trimmedIDs = [containerID, ...getChildrenRecursive(containerID, state.modules)]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    modules: trimmedModules,\n    connections: trimmedConnections,\n  }\n}\n\n\nexport function getContainerAsProject(state: RootState, containerID: string) {\n  const trimmedIDs = [ containerID, ...getChildrenRecursive(containerID, state.modules) ]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    baseContainerID: containerID,\n    modules: {\n      ...trimmedModules,\n      [containerID]: {\n        ...trimmedModules[containerID],\n        isBaseContainer: true,\n        parentID: null,\n      },\n    },\n    connections: trimmedConnections\n  }\n}","import {\n  ModuleType,\n  OSCILLATOR,\n  OUTPUT, GAIN,\n  AUTOFILTER,\n  KOMPRESSOR,\n  STEREO_PANNER,\n  SIGNAL_DELAY,\n  CONSTANT,\n  MEDIA_ELEMENT,\n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n  WHITE_NOISE,\n  TUNER,\n} from './moduleTypes'\nimport makeConstantSource from './modules/constant'\nimport makeAutoFilter from './modules/autoFilter'\nimport makeOutput from './modules/output'\nimport makeStereoPanner from './modules/stereoPanner'\nimport makeSignalDelay from './modules/signalDelay'\nimport makeKompressor from './modules/kompressor'\nimport makeGain from './modules/gain'\nimport makeOscillator from './modules/oscillator'\nimport makeLineInput from './modules/lineInput'\nimport makeContainer from './modules/container'\nimport makeDistortion from './modules/distortion'\nimport makeAnalyzer from './modules/analyzer'\nimport makeEnvelopedTrigger from './modules/envelopedTrigger'\nimport makeWhiteNoise from './modules/whiteNoise'\nimport makeTuner from './modules/tuner'\n\n\nfunction restoreAudioModule(id: string, moduleType: ModuleType, prevControlData: ControlData) {\n  switch (moduleType) {\n    case OSCILLATOR:\n      const osc = makeOscillator(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: osc }\n      break\n    case GAIN:\n      const gain = makeGain(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: gain }\n      break\n    case OUTPUT:\n      const output = makeOutput(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: output }\n      break\n    case AUTOFILTER:\n      const filter = makeAutoFilter(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: filter }\n      break\n    case KOMPRESSOR:\n      const komp = makeKompressor(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: komp }\n      break\n    case STEREO_PANNER:\n      const panner = makeStereoPanner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: panner }\n      break;\n    case SIGNAL_DELAY:\n      const delay = makeSignalDelay(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: delay }\n      break\n    case CONSTANT:\n      const constant = makeConstantSource(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: constant }\n      break\n    case MEDIA_ELEMENT:\n      window.addAudioTag(id); window.reRenderAudioTags();\n      break;\n    case LINE_IN:\n      makeLineInput(id)\n      break;\n    case CONTAINER:\n      const container = makeContainer(id)\n      window.audioModules = { ...window.audioModules, [id]: container };\n      break\n    case DISTORTION:\n      const distortion = makeDistortion(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: distortion }\n      break\n    case ANALYZER:\n      const analyzer = makeAnalyzer(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: analyzer }\n      break\n    case ENVELOPED_TRIGGER:\n      const envelopedTrigger = makeEnvelopedTrigger(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n      break\n    case WHITE_NOISE:\n      const whiteNoise = makeWhiteNoise(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: whiteNoise }\n      break\n    case TUNER:\n      const tuner = makeTuner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: tuner }\n      break\n  }\n}\n\n\nexport default restoreAudioModule","import { Connections, Modules } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect } from \"./connection\"\n\nfunction mergeExistingContainerAM(modules: Modules, connections: Connections) {\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        window.setTimeout(() => {\n          connect(\n            window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n            window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n            param,\n            outputIndex,\n            inputIndex,\n          )\n        }, 200)\n      }\n    })\n  }\n}\n\nexport default mergeExistingContainerAM","function genRandomID(index: number, totNumber: number) {\n  return `${totNumber}${index}${Math.floor(20480 * Math.random())}`\n}\n\nexport default genRandomID","import { Modules, Connections, ContainerModule, RootState } from \"./stateTSTypes\"\nimport { ObjFrom2Arrays } from \"./helpers\"\nimport { stringIn } from \"../helpers/genFuncs\"\nimport { CONTAINER } from \"../audioModules/moduleTypes\"\nimport { Dispatch } from 'redux'\nimport { mergeContainer } from './allActions'\nimport { getContainerModulesConnections } from \"./getContainerAsProject\"\nimport mergeExistingContainerAM from \"../audioModules/mergeExistingAM\"\nimport genRandomID from \"./idGen\"\n\n\nfunction getReplicatedState(modules: Modules, connections: Connections, totNumberModules: number, totNumberConnections: number) {\n  // this function returns a copy of modules and connections, but with all modIDs and connectionIDs replaced.\n  // this is done so no IDs conflict when the new modules/connections are merged into the active redux state\n  const modIDs = Object.keys(modules)\n  const connectionIDs = Object.keys(connections)\n  const modIDConverter = ObjFrom2Arrays(modIDs, modIDs.map((modID, index) => {\n    return genRandomID(index, totNumberModules)\n  }))\n  const connectionIDConverter = ObjFrom2Arrays(connectionIDs, connectionIDs.map((connectionID, index) => {\n    return genRandomID(index, totNumberConnections)\n  }))\n  const newModules = ObjFrom2Arrays(Object.values(modIDConverter), modIDs.map(modID => {\n    if (modules[modID].moduleType === CONTAINER) {\n      const containerMod = modules[modID] as ContainerModule\n      return {\n        ...containerMod,\n        id: modIDConverter[modID],\n        inputs: containerMod.inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: containerMod.outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        containerControls: containerMod.containerControls\n          .map(containerControl => {\n            return {\n              ...containerControl,\n              modID: modIDConverter[containerControl.modID],\n              actualModID: modIDConverter[containerControl.actualModID],\n            }\n          }),\n        childModules: containerMod.childModules.map(id => modIDConverter[id]),\n        parentID: modules[modID].parentID ? modIDConverter[modules[modID].parentID as string] : null,\n        connectionOutputs: modules[modID].connectionOutputs.map(outputID => modIDConverter[outputID]),\n        connectionInputs: modules[modID].connectionInputs.map(inputID => modIDConverter[inputID])\n      }\n    } else {\n      return {\n        ...modules[modID],\n        id: modIDConverter[modID],\n        inputs: modules[modID].inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: modules[modID].outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        parentID: modIDConverter[modules[modID].parentID as string]\n      }\n    }\n  }))\n  const newConnections = ObjFrom2Arrays(Object.values(connectionIDConverter), connectionIDs.map(connectionID => {\n    const connection = connections[connectionID]\n    return {\n      ...connection,\n      fromID: modIDConverter[connection.fromID],\n      toID: modIDConverter[connection.toID],\n      actualOutputID: connection.actualOutputID ? modIDConverter[connection.actualOutputID] : undefined,\n      actualInputID: connection.actualInputID ? modIDConverter[connection.actualInputID] : undefined,\n    }\n  }))\n  return {\n    modIDConverter,\n    newModules,\n    newConnections,\n  }\n}\n\nexport function performContainerMerge(dispatch: Dispatch, modulesToMerge: Modules, connectionsToMerge: Connections, totNumberModules: number, totNumberConnections: number, parentID: string, containerID: string, row: number, col: number) {\n  // this function makes a copy of state with above function, then restores all modules and connections,\n  // and dispatches an action to merge the copied state with the full project state \n  const { modIDConverter, newModules, newConnections } = getReplicatedState(modulesToMerge, connectionsToMerge, totNumberModules, totNumberConnections)\n  mergeExistingContainerAM(newModules, newConnections)\n  dispatch(mergeContainer(modIDConverter[containerID], newModules, newConnections, parentID, row, col))\n}\n\nexport function duplicateContainer(dispatch: Dispatch, state: RootState, parentID: string, containerID: string, row: number, col: number) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const totNumberModules = Object.keys(state.modules).length\n  const totNumberConnections = Object.keys(state.connections).length\n  performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n}\n\nexport function loadSavedContainer(dispatch: Dispatch, name: string, totNumberModules: number, totNumberConnections: number, parentID: string, row: number, col: number) {\n  window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n    performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n  })\n}\n\nexport function loadProjectAsContainer(dispatch: Dispatch, currState: RootState, parentID: string, row: number, col: number, stateToRestore: RootState) {\n  // used for loading in projects as containers within an existing project\n  const { modules, connections, baseContainerID } = stateToRestore\n  const totNumberModules = Object.keys(currState.modules).length\n  const totNumberConnections = Object.keys(currState.connections).length\n  const { newModules, newConnections } = getReplicatedState(modules, connections, totNumberModules, totNumberConnections)\n  const goodNewModules = {\n    ...newModules,\n    [baseContainerID]: {\n      ...newModules[baseContainerID],\n      isBaseContainer: false,\n      parentID,\n    }\n  }\n  dispatch(mergeContainer(baseContainerID, goodNewModules, newConnections, parentID, row, col))\n}","import { RootState } from \"./stateTSTypes\"\nimport genRandomID from './idGen'\nimport { Dispatch } from 'redux'\nimport { addModule } from './allActions'\nimport { ModuleType } from \"../audioModules/moduleTypes\"\nimport restoreAudioModule from \"../audioModules/restoreAudioModule\"\n\nfunction duplicateModule(dispatch: Dispatch, state: RootState, modID: string, row: number, col: number) {\n  const newID = genRandomID(0, Object.keys(state.modules).length)\n  const { name, moduleType, controlData, parentID, connectionInputs, connectionOutputs } = state.modules[modID]\n  restoreAudioModule(newID, moduleType as ModuleType, controlData)\n  dispatch(addModule(newID, name, moduleType as ModuleType, controlData, parentID as string, row, col, connectionInputs, connectionOutputs))\n}\n\nexport default duplicateModule","import { DragEvent } from 'react'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { Dispatch } from 'redux'\nimport { ModuleType, CONTAINER } from '../../audioModules/moduleTypes'\nimport { moveModule } from '../../redux/allActions'\nimport { duplicateContainer, performContainerMerge } from '../../redux/replicateContainer'\nimport { MOVE, COPY } from './DropSquare'\nimport { ADD_MODULE } from '../../redux/modules/moduleActionTypes'\nimport duplicateModule from '../../redux/replicateModule'\n\nexport const CONTAINER_RESTORE = 'CONTAINER_RESTORE'\n\nexport function onDrop(e: DragEvent<HTMLDivElement>, dispatch: Dispatch, state: RootState, row: number, col: number, setHL: (isHL: boolean) => void) {\n  const id = e.dataTransfer.getData('id')\n  const fc = state.modules[window.fillContainerID] as ContainerModule\n  const currentChildren = fc.childModules\n  const possiblyMod = state.modules[id]\n  const possiblyOccupyingID = isOccupied(row, col, currentChildren, state.modules)\n  if (!possiblyMod) {\n    if (!possiblyOccupyingID) {\n      const dropType = e.dataTransfer.getData('type')\n      const name = e.dataTransfer.getData('name')\n      switch(dropType) {\n        case ADD_MODULE:\n          const moduleType = e.dataTransfer.getData('moduleType') as ModuleType\n          window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n          break\n        case CONTAINER_RESTORE:\n          const totNumberModules = Object.keys(state.modules).length\n          const totNumberConnections = Object.keys(state.connections).length\n          window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n            performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n          })\n          break\n      }\n      setHL(false)\n    }\n  } else if (possiblyOccupyingID) {\n    const fromRow = e.dataTransfer.getData('fromRow')\n    const fromCol = e.dataTransfer.getData('fromCol')\n    setHL(false)\n    dispatch(moveModule(id, row, col))\n    dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n    window.setTimeout(window.refreshArcherContainer, 1)\n  } else {\n    const moduleDragType = e.dataTransfer.getData('type')\n    setHL(false)\n    switch (moduleDragType) {\n      case MOVE:\n        dispatch(moveModule(id, row, col))\n        break\n      case COPY:\n        if (state.modules[id].moduleType === CONTAINER) {\n          duplicateContainer(dispatch, state, window.fillContainerID, id, row, col)\n        } else {\n          duplicateModule(dispatch, state, id, row, col)\n        }\n        break\n    }\n    window.setTimeout(window.refreshArcherContainer, 1)\n  }\n}","import { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { onDrop } from './callbacks'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n// drag types\nexport const MOVE = 'MOVE'\nexport const COPY = 'COPY'\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const state = useSelector((state: RootState) => state)\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length >= 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        setHL(false)\n        /* if (e.dataTransfer.types.length >= 3) {\n          setHL(false)\n        } */\n      }}\n      onDrop={e => {\n        onDrop(e, dispatch, state, row, col, setHL)\n      }}\n      onContextMenu={e => {\n        e.preventDefault()\n        window.openAddModuleMenu(row, col)\n      }}\n      onPointerEnter={e => {\n        e.preventDefault()\n        setHL(true)\n      }}\n      onPointerLeave={e => {\n        e.preventDefault()\n        setHL(false)\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\nimport { bothStringsIn } from '../../helpers/genFuncs'\nimport { iconOnDrop, iconOnDragStart } from './callbacks'\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isLarge, setLarge] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  const reRenderIcon = () => { toReRender(!reRender) }\n\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    width: isLarge ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isLarge ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon\n  }\n\n  const iconStyle = Object.assign({}, archerElementStyle, {\n    borderStyle: isLarge ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n  })\n\n  const nameStyle: CSS.Properties = {\n    fontSize: sizes.text.small,\n  }\n  \n  /*\n  const nameSpring = useSpring({\n    fontSize: isLarge ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n  */\n\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <div \n        className={classes.Icon} \n        style={iconStyle}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          iconOnDrop(e, modules, mod, dispatch)\n        }}\n        draggable={!isLarge}\n        onDragStart={e => {\n          iconOnDragStart(e, mod)\n        }}\n        onClick={e => {\n          e.stopPropagation()\n          setLarge(!isLarge)\n          window.setTimeout(window.refreshArcherContainer, 0)\n        }}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openModuleContextMenu(e, mod.id)\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <div className={classes.IconName} style={nameStyle} onClick={e => {\n          if (isLarge) {\n            e.stopPropagation()\n            window.openModuleRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </div>\n        {\n        !isLarge ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          {mod.moduleType !== CONTAINER ? <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} /> : null}\n        </div>\n        }\n      </div>\n      <div className={classes.ArcherElement}\n        style={archerElementStyle}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.filter(connectionID => {\n              const { fromID, toID } = connections[connectionID]\n              return bothStringsIn(fromID, toID, (modules[window.fillContainerID] as ContainerModule).childModules)\n            }).map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { DragEvent } from 'react'\nimport { Modules, Module } from '../../redux/stateTSTypes'\nimport { MOVE, COPY } from '../DropSquare/DropSquare'\nimport { Dispatch } from 'redux'\nimport { moveModule } from '../../redux/allActions'\n\nexport function iconOnDrop(\n  e: DragEvent<HTMLDivElement>,\n  modules: Modules,\n  mod: Module,\n  dispatch: Dispatch,\n) {\n  e.stopPropagation()\n  const id = e.dataTransfer.getData('id')\n  const moduleDragType = e.dataTransfer.getData('type')\n  if (id) {\n    const possiblyMod = modules[id]\n    if (possiblyMod && moduleDragType === MOVE) {\n      const fromRow = e.dataTransfer.getData('fromRow')\n      const fromCol = e.dataTransfer.getData('fromCol')\n      dispatch(moveModule(id, mod.row, mod.col))\n      dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n      window.setTimeout(window.refreshArcherContainer, 100)\n    }\n  } else {\n    if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n      alert('mod cannot accept input')\n    } else {\n      const fromID = e.dataTransfer.getData('fromID')\n      if (fromID) {\n        window.openConnectionMenu(fromID, mod.id)\n      }\n    }\n  }\n}\n\nexport function iconOnDragStart(\n  e: DragEvent<HTMLDivElement>,\n  mod: Module\n) {\n  if (e.shiftKey) {\n    e.dataTransfer.setData('type', COPY)\n  } else {\n    e.dataTransfer.setData('type', MOVE)\n  }\n  e.dataTransfer.setData('id', mod.id)\n  e.dataTransfer.setData('fromRow', `${mod.row}`)\n  e.dataTransfer.setData('fromCol', `${mod.col}`)\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport Button from '../Button/Button'\n\ndeclare global {\n  interface Window { \n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${maxRow + 2}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${maxCol + 2}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openModuleRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <ArcherContainer ref={archerContainerRef}\n        svgContainerStyle={{ zIndex: -1 }}\n        strokeWidth={8}\n        arrowLength={0}\n      >\n        <div className={classes.Fill} style={gridStyle}>\n          {isEmpty ? <DropSquare row={0} col={0}/> :\n          range(0, maxRow + 2).map(row => {\n            return range(0, maxCol + 2).map(col => {\n              return (\n                <DropSquare\n                  key={`${row} ${col}`}\n                  row={row} \n                  col={col}\n                />\n              )\n            })\n          }).flat()}\n          {containerModule.childModules.map(moduleID => {\n            const mod = modules[moduleID]\n            return (\n              <ModuleViewIcon\n                key={mod.id}\n                mod={mod}\n                gridRow={mod.row + 1}\n                gridCol={mod.col + 1}\n              />\n            )\n          })}\n        </div>\n      </ArcherContainer>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: `${sizes.rightDrawer.width}px`,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: `${sizes.rightDrawer.width}px`,\n    height: 'calc(100% - 60px)',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    //overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: `${sizes.rightDrawer.width}px`,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n\n  SDBSaveList: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'scroll',\n    height: '60%',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { RootState, Connections } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect, disconnect } from \"./connection\"\n\nfunction connectLate(numTries: number, fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, actualOutputID?: string, actualInputID?: string) {\n  if (numTries > 10) {\n    alert('restore failed')\n  } else {\n    window.setTimeout(() => {\n      if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(numTries + 1, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    }, 500)\n  }\n}\n\nfunction restoreAMFromState(prevConnections: Connections, { modules, connections }: RootState) {\n  Object.keys(prevConnections).forEach(connectionID => {\n    const { fromID, toID, param, outputIndex, actualOutputID, actualInputID } = prevConnections[connectionID]\n    if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n      disconnect(\n        window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n        window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n        param,\n        outputIndex, // may need to figure out how to pass in inputIndex\n      )\n    }\n  })\n  window.numberRestores++\n  window.audioModules = {}\n  window.audioTags = {}\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(0, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    })\n  }\n}\n\nexport default restoreAMFromState","import React, { useState, useEffect } from 'react'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { restoreFromState } from '../../redux/allActions'\nimport restoreAMFromState from '../../audioModules/restoreAMFromState'\nimport { colors } from '../../theme/theme'\nimport Button from '../Button/Button'\nimport useJSS from './style'\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\nconst buttonStyle = {\n  backgroundColor: 'transparent'\n}\n\nfunction SpaceDBMenu() {\n  const [ saveList, setSaveList ] = useState<string[]>([])\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  useEffect(() => {\n    window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n  }, [])\n  const classes = useJSS()\n  return (\n    <div style={{  }}>\n      <Button style={{ backgroundColor: colors.sdbSaveButton }}\n        onClick={() => {\n          window.openSpaceDBProjectSaveMenu(saveList, () => {\n            window.setTimeout(() => {\n              window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n            }, 1000)\n          })\n        }}\n      >\n        save project\n      </Button>\n      <div className={classes.SDBSaveList}>\n        {saveList.map((saveName, index) => {\n          return (\n            <Button style={buttonStyle}\n              key={index}\n              onClick={() => {\n                window.projectSaveService.get(saveName).then((savedState: RootState) => {\n                  restoreAMFromState(connections, savedState)\n                  dispatch(restoreFromState(savedState))\n                })\n              }}\n              onContextMenu={(e) => {\n                e.preventDefault()\n                e.persist()\n                window.openSDBProjectContextMenu(e, saveName, setSaveList)\n              }}\n            >\n              {saveName}\n            </Button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBMenu","import React, { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport Button from '../../Button/Button'\n\nfunction BlankProjectButton() {\n  const numMods = useSelector((state: RootState) => Object.keys(state.modules).length)\n  return (\n    <Fragment>\n      {numMods < 2 ? null :\n        <Button\n          onClick={() => {\n            window.openConfirmBlankProjectMenu()\n          }}\n        >blank project</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default BlankProjectButton","import { ContainerSave } from \"../redux/stateTSTypes\"\n\nexport async function saveJSONToFileHandle(fileHandle: FileSystemFileHandle, json: any) {\n  const writable = await fileHandle.createWritable()\n  await writable.write(JSON.stringify(json))\n  await writable.close()\n}\n\nexport async function loadJSONFromPickedFile(onFileHandle?: (fileHandle: FileSystemFileHandle) => void) {\n  const [ fileHandle ] = await window.showOpenFilePicker()\n  if (fileHandle) {\n    if (onFileHandle) onFileHandle(fileHandle)\n    const file = await fileHandle.getFile() as any\n    const data = await file.text()\n    return JSON.parse(data)\n  } else {\n    return null\n  }\n}\n\nexport async function saveJSONToChosenFile(json: any, onSaved?: () => void) {\n  window.saveFileHandle = await window.showSaveFilePicker({\n    types: [\n      {\n        description: 'space machine project',\n        accept: {\n          'example/*': ['.sm'],\n        },\n      }\n    ]\n  })\n  await saveJSONToFileHandle(window.saveFileHandle, json)\n  if (onSaved) onSaved()\n} \n\nexport function getTrimmedSMFileName(fileHandle: FileSystemFileHandle) {\n  const name = fileHandle.name\n  return name.slice(0, name.length - 3)\n}\n\nexport async function getDirectoryContentNames(dirHandle: FileSystemDirectoryHandle) {\n  let names: string[] = []\n  for await (const entry of dirHandle.values()) {\n    names.push(entry.name)\n  }\n  return names\n}\n\nexport async function getDirectorySMMNames(dirHandle: FileSystemDirectoryHandle) {\n  const allNames = await getDirectoryContentNames(dirHandle)\n  return allNames.filter(name => name.length > 4 && name.slice(name.length - 4) === '.smm')\n    .map(name => name.slice(0, name.length - 4))\n}\n\nexport async function saveSMM(dirHandle: FileSystemDirectoryHandle, saveName: string, containerSave: ContainerSave) {\n  const fileHandle = await dirHandle.getFileHandle(`${saveName}.smm`, { create: true })\n  await saveJSONToFileHandle(fileHandle, containerSave)\n}\n\nexport async function getSavedSMMFromName(dirHandle: FileSystemDirectoryHandle, saveName: string): Promise<ContainerSave> {\n  const fileHandle = await dirHandle.getFileHandle(`${saveName}.smm`)\n  const file = await fileHandle.getFile() as any\n  const stringData = await file.text()\n  return JSON.parse(stringData)\n}","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { loadJSONFromPickedFile } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction OpenFileButton({ reRender, state }: Props) {\n  const dispatch = useDispatch()\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        const newState = await loadJSONFromPickedFile(fileHandle => {\n          window.saveFileHandle = fileHandle\n        })\n        if (newState) {\n          restoreAMFromState(state.connections, newState)\n          dispatch(restoreFromState(newState))\n          reRender()\n        } else {\n          window.flashNotification('rgba(1, 1, 1, .4)', 'no file selected')\n        }\n      }}\n    >open</Button>\n  )\n}\n\nexport default OpenFileButton","import React from 'react'\nimport { getTrimmedSMFileName, saveJSONToChosenFile } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n  reRender: () => void\n}\n\nfunction SaveAsNewButton({ state, reRender }: Props) {\n  return (\n    <Button fontSize={sizes.text.medium}\n      onClick={async () => {\n        saveJSONToChosenFile(state, () => {\n          reRender()\n          window.flashNotification(colors.success, `${getTrimmedSMFileName(window.saveFileHandle)} saved`)\n        })\n      }}\n    >save as</Button>\n  )\n}\n\nexport default SaveAsNewButton","import React, { Fragment } from 'react'\nimport { getTrimmedSMFileName, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\n\ninterface Props {\n  state: RootState\n}\n\nfunction SaveCurrentButton({ state }: Props) {\n  return (\n    <Fragment>\n      {!window.saveFileHandle ? \n        <Button fontSize={sizes.text.medium} \n          notClickable={true}\n          style={{\n            backgroundColor: 'transparent',\n            color: colors.disabled,\n          }}\n        > no file open </Button>\n      :\n        <Button fontSize={sizes.text.medium}\n          onClick={async () => {\n            await saveJSONToFileHandle(window.saveFileHandle, state)\n            window.flashNotification(colors.success, `${getTrimmedSMFileName(window.saveFileHandle)} saved`)\n          }}\n        >{`save ${getTrimmedSMFileName(window.saveFileHandle)}`}</Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default SaveCurrentButton","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\nimport BlankProjectButton from './BlankProjectButton'\nimport OpenFileButton from './OpenFileButton'\nimport SaveAsNewButton from './SaveAsNewButton'\nimport SaveCurrentButton from './SaveCurrentButton'\n\ndeclare global {\n  interface Window {\n    saveFileHandle?: any\n    reRenderFileMenu: () => void\n  }\n}\n\nfunction FileMenu() {\n  const state = useSelector((state: RootState) => state)\n  const [, toReRender] = useState({})\n  window.reRenderFileMenu = () => { toReRender({}) }\n  return (\n    <FlexRow alignItems='center' flexWrap='wrap' style={{ width: '100%' }}>\n      <OpenFileButton state={state} reRender={window.reRenderFileMenu} />\n      <SaveAsNewButton state={state} reRender={window.reRenderFileMenu}/>\n      <SaveCurrentButton state={state} />\n      <BlankProjectButton />\n    </FlexRow>\n  )\n}\n\nexport default FileMenu","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { clamp } from '../../helpers/genFuncs'\nimport SpaceDBMenu from './SpaceDBMenu'\nimport FileMenu from './FileMenu/FileMenu'\n\nconst SPACEDB_PROJECTS = 'spaceDB projects'\nconst FILE = 'file'\n\nlet drawerWidth = `${sizes.rightDrawer.width}`\n\nconst addPx = (arg: string) => `${arg}px`\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(window.usingElectron ? SPACEDB_PROJECTS : FILE)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  }, [])\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}`\n            if (drawerRef.current) { drawerRef.current.style.width = addPx(drawerWidth) }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = addPx(drawerWidth) }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = addPx(drawerWidth) }\n            if (toggleRef.current) { toggleRef.current.style.right = addPx(drawerWidth) }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          {!window.usingElectron ? null : \n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={SPACEDB_PROJECTS}\n            onClick={() => { setSR(SPACEDB_PROJECTS) }}\n            selectedRoute={selectedRoute}\n          />}\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={FILE}\n            onClick={() => { setSR(FILE) }}\n            selectedRoute={selectedRoute}\n          />\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SPACEDB_PROJECTS\n            ?\n            <SpaceDBMenu />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n    numberRestores: number\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\nwindow.numberRestores = 0\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id + window.numberRestores}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\nimport { zIndex } from '../../../theme/zIndex'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: colors.centerMenuBackground,\n    backdropFilter: 'blur(5px)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: zIndex.centerMenu,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'absolute',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '1.2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: `.1em solid ${colors.centerMenuBorder}`,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { animated } from 'react-spring'\n\ninterface Props {\n  isClosed?: boolean\n  className?: string\n  style?: CSS.Properties\n  headerClassName?: string\n  headerStyle?: CSS.Properties\n  children: React.ReactNode\n  header?: string\n  onClose: () => void\n  bounderStyle?: CSS.Properties\n}\n\nfunction CenterMenu({ isClosed, className, style, headerClassName, headerStyle, children, header, onClose, bounderStyle }: Props) {\n  const classes = useJSS()\n  return (\n    <Fragment>\n      {isClosed ? null :\n      <animated.div className={classes.CenterMenuBounder}\n        onPointerDown={e => {\n          e.stopPropagation()\n          onClose()\n        }}\n        style={bounderStyle}\n      >\n        <div className={className ? `${classes.CenterMenu} ${className}` : classes.CenterMenu}\n          onPointerDown={(e) => {e.stopPropagation()}}\n          style={style}\n        >\n          {!header ? null : \n          <div className={headerClassName ? `${classes.Header} ${headerClassName}` : classes.Header}\n            style={headerStyle}\n          >\n            {header}\n          </div>}\n          {children}\n        </div>\n      </animated.div>}\n    </Fragment>\n  )\n}\n\nexport default CenterMenu","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  AutoPlacingGrid: {\n    display: 'grid',\n    gridTemplateRows: ({ numRows }) => `repeat(${numRows}, auto)`,\n    gridTemplateColumns: ({ numCols }) => `repeat(${numCols}, auto)`,\n    gridAutoFlow: ({ direction }) => direction,\n    gridAutoRows: ({ numRows }) => numRows ? null : 'auto',\n    gridAutoColumns: ({ numCols }) => numCols ? null : 'auto',\n    gap: ({ gap }) => gap,\n    justifyItems: 'center',\n  },\n})\n\nexport default useJSS","import React, { ReactNode } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  children?: ReactNode\n  className?: string\n  style?: CSS.Properties\n  direction: 'row' | 'column' | 'row dense' | 'column dense'\n  numRows?: number | string\n  numCols?: number | string\n  gap?: string\n}\n\nfunction AutoPlacingGrid({ children, className, style, numRows, numCols, direction, gap }: Props) {\n  const classes = useJSS({ numRows, numCols, direction, gap })\n  return (\n    <div className={className ? `${classes.AutoPlacingGrid} ${className}` : classes.AutoPlacingGrid}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default AutoPlacingGrid","import { Module, Connections } from \"../../../../redux/stateTSTypes\";\n\nexport function connectionExists(connections: Connections, fromMod: Module, actualToID: string, newParam = '') {\n  for(var i = 0; i < fromMod.outputs.length; i++) {\n    const { actualInputID, param } = connections[fromMod.outputs[i]]\n    if (actualInputID === actualToID && newParam === param) {\n      return true\n    }\n  }\n  return false\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Module: {\n    borderRadius: '1.5vmin',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexGrow: 1,\n    flexShrink: 1,\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n    padding: '.2em .5em',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  ConnectorBounder: {\n    alignItems: 'center',\n  },\n\n  Name: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.medium,\n    marginBottom: '.2em',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ConnectorName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ParamName: {\n    whiteSpace: 'noWrap',\n    fontSize: sizes.text.small\n  },\n\n  ConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.moduleInput,\n    borderWidth: '.25em'\n  },\n\n  SmallConnectionReciever: {\n    backgroundColor: 'black',\n    width: sizes.connector.smallSize,\n    height: sizes.connector.smallSize,\n    borderRadius: sizes.connector.smallBorderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: colors.paramInput,\n    borderWidth: '.2em',\n  }\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from '../../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../../audioModules/moduleTypes'\nimport { addConnection } from '../../../../redux/allActions'\nimport { Module, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport { colors } from '../../../../theme/theme'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../../Flex/FlexCol'\nimport FlexRow from '../../../Flex/FlexRow'\nimport { connectionExists } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // of the original modules that made the connection\n  toID: string\n  isFromContainer: boolean\n  isToContainer: boolean\n  onClose: () => void\n}\n\nfunction InModule({ modID, startsBig, fromID, toID, isFromContainer, isToContainer, onClose }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const audioMod = window.audioModules[modID]\n  const am = window.audioModules\n  const [isBig, setBig] = useState(startsBig)\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.Module} style={{ backgroundColor: getModuleColor(mod.moduleType) }}>\n      <div className={classes.Name}\n        style={{ marginBottom: '.2em' }}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <FlexRow style={{ justifyContent: 'center' }}>\n        <FlexCol style={{ marginRight: audioMod.connectingParamIDs.length !== 0 ?'.4em' : '0em' }}>\n          {!isBig ? null : mod.connectionInputs.map((input, index) => {\n            return (\n              <FlexCol key={index}>\n                <div className={classes.ConnectionReciever}\n                  onDragOver={e => { e.preventDefault() }}\n                  onDrop={e => {\n                    e.preventDefault()\n                    const actualFromID = e.dataTransfer.getData('actualFromID')\n                    const fromMod = modules[actualFromID]\n                    const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                    if (!connectionExists(connections, fromMod as Module, modID)) {\n                      connect(\n                        am[actualFromID] as ConnectingAudioModule,\n                        am[modID] as ConnectingAudioModule,\n                        '',\n                        outputIndex,\n                        index,\n                      )\n                      dispatch(addConnection(\n                        fromID,\n                        toID,\n                        '',\n                        outputIndex,\n                        index,\n                        isFromContainer ? actualFromID : undefined,\n                        isToContainer ? modID : undefined,\n                      ))\n                      window.flashNotification(colors.success, 'connection created')\n                      onClose()\n                    } else {\n                      alert('modules already connected')\n                    }\n                  }}\n                />\n                {mod.connectionInputs.length !== 1 ? input : null}\n              </FlexCol>\n            )\n          })}\n        </FlexCol>\n        {audioMod.connectingParamIDs.length === 0 ? null : \n        <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n          {!isBig ? null : audioMod.connectingParamIDs.map((paramID, index) => {\n            return (\n              <FlexCol style={{ alignItems: 'center' }} key={index}\n                onDragOver={e => { e.preventDefault() }}\n                onDrop={e => {\n                  e.preventDefault()\n                  const actualFromID = e.dataTransfer.getData('actualFromID')\n                  const fromMod = modules[actualFromID]\n                  const outputIndex = Number(e.dataTransfer.getData('outputIndex'))\n                  if (!connectionExists(connections, fromMod as Module, modID, paramID)) {\n                    connect(\n                      am[actualFromID] as ConnectingAudioModule,\n                      am[modID] as ConnectingAudioModule,\n                      paramID,\n                      outputIndex,\n                      0,\n                    )\n                    dispatch(addConnection(\n                      fromID,\n                      toID,\n                      paramID,\n                      outputIndex,\n                      0,\n                      isFromContainer ? actualFromID : undefined,\n                      isToContainer ? modID : undefined,\n                    ))\n                    window.flashNotification(colors.success, 'connection created')\n                    onClose()\n                  } else {\n                    alert('modules already connected')\n                  }\n                }}\n              >\n                <div className={classes.SmallConnectionReciever}/>\n                <div className={classes.ParamName}>{paramID}</div>\n              </FlexCol>\n            )\n          })}\n        </AutoPlacingGrid>}\n      </FlexRow>\n    </div>\n  )\n}\n\nexport default InModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport InModule from './InModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  fromID: string // original fromID of connection\n  toID: string\n  isFromContainer: boolean\n  onClose: () => void\n  isBase: boolean\n}\n\nfunction ContainerInModule({ modID, startsBig, fromID, toID, isFromContainer, onClose, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modInputs = (mod as ContainerModule).connectionInputs\n  const childrenStartBig = modInputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{\n        backgroundColor: getModuleColor(CONTAINER),\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{mod.name}</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modInputs.map((inputModID, index) => {\n          const inMod = modules[inputModID]\n          if(inMod.moduleType === CONTAINER) {\n            return (\n              <ContainerInModule key={index} \n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                isFromContainer={isFromContainer}\n                onClose={onClose}\n                isBase={false}\n                startsBig={childrenStartBig}\n              />\n            )\n          } else {\n            return (\n              <InModule key={index}\n                modID={inputModID}\n                fromID={fromID}\n                toID={toID}\n                isFromContainer={true}\n                isToContainer={true}\n                onClose={onClose}\n                startsBig={childrenStartBig}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerInModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport FlexCol from '../../../Flex/FlexCol'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean\n}\n\n// only rendered for base modules\nfunction OutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const mod = useSelector((state: RootState) => state.modules[modID])\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        overflow: 'visible',\n        marginRight: isBase ? '1em' : '0em',\n      }}\n    >\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      {!isBig ? null :\n      mod.connectionOutputs.length > 1 ?\n      <AutoPlacingGrid direction='row' numCols='2' gap='.2em'>\n        {mod.connectionOutputs.map((output, index) => {\n          return (\n            <FlexCol className={classes.ConnectorBounder} key={index}>\n              <div className={classes.IconConnector}\n                draggable={true}\n                onDragStart={e => {\n                  e.dataTransfer.setData('actualFromID', modID)\n                  e.dataTransfer.setData('outputIndex', index.toString())\n                }}\n              />\n              {mod.connectionOutputs.length === 1 ? null : \n                <div className={classes.ConnectorName}>{output}</div>\n              }\n            </FlexCol>\n          )\n        })}\n      </AutoPlacingGrid>\n      :\n      <FlexCol className={classes.ConnectorBounder}>\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={e => {\n            e.dataTransfer.setData('actualFromID', modID)\n            e.dataTransfer.setData('outputIndex', '0')\n          }}\n        />\n      </FlexCol>\n      }\n    </div>\n  )\n}\n\nexport default OutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../../audioModules/moduleTypes'\nimport { ContainerModule, RootState } from '../../../../redux/stateTSTypes'\nimport getModuleColor from '../../../../theme/moduleColor'\nimport AutoPlacingGrid from '../../../AutoPlacingGrid.tsx/AutoPlacingGrid'\nimport OutModule from './OutModule'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  startsBig: boolean\n  isBase: boolean // is the lowest one in the tree for connection\n}\n\nexport type OutModType = {\n  setBig: (isBig: boolean) => void\n}\n\nfunction ContainerOutModule({ modID, startsBig, isBase }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  const mod = modules[modID]\n  const modOutputs = (mod as ContainerModule).connectionOutputs\n  const childrenStartBig = modOutputs.length <= 2\n  const [isBig, setBig] = useState(startsBig)\n  return (\n    <div className={classes.Module} \n      style={{ \n        backgroundColor: getModuleColor(mod.moduleType),\n        marginRight: isBase ? '1em' : '0em',\n        maxHeight: isBase ? '60vmin' : '40vmin',\n        overflowY: isBase ? 'scroll' : 'visible',\n      }}>\n      <div className={classes.Name}\n        onClick={() => { setBig(!isBig) }}\n      >{ mod.name }</div>\n      <AutoPlacingGrid direction={'row'} numCols={2} gap={'.2em'}>\n        {!isBig ? null : modOutputs.map((outputModID, index) => {\n          const outMod = modules[outputModID]\n          if (outMod.moduleType === CONTAINER) {\n            return (\n              <ContainerOutModule key={index}\n                modID={outputModID} \n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          } else {\n            return (\n              <OutModule key={index} \n                modID={outputModID}\n                startsBig={childrenStartBig}\n                isBase={false}\n              />\n            )\n          }\n        })}\n      </AutoPlacingGrid>\n    </div>\n  )\n}\n\nexport default ContainerOutModule","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport { AnyModule, RootState } from '../../../redux/stateTSTypes'\nimport FlexRow from '../../Flex/FlexRow'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport ContainerInModule from './Modules/ContainerInModule'\nimport ContainerOutModule from './Modules/ContainerOutModule'\nimport InModule from './Modules/InModule'\nimport OutModule from './Modules/OutModule'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (fromID: string, toID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, fromMod?: AnyModule, toMod?: AnyModule) {\n  return {\n    isOpen,\n    fromMod,\n    toMod,\n  }\n}\n\nfunction ConnectionMenu() {\n  const [{ isOpen, fromMod, toMod }, setData] = useState(makeData(false))\n  const { modules } = useSelector((state: RootState) => state)\n  window.openConnectionMenu = (fromID, toID) => {\n    setData(makeData(true, modules[fromID], modules[toID]))\n  }\n  const onClose = () => {\n    setData(makeData(false)) \n  }\n  //const classes = useJSS()\n  return (\n    <CenterMenu header='add connection' isClosed={!isOpen} onClose={onClose}>\n      <FlexRow>\n        {fromMod?.moduleType === CONTAINER ? \n          <ContainerOutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        :\n          <OutModule modID={fromMod?.id as string} startsBig={true} isBase={true}/>\n        }\n        {toMod?.moduleType === CONTAINER ?\n          <ContainerInModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            isFromContainer={fromMod?.moduleType === CONTAINER}\n            onClose={onClose}\n            isBase={true}\n          />\n        :\n          <InModule \n            modID={toMod?.id as string} \n            startsBig={true}\n            fromID={fromMod?.id as string}\n            toID={toMod?.id as string}\n            isFromContainer={fromMod?.moduleType === CONTAINER}\n            isToContainer={false}\n            onClose={onClose}\n          />\n        }\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openKnobRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, controlID = '', onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    controlID,\n    onChangeSubmit,\n  }\n}\n\nfunction KnobRangeSetMenu() {\n  const [{ isOpen, controlID, onChangeSubmit }, setData] = useState(makeData(false))\n  const modules = useSelector((state: RootState) => state.modules)\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(0)\n  const [maxRange, setMaxRange] = useState<[number, number] | undefined>(undefined)\n  window.openKnobRangeSetMenu = (modID, controlID, onChangeSubmit) => {\n    const { range, maxRange } = modules[modID].controlData[controlID]\n    setData(makeData(\n      true, \n      controlID, \n      onChangeSubmit\n    ))\n    setMin((range as [number, number])[0])\n    setMax((range as [number, number])[1])\n    setMaxRange(maxRange)\n  }\n  const onClose = () => { \n    setData(makeData(false))\n  }\n  const classes = useJSS()\n  return (\n    <CenterMenu isClosed={!isOpen} header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          if (maxRange) {\n            if (inRange(min, maxRange as [number, number]) && inRange(max, maxRange as [number, number])) {\n              if (max > min) {\n                onChangeSubmit([min, max])\n                onClose()\n              } else {\n                alert('min must be less than max')\n              }\n            } else {\n              alert('a value is not within maximum range bounds')\n            }\n          } else {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          }\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default KnobRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '1em',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.medium,\n    textAlign: 'center',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState, useRef } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport useJSS from './style'\nimport FlexRow from '../../Flex/FlexRow'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\n\ndeclare global {\n  interface Window {\n    openSpaceDBProjectSaveMenu: (saveList: string[], onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveList: string[] = [], preOnClose = () => { }) {\n  return {\n    isOpen,\n    saveList,\n    preOnClose,\n  }\n}\n\nfunction SpaceDBProjectSaveMenu() {\n  const [{ isOpen, saveList, preOnClose }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const { baseContainerID, modules } = state\n  const [saveName, setSaveName] = useState('')\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  window.openSpaceDBProjectSaveMenu = (saveList, onClose) => {\n    setSaveName(modules[baseContainerID].name)\n    setConfirmSaveData({ isOpen: false, message: '' })\n    setData(makeData(true, saveList, onClose)) \n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save project'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <FlexRow style={{ alignItems: 'center' }}>\n        <input className={classes.CenterMenuInput}\n          value={saveName}\n          placeholder={modules[baseContainerID].name}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                if (stringIn(saveName, saveList)) {\n                  setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n                } else {\n                  window.projectSaveService.create({\n                    saveName,\n                    state\n                  }).then((res: any) => {\n                    if (res) {\n                      window.flashNotification('green', 'project saved')\n                    }\n                  })\n                  onClose()\n                }\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          ref={inputRef}\n          autoFocus\n        />\n        <Button\n          onPointerDown={e => e.preventDefault()}\n          onClick={e => {\n            e.preventDefault()\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'save already exists. do you want to replace it?' })\n            } else {\n              window.projectSaveService.create({\n                saveName,\n                state\n              }).then((res: any) => {\n                if (res) {\n                  window.flashNotification('green', 'project saved')\n                }\n              })\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n      </FlexRow>\n      {!confirmSaveData.isOpen ? null\n        :\n        <FlexCol>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <FlexRow style={{ justifyContent: 'center' }}>\n            <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n              onClick={() => {\n                inputRef.current?.focus()\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                window.projectSaveService.update(saveName, state).then((res: any) => {\n                  if (res) {\n                    window.flashNotification('green', 'project updated')\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </FlexRow>\n        </FlexCol>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBProjectSaveMenu","import React, { useState } from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openConfirmDeleteMenu: (saveName: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, saveName = '', onClose = () => { }) {\n  return {\n    isOpen,\n    saveName,\n    preOnClose: onClose\n  }\n}\n\nfunction ConfirmDeleteMenu() {\n  const [{ isOpen, saveName, preOnClose }, setData] = useState(makeData(false))\n  window.openConfirmDeleteMenu = (saveName, onClose) => { setData(makeData(true, saveName, onClose)) }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  return (\n    <CenterMenu header={`are you sure you want to delete ${saveName}?`}\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n          onClick={() => {\n            onClose()\n          }}\n        >no</Button>\n        <Button style={{ backgroundColor: colors.confirmButton }}\n          onClick={() => {\n            window.projectSaveService.remove(saveName)\n            onClose()\n          }}\n        >yes</Button>\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmDeleteMenu","import { saveSMM } from \"../../../helpers/fileAccess\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { getContainerModulesConnections } from \"../../../redux/getContainerAsProject\"\nimport { RootState } from \"../../../redux/stateTSTypes\"\n\nexport function getFileDirectory(badDir: string) {\n  for (var i = badDir.length; i > 0; i--) {\n    if (badDir[i] === '/') {\n      return badDir.slice(0, i + 1)\n    }\n  }\n  return badDir\n}\n\nexport function confirmContainerSaveName(setConfirmSaveData: (arg: any) => void, containerID: string, name: string, saveList: string[], state: RootState, onClose: () => void) {\n  if (!stringIn(name, saveList)) {\n    const { modules, connections } = getContainerModulesConnections(state, containerID)\n    window.containerSaveService.create({\n      saveName: name,\n      containerID,\n      modules,\n      connections,\n    }).then((success: string) => {\n      if (success) {\n        window.flashNotification('green', 'module saved to spaceDB')\n        window.refreshSpaceDBModules()\n      }\n    })\n    onClose()\n  } else {\n    setConfirmSaveData({ isOpen: true, message: 'module with this name already exists. would you like to update it?' })\n  }\n}\n\nexport async function saveContainerToFile(saveName: string, containerID: string, state: RootState) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const save = {\n    containerID,\n    modules,\n    connections\n  }\n  await saveSMM(window.moduleDirectoryHandle, saveName, save)\n}","import React, { useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport Conditional from '../../Conditional/Conditional'\nimport FlexCol from '../../Flex/FlexCol'\nimport FlexRow from '../../Flex/FlexRow'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { saveContainerToFile } from './helpers'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    openFileContainerSaveMenu: (containerModID: string) => void\n  }\n}\n\nlet initName = ''\nlet modID = ''\n\nfunction FileContainerSaveMenu() {\n  const [open, setOpen] = useState(false)\n  const [saveName, setSaveName] = useState('')\n  const [confirmOpen, setConfirmOpen] = useState(false) \n  const state = useSelector((state: RootState) => state) \n  window.openFileContainerSaveMenu = (containerModID) => {\n    modID = containerModID\n    initName = state.modules[containerModID].name\n    setSaveName(initName)\n    setConfirmOpen(false)\n    setOpen(true) \n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  async function trySaveModule() {\n    if (stringIn(saveName, window.fileModuleSaveNames)) {\n      setConfirmOpen(true)\n    } else {\n      await saveContainerToFile(saveName, modID, state)\n      window.flashNotification(colors.success, `${saveName} saved to file`)\n      onClose()\n    }\n  }\n  const classes = useJSS()\n  const inputRef = useRef<HTMLInputElement>(null)\n  return (\n    <CenterMenu header='' isClosed={!open} onClose={onClose}>\n      <input className={classes.CenterMenuInput}\n        onChange={e => {\n          setSaveName(e.target.value)\n        }}\n        value={saveName}\n        placeholder={initName}\n        onKeyDown={e => {\n          switch(e.key) {\n            case 'Enter': trySaveModule(); break;\n            case 'Esc': onClose(); break;\n          }\n        }}\n        ref={inputRef}\n        autoFocus\n      />\n      <Button\n        onClick={trySaveModule}\n      >\n        save\n      </Button>\n      <Conditional showIf={confirmOpen}>\n        <FlexCol>\n          <div>module with this name already exists. would you like to update it?</div>\n          <FlexRow>\n            <Button\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n\n                }\n                setConfirmOpen(false)\n              }}\n            >\n              no\n            </Button>\n            <Button\n              onClick={() => {\n                saveContainerToFile(saveName, modID, state)\n                onClose()\n              }}\n            >\n              yes\n            </Button>\n          </FlexRow>\n        </FlexCol>\n      </Conditional>\n    </CenterMenu>\n  )\n}\n\nexport default FileContainerSaveMenu","import React, { useState, useRef, Fragment } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { getContainerModulesConnections } from '../../../redux/getContainerAsProject'\nimport { sizes, colors } from '../../../theme/theme'\nimport { confirmContainerSaveName } from './helpers'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\n\ndeclare global {\n  interface Window {\n    openSpaceDBContainerSaveMenu: (saveList: string[], id: string, onClose: () => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, id = '', saveList: string[] = [], onClose = () => {}, initName = '') {\n  return {\n    isOpen,\n    id,\n    saveList,\n    preOnClose: onClose,\n    initName\n  }\n}\n\nfunction SpaceDBContainerSaveMenu() {\n  const [{ isOpen, id, saveList, preOnClose, initName }, setData] = useState(makeData(false))\n  const state = useSelector((state: RootState) => state)\n  const [name, setName] = useState('')\n  window.openSpaceDBContainerSaveMenu = (saveList, id, onClose) => {\n    setData(makeData(true, id, saveList, onClose, state.modules[id].name))\n    setName(state.modules[id].name)\n  }\n  const onClose = () => {\n    preOnClose()\n    setData(makeData(false))\n  }\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save container module'\n      isClosed={!isOpen}\n      onClose={onClose}\n    >\n      <input className={classes.CenterMenuInput}\n        value={name}\n        placeholder={initName}\n        ref={inputRef}\n        onChange={e => {\n          setName(e.target.value)\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': // enter\n              confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n              break\n            case 'Escape': // escape\n              onClose()\n              break\n          }\n        }}\n        autoFocus\n      />\n      <Button\n        onClick={() => {\n          confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n        }}\n      >confirm</Button>\n      {\n        !confirmSaveData.isOpen ? null :\n        <Fragment>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <div style={{ display: 'flex' }}>\n            <Button style={{ backgroundColor: colors.denyButton }}\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n                }\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                const { modules, connections } = getContainerModulesConnections(state, id)\n                window.containerSaveService.update(name, {\n                  saveName: name,\n                  containerID: id,\n                  modules,\n                  connections,\n                }).then((success: string) => {\n                  if (success) {\n                    window.flashNotification('green', 'module updated')\n                    window.refreshSpaceDBModules()\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </div>\n        </Fragment>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBContainerSaveMenu","import React, { useState } from 'react'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { sizes, colors } from '../../../theme/theme'\nimport CenterMenu from '../CenterMenu/CenterMenu'\n\ndeclare global {\n  interface Window {\n    openAnalyzerRangeSetMenu: (range: Range, onChangeSubmit: (newRange: Range) => void) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    onChangeSubmit,\n  }\n}\n\nfunction AnalyzerRangeSetMenu() {\n  const [{ isOpen, onChangeSubmit }, setData] = useState(makeData(false))\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(0)\n  window.openAnalyzerRangeSetMenu = (range, onChangeSubmit) => { \n    setMin(range[0])\n    setMax(range[1])\n    setData(makeData(true, onChangeSubmit))\n  }\n  const onClose = () => { setData(makeData(false)) }\n  const classes = useJSS()\n  return (\n    <CenterMenu isClosed={!isOpen} header='set analyzer range' onClose={onClose}>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.key === 'Escape') {\n            onClose()\n          } else if (e.key === 'Enter') {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMax(Number(e.target.value))\n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          onChangeSubmit([min, max])\n          onClose()\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default AnalyzerRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport useJSS from './style'\n\ninterface Props {\n  isOpen: boolean\n  header: string\n  onSubmit: (newName: string) => void\n  placeholder: string\n  onClose: () => void\n}\n\nfunction RenameMenu({ isOpen, header, onSubmit, placeholder, onClose }: Props) {\n  const classes = useJSS()\n  const [val, setVal] = useState('')\n  const [isTooShort, setIsTooShort] = useState(false)\n  function trySubmit() {\n    if (val.length > 0) {\n      onSubmit(val)\n      onClose()\n      setVal('')\n    } else {\n      setIsTooShort(true)\n    }\n  }\n  return (\n    <CenterMenu isClosed={!isOpen} header={header} onClose={() => { onClose(); setVal('') }}>\n      <div className={classes.CMInputBounder}>\n        <input className={classes.CenterMenuInput}\n          placeholder={placeholder}\n          value={val}\n          onChange={e => {\n            setVal(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Enter':\n                trySubmit()\n                break\n              case 'Escape':\n                onClose()\n                break\n            }\n          }}\n          autoFocus\n        />\n        <Button\n          onClick={() => {\n            trySubmit()\n          }}\n        >\n          confirm\n        </Button>\n        {\n          !isTooShort ? null :\n          <div className={classes.Error}>\n            please enter a name\n          </div>\n        }\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\nimport RenameMenu from './RenameMenu'\n\ndeclare global {\n  interface Window {\n    openModuleRenameMenu: (toRenameID: string) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, toRenameID = '') {\n  return {\n    isOpen,\n    toRenameID,\n  }\n}\n\nfunction RenameModuleMenu() {\n  const [{ isOpen, toRenameID }, setData] = useState(makeData(false))\n  window.openModuleRenameMenu = toRenameID => { setData(makeData(true, toRenameID)) }\n  const onClose = () => { setData(makeData(false)) }\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename module' \n      isOpen={isOpen}\n      onSubmit={newName => {\n        dispatch(renameModule(toRenameID, newName))\n      }}\n      placeholder={modules[toRenameID]?.name}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameModuleMenu","import React, { useState } from 'react'\nimport RenameMenu from './RenameMenu'\nimport { useDispatch } from 'react-redux'\nimport { renameContainerControl } from '../../../redux/allActions'\nimport { ContainerControl } from '../../../redux/stateTSTypes'\n\ndeclare global {\n  interface Window {\n    openControlRenameMenu: (placeholder: string, parentModID: string, containerControl: ContainerControl) => void\n  }\n}\n\nfunction makeData(isOpen: boolean, placeholder = '', parentModID = '', containerControl?: ContainerControl) {\n  return {\n    isOpen,\n    placeholder,\n    containerControl,\n    parentModID\n  }\n}\n\nfunction RenameControlMenu() {\n  const [{ isOpen, placeholder, containerControl, parentModID }, setData] = useState(makeData(false))\n  window.openControlRenameMenu = (placeholder, parentModID, containerControl) => { setData(makeData(true, placeholder, parentModID, containerControl)) }\n  const onClose = () => setData(makeData(false))\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename control'\n      isOpen={isOpen}\n      onSubmit={newName => {\n        const { modID, controlID, actualModID } = containerControl as ContainerControl\n        dispatch(renameContainerControl(newName, parentModID, modID, controlID, actualModID))\n        window.flashNotification('green', 'control passthrough renamed')\n      }}\n      placeholder={placeholder}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameControlMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  LeftBar: {\n    width: sizes.addModuleMenu.leftBarWidth,\n    //height: sizes.addModuleMenu.height,\n    backgroundColor: colors.addModuleLeftBarBG,\n  },\n\n  LeftBarButton: {\n    borderRadius: '0em',\n    margin: '0em',\n    backgroundColor: 'transparent',\n    //borderStyle: 'none solid none none',\n    borderColor: 'transparent',\n    borderWidth: '1px',\n    '&:hover': {\n      borderColor: 'transparent',\n    }\n  },\n\n  RouterBounder: {\n    alignItems: 'center'\n  },\n\n  IconRouter: {\n    width: sizes.addModuleMenu.iconRouterWidth,\n    height: sizes.addModuleMenu.height,\n    overflowY: 'scroll',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, auto)',\n    gridAutoRows: '20vmin',\n    gridAutoFlow: 'row',\n    placeItems: 'center',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  SearchBar: {\n    width: '80%',\n    height: '1.5em',\n    marginTop: '1.3em',\n    marginBottom: '.4em',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.addModuleSearchBarBG,\n    color: colors.addModuleSearchBarText,\n    textAlign: 'center',\n    borderStyle: 'none',\n    borderRadius: '.2em',\n    '&:focus': {\n      outline: 'none',\n    }\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport FlexCol from '../../Flex/FlexCol'\nimport { addModuleMenuGroups, SPACEDB_MODULES } from './AddModuleMenu'\nimport useJSS from './style'\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n}\n\nfunction LeftBar({ selectedGroup, setSG }: Props) {\n  const classes = useJSS()\n  return (\n    <FlexCol className={classes.LeftBar}>\n      {addModuleMenuGroups.filter(group => window.usingElectron || group !== SPACEDB_MODULES)\n      .map((group, index) => {\n        const isHL = group === selectedGroup\n        return (\n          <Button className={classes.LeftBarButton}\n            key={index}\n            style={{\n              color: isHL ? colors.selectedText : 'white',\n            }}\n            onClick={() => {\n              setSG(group)\n            }}\n          >\n            { group }\n          </Button>\n        )\n      })}\n    </FlexCol>\n  )\n}\n\nexport default LeftBar","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ModuleType } from '../../../../../audioModules/moduleTypes'\nimport genRandomID from '../../../../../redux/idGen'\nimport { ADD_MODULE } from '../../../../../redux/modules/moduleActionTypes'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  fullName: string\n  shortName: string\n  moduleType: string\n  isFocussed?: boolean\n  totNumModules: number\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcon({ fullName, shortName, moduleType, isFocussed, totNumModules, row, col, onClose }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.addModule(\n      genRandomID(0, totNumModules),\n      shortName,\n      window.fillContainerID,\n      moduleType as ModuleType,\n      dispatch,\n      row, col\n    )\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(moduleType),\n          borderColor: isFocussed ? 'white' : colors.grey\n        }}\n        onFocus={e => { \n          e.preventDefault()\n          console.log('focussing 2')\n        }}\n        onClick={addModule}\n        draggable={true}\n        onDragStart={event => { // but the div disappears making this not work\n          event.persist()\n          event.dataTransfer.setData('type', ADD_MODULE)\n          event.dataTransfer.setData('id', genRandomID(0, totNumModules))\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', shortName)\n          //onClose()\n        }}\n        onKeyDown={e => {\n          switch (e.key) {\n            case 'Enter': addModule()\n          }\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default ModuleIcon","import React, { Fragment } from 'react'\nimport { ModuleType } from '../../../../../audioModules/moduleTypes'\nimport { DrawerModuleData } from './moduleData'\nimport ModuleIcon from './ModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  moduleData: DrawerModuleData\n  row: number\n  col: number\n  onClose: () => void\n}\n\nfunction ModuleIcons({ totNumModules, moduleData, row, col, onClose }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon key={index} \n            fullName={fullName} \n            shortName={shortName} \n            moduleType={moduleType as ModuleType} \n            totNumModules={totNumModules} \n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER, WHITE_NOISE, TUNER } from \"../../../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, shortname, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n  ['distortion', 'dist', DISTORTION],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n  ['enveloped pad', 'env', ENVELOPED_TRIGGER],\n  ['white noise', 'noise', WHITE_NOISE]\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n  ['analyzer', 'analyzer', ANALYZER],\n  ['tuner', 'tuner', TUNER],\n]\n\nexport const allModuleData: DrawerModuleData = effectModuleData.concat(sourceModuleData).concat(utilityModuleData)","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CONTAINER } from '../../../../../audioModules/moduleTypes'\nimport { performContainerMerge } from '../../../../../redux/replicateContainer'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  moduleName: string\n  totNumberModules: number\n  totNumberConnections: number\n  onClose: () => void\n  row: number\n  col: number\n  isFocussed?: boolean\n}\n\nfunction SpaceDBModuleIcon({ moduleName, totNumberModules, totNumberConnections, onClose, row, col, isFocussed }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  function addModule() {\n    window.containerSaveService.get(moduleName).then(({ containerID, modules, connections }: any) => {\n      performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n    })\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(CONTAINER),\n          borderColor: isFocussed ? 'white' : colors.grey,\n        }}\n        onClick={addModule}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openSDBModuleContextMenu(e, moduleName)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {moduleName}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBModuleIcon","import React, { Fragment, useEffect } from 'react'\nimport SpaceDBModuleIcon from './SpaceDBModuleIcon'\n\ninterface Props {\n  totNumModules: number\n  totNumConnections: number\n  onClose: () => void\n  row: number\n  col: number\n  spaceDBModules: string[]\n}\n\nfunction SpaceDBModules({ spaceDBModules, totNumModules, totNumConnections, onClose, row, col }: Props) {\n  useEffect(() => {\n    window.refreshSpaceDBModules()\n  }, [])\n  return (\n    <Fragment>\n      {spaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon \n            moduleName={moduleName}\n            key={index}\n            totNumberModules={totNumModules}\n            totNumberConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SpaceDBModules","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { CONTAINER } from '../../../../../audioModules/moduleTypes'\nimport { getSavedSMMFromName } from '../../../../../helpers/fileAccess'\nimport { performContainerMerge } from '../../../../../redux/replicateContainer'\nimport getModuleColor from '../../../../../theme/moduleColor'\nimport { colors } from '../../../../../theme/theme'\nimport useJSS from '../style'\n\ninterface Props {\n  name: string\n  totNumModules: number\n  totNumConnections: number\n  row: number\n  col: number\n  onClose: () => void\n  isFocussed?: boolean\n}\n\nfunction FileModuleIcon({ name, totNumModules, totNumConnections, row, col, onClose, isFocussed }: Props) {\n  const classes = useJSS()\n  async function addModule() {\n    const { containerID, modules, connections } = await getSavedSMMFromName(window.moduleDirectoryHandle, name)\n    performContainerMerge(\n      dispatch, \n      modules, \n      connections, \n      totNumModules, \n      totNumConnections,\n      window.fillContainerID,\n      containerID,\n      row, col\n    )\n    onClose()\n  }\n  if (isFocussed) {\n    window.addSelectedSearchModule = addModule\n  }\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.DrawerItem}>\n      <div className={classes.DrawerIcon}\n        style={{ \n          backgroundColor: getModuleColor(CONTAINER),\n          borderColor: isFocussed ? 'white' : colors.grey,\n        }}\n        onClick={addModule}\n      />\n      <div className={classes.DrawerItemText}>\n        {name}\n      </div>\n    </div>\n  )\n}\n\nexport default FileModuleIcon","import React, { Fragment } from 'react'\nimport { allModuleData } from './base/moduleData'\nimport ModuleIcon from './base/ModuleIcon'\nimport FileModuleIcon from './file/FileModuleIcon'\nimport SpaceDBModuleIcon from './spaceDB/SpaceDBModuleIcon'\n\ninterface Props {\n  query: string\n  spaceDBModules: string[]\n  totNumModules: number\n  totNumConnections: number\n  onClose: () => void\n  row: number\n  col: number\n}\n\nfunction SearchIcons({ query, spaceDBModules, totNumModules, totNumConnections, onClose, row, col }: Props) {\n  const upperCaseQuery = query.toUpperCase()\n  const filteredSpaceDBModules = spaceDBModules.filter(moduleName => moduleName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  const filteredModuleData = allModuleData.filter(([fullName, ,]) => fullName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  const filteredFileModules = window.fileModuleSaveNames.filter(modName => modName.toUpperCase().slice(0, upperCaseQuery.length) === upperCaseQuery)\n  return (\n    <Fragment>\n      {filteredSpaceDBModules.map((moduleName, index) => {\n        return (\n          <SpaceDBModuleIcon\n            key={moduleName}\n            moduleName={moduleName}\n            totNumberModules={totNumModules}\n            totNumberConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n            isFocussed={index === 0}\n          />\n        )\n      })}\n      {filteredFileModules.map((saveName, index) => {\n        return (\n          <FileModuleIcon \n            key={saveName}\n            name={saveName}\n            totNumModules={totNumModules}\n            totNumConnections={totNumConnections}\n            onClose={onClose}\n            row={row} col={col}\n            isFocussed={filteredSpaceDBModules.length === 0 && index === 0}\n          />\n        )\n      })}\n      {filteredModuleData.map(([fullName, shortName, moduleType], index) => {\n        return (\n          <ModuleIcon\n            isFocussed={filteredSpaceDBModules.length === 0 && filteredFileModules.length === 0 && index === 0}\n            key={index}\n            fullName={fullName}\n            shortName={shortName}\n            moduleType={moduleType}\n            totNumModules={totNumModules}\n            row={row} col={col}\n            onClose={onClose}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default SearchIcons","import React, { Fragment, useState } from 'react'\nimport { getDirectorySMMNames } from '../../../../../helpers/fileAccess'\nimport { sizes } from '../../../../../theme/theme'\nimport Button from '../../../../Button/Button'\nimport FileModuleIcon from './FileModuleIcon'\n\ndeclare global {\n  interface Window {\n    moduleDirectoryHandle: any\n    fileModuleSaveNames: string[]\n  }\n}\n\ninterface Props {\n  totNumModules: number\n  totNumConnections: number\n  row: number\n  col: number\n  onClose: () => void\n}\n\nwindow.fileModuleSaveNames = []\n\nfunction FileModules({ totNumModules, totNumConnections, row, col, onClose }: Props) {\n  const [fileModules, setFileModules] = useState<string[]>(window.fileModuleSaveNames)\n  return (\n    <Fragment>\n      {window.moduleDirectoryHandle ?\n      (fileModules.length === 0 ?\n      <Fragment>\n        <Button fontSize={sizes.text.small} notClickable>\n          no modules in this directory.\n          save modules by right clicking a custom container,\n          and selecting save to file.\n        </Button>\n        <Button\n          onClick={async () => {\n            window.moduleDirectoryHandle =  await window.showDirectoryPicker()\n            window.fileModuleSaveNames = await getDirectorySMMNames(window.moduleDirectoryHandle)\n            setFileModules(window.fileModuleSaveNames)\n          }}\n        >\n          change directory\n        </Button>\n      </Fragment>\n      :\n      fileModules.map((name, index) => {\n        return (\n          <FileModuleIcon key={index}\n            name={name} onClose={onClose}\n            totNumModules={totNumModules}\n            totNumConnections={totNumConnections}\n            row={row} col={col}\n          />\n        )\n      })\n      )\n      :\n      <Button\n        onClick={async () => {\n          window.moduleDirectoryHandle = await window.showDirectoryPicker()\n          window.fileModuleSaveNames = await getDirectorySMMNames(window.moduleDirectoryHandle)\n          setFileModules(window.fileModuleSaveNames)\n        }}\n      >\n        select module directory\n      </Button>\n      }\n    </Fragment>\n  )\n}\n\nexport default FileModules","import React from 'react'\nimport ModuleIcons from './Icons/base/ModuleIcons'\nimport useJSS from './style'\nimport { EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES, SEARCH, FILE_MODULES } from './AddModuleMenu'\nimport { effectModuleData, sourceModuleData, utilityModuleData } from './Icons/base/moduleData'\nimport SpaceDBModules from './Icons/spaceDB/SpaceDBModules'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport SearchIcons from './Icons/SearchIcons'\nimport FileModules from './Icons/file/FileModules'\n\ninterface Props {\n  selectedGroup: string\n  row: number\n  col: number\n  query: string\n  onClose: () => void\n  spaceDBModules: string[]\n}\n\nfunction IconRouter({ selectedGroup, row, col, onClose, query, spaceDBModules }: Props) {\n  const totNumModules = useSelector((state: RootState) => Object.keys(state.modules).length)\n  const totNumConnections = useSelector((state: RootState) => Object.keys(state.connections).length)\n  const classes = useJSS()\n  return (\n    <div className={classes.IconRouter}>\n      <ModuleIcons totNumModules={totNumModules}\n        moduleData={\n          selectedGroup === EFFECTS ? effectModuleData : \n          selectedGroup === SOURCES ? sourceModuleData :\n          selectedGroup === UTILITY ? utilityModuleData :\n          []\n        }\n        row={row} col={col}\n        onClose={onClose}\n      />\n      {selectedGroup !== SPACEDB_MODULES ? null :\n      <SpaceDBModules\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n      {selectedGroup !== FILE_MODULES ? null :\n      <FileModules\n        onClose={onClose}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        row={row} col={col}\n      />}\n      {selectedGroup !== SEARCH ? null :\n      <SearchIcons\n        query={query}\n        spaceDBModules={spaceDBModules}\n        totNumModules={totNumModules}\n        totNumConnections={totNumConnections}\n        onClose={onClose}\n        row={row} col={col}\n      />}\n    </div>\n  )\n}\n\nexport default IconRouter","import React, { RefObject } from 'react'\nimport { SEARCH } from './AddModuleMenu'\nimport useJSS from './style'\n\ndeclare global {\n  interface Window {\n    addSelectedSearchModule: () => void\n  }\n}\n\ninterface Props {\n  selectedGroup: string\n  setSG: (arg: string) => void\n  setQuery: (arg: string) => void\n  searchRef: RefObject<HTMLInputElement>\n  onClose: () => void\n}\n\nlet prevSelectedGroup: string\n\nfunction SearchBar({ selectedGroup, setSG, setQuery, searchRef, onClose }: Props) {\n  const classes = useJSS()\n  if (selectedGroup !== SEARCH) {\n    prevSelectedGroup = selectedGroup\n  }\n  return (\n    <input className={classes.SearchBar}\n      ref={searchRef}\n      onChange={e => {\n        if (e.target.value.length === 0) {\n          setSG(prevSelectedGroup)\n          window.addSelectedSearchModule = () => {}\n        } else {\n          setQuery(e.target.value)\n          setSG(SEARCH)\n        }\n      }}\n      onKeyDown={e => {\n        switch(e.key) {\n          case 'Escape': onClose(); break;\n          case 'Enter': window.addSelectedSearchModule(); break;\n        }\n      }}\n      placeholder='search'\n    />\n  )\n}\n\nexport default SearchBar","import React, { useEffect, useRef, useState } from 'react'\nimport LeftBar from './LeftBar'\nimport IconRouter from './IconRouter'\nimport SearchBar from './SearchBar'\nimport useJSS from './style'\nimport { useSpring } from 'react-spring'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\nimport FlexCol from '../../Flex/FlexCol'\nimport { zIndex } from '../../../theme/zIndex'\n\ndeclare global {\n  interface Window {\n    openAddModuleMenu: (row: number, col: number) => void\n    refreshSpaceDBModules: () => void\n  }\n}\n\nexport const EFFECTS = 'effects'\nexport const SOURCES = 'sources'\nexport const UTILITY = 'utility'\nexport const SPACEDB_MODULES = 'spaceDB'\nexport const FILE_MODULES = 'local file'\nexport const SEARCH = 'search'\n\nexport const addModuleMenuGroups = [\n  EFFECTS, SOURCES, UTILITY, SPACEDB_MODULES, FILE_MODULES\n]\n\nfunction makeData(isOpen: boolean, row?: number, col?: number) {\n  return {\n    isOpen,\n    row,\n    col,\n  }\n}\n\nfunction AddModuleMenu() {\n  const [{ isOpen, row, col }, setData] = useState(makeData(false))\n  const searchRef = useRef<HTMLInputElement>(null)\n  window.openAddModuleMenu = (row, col) => {\n    setQuery('')\n    setData(makeData(true, row, col))\n    if (searchRef.current) {\n      searchRef.current.value = ''\n      searchRef.current.focus()\n    }\n  }\n  const onClose = () => { setData(makeData(false)) }\n  const [selectedGroup, setSG] = useState(EFFECTS)\n  const [query, setQuery] = useState('') // used with the search bar\n  const [spaceDBModules, setSpaceDBModules] = useState<string[]>([])\n  window.refreshSpaceDBModules = () => {\n    window.containerSaveService.find().then((saveNames: string[]) => { setSpaceDBModules(saveNames) })\n  }\n  const styleSpring = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: {\n      tension: 270,\n    }\n  })\n  useEffect(() => {\n    if (window.usingElectron) window.refreshSpaceDBModules()\n  }, [])\n  const classes = useJSS()\n  return (\n    <CenterMenu header='add module'\n      onClose={onClose}\n      bounderStyle={Object.assign({}, styleSpring, {\n        zIndex: isOpen ? zIndex.centerMenu : zIndex.background - 1,\n      })}\n    >\n      <FlexRow>\n        <FlexCol className={classes.RouterBounder}>\n          <SearchBar selectedGroup={selectedGroup} setSG={setSG} setQuery={setQuery} searchRef={searchRef} onClose={onClose} />\n          <LeftBar selectedGroup={selectedGroup} setSG={setSG} />\n        </FlexCol>\n        <IconRouter \n          selectedGroup={selectedGroup} \n          row={row as number} col={col as number} \n          onClose={onClose} query={query} \n          spaceDBModules={spaceDBModules} \n        />\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default AddModuleMenu","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModule = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModule","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID, name }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: true,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: true,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  }\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: false,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: false,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  }\n}\n\nexport default unmarkContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\"\nimport { RenameContainerControlAction } from \"../moduleTSTypes\"\n\nconst renameContainerControl = (modules: Modules, { name, parentModID, modID, controlID, actualModID }: RenameContainerControlAction) => {\n  const containerMod = modules[parentModID] as ContainerModule\n  return Object.assign({}, modules, {\n    [parentModID]: {\n      ...containerMod,\n      containerControls: containerMod.containerControls.map(containerControl => {\n        const notRightControl = (\n          containerControl.controlID !== controlID ||\n          containerControl.actualModID !== actualModID\n        )\n        if (notRightControl) {\n          return containerControl\n        } else {\n          return {\n            ...containerControl,\n            name: name\n          }\n        }\n      })\n    }\n  })\n}\n\nexport default renameContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n  RenameContainerControlAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n  renameContainerControlReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      case RENAME_CONTAINER_CONTROL: return renameContainerControlReducer(state, action as RenameContainerControlAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\nimport genRandomID from \"../../idGen\"\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = genRandomID(0, Object.keys(connections).length)\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\"\nimport { getContainerIDs, getInternalConnectionIDs } from \"../../getContainerAsProject\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const toTrimModIDs = modules[id].moduleType === CONTAINER ? getContainerIDs(id, modules) : [ id ]\n  const toTrimConnectionIDs = modules[id].moduleType === CONTAINER ? \n    [...modules[id].inputs, ...modules[id].outputs, ...getInternalConnectionIDs(connections, toTrimModIDs)] \n    : [...modules[id].inputs, ...modules[id].outputs]\n  const trimmedModules = filterOutFromObj(modules, toTrimModIDs) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, toTrimConnectionIDs),\n  }\n}\n\nexport default removeModule","import { Modules, Connections, ContainerModule } from \"../../stateTSTypes\"\nimport { MergeContainerAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nconst mergeContainer = (modules: Modules, connections: Connections, { containerID, newModules, newConnections, row, col, parentID }: MergeContainerAction): ConnectionReducerReturn => {\n  return {\n    newModules: Object.assign({}, modules, newModules, {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: [ ...(modules[parentID] as ContainerModule).childModules, containerID ]\n      },\n      [containerID]: {\n        ...newModules[containerID],\n        parentID,\n        row,\n        col,\n        isBaseContainer: false,\n      }\n    }),\n    newConnections: Object.assign({}, connections, newConnections)\n  }\n}\n\nexport default mergeContainer","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\nimport mergeContainer from './reducers/mergeContainer'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action: ConnectionAction): ConnectionReducerReturn => {\n  switch (action.type) {\n    case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n    case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n    case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n    case MERGE_CONTAINER: return mergeContainer(modules, connections, action as MergeContainerAction)\n    default: return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\n\nexport function createInitState() {\n  return {\n    modules: moduleReducer(),\n    connections: {},\n    baseContainerID: bcidReducer(),\n  }\n}\n\nconst initState = createInitState()\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE || action.type === MERGE_CONTAINER) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    const newState = (action as RootAction).state\n    return Object.assign(newState, newState.connections ? {} : {\n      connections: {}\n    })\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    return {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n  }\n}\n\nexport default rootReducer\n","import React, { Dispatch, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport restoreAMFromState from '../../../audioModules/restoreAMFromState'\nimport { saveJSONToChosenFile, saveJSONToFileHandle } from '../../../helpers/fileAccess'\nimport { restoreFromState } from '../../../redux/allActions'\nimport { createInitState } from '../../../redux/rootReducer'\nimport { Connections, RootState } from '../../../redux/stateTSTypes'\nimport { colors, sizes } from '../../../theme/theme'\nimport Button from '../../Button/Button'\nimport CenterMenu from '../../CenterMenus/CenterMenu/CenterMenu'\nimport FlexRow from '../../Flex/FlexRow'\n\ndeclare global {\n  interface Window {\n    openConfirmBlankProjectMenu: () => void\n  }\n}\n\nfunction makeBlankProject(dispatch: Dispatch<any>, connections: Connections) {\n  const emptyState = createInitState()\n  restoreAMFromState(connections, emptyState)\n  dispatch(restoreFromState(emptyState))\n  window.flashNotification(colors.success, 'created blank project')\n  window.saveFileHandle = undefined\n  window.reRenderFileMenu()\n}\n\nfunction ConfirmBlankProject() {\n  const [isOpen, setOpen] = useState(false)\n  window.openConfirmBlankProjectMenu = () => {\n    setOpen(true) \n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n\n  const state = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <CenterMenu isClosed={!isOpen} onClose={onClose}>\n      <div \n        style={{ \n          fontSize: sizes.text.medium,\n          textAlign: 'center',\n        }}\n      > would you like to save the current project before closing? </div>\n      <FlexRow>\n        <Button\n          onClick={() => {\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >no</Button>\n        <Button\n          onClick={async () => {\n            if (window.saveFileHandle) {\n              await saveJSONToFileHandle(window.saveFileHandle, state)\n            } else {\n              await saveJSONToChosenFile(state)\n            }\n            makeBlankProject(dispatch, state.connections)\n            onClose()\n          }}\n        >yes</Button>\n      </FlexRow>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmBlankProject","import React, { Fragment } from 'react'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport KnobRangeSetMenu from './RangeSetMenu/KnobRangeSetMenu'\nimport SpaceDBProjectSaveMenu from './SaveMenu/SpaceDBProjectSaveMenu'\nimport ConfirmDeleteMenu from './ConfirmDeleteMenu/ConfirmDeleteMenu'\nimport FileContainerSaveMenu from './SaveMenu/FileContainerSaveMenu'\nimport SpaceDBContainerSaveMenu from './SaveMenu/SpaceDBContainerSaveMenu'\nimport AnalyzerRangeSetMenu from './RangeSetMenu/AnalyzerRangeSetMenu'\nimport RenameModuleMenu from './RenameMenu/RenameModuleMenu'\nimport RenameControlMenu from './RenameMenu/RenameControlMenu'\nimport AddModuleMenu from './AddModuleMenu/AddModuleMenu'\nimport ConfirmBlankProject from '../RightDrawer/FileMenu/ConfirmBlankProject'\n\nfunction CenterMenus() {\n          \n  return (\n    <Fragment>\n      <AddModuleMenu/>\n      <ConnectionMenu/>\n      <RenameModuleMenu/>\n      <RenameControlMenu/>\n      <KnobRangeSetMenu/>\n      <AnalyzerRangeSetMenu/>\n      <SpaceDBProjectSaveMenu/>\n      <SpaceDBContainerSaveMenu/>\n      <ConfirmDeleteMenu/>\n      <FileContainerSaveMenu/>\n      <ConfirmBlankProject/>\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","export interface NotificationData {\n  isOpen: boolean\n  color: string\n  text: string\n}\n\nexport function makeNotificationData(isOpen: boolean, color = '', text = ''): NotificationData {\n  return {\n    isOpen,\n    color,\n    text,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Notification: {\n    position: 'absolute',\n    top: '10vh',\n    left: '50vw',\n    transform: 'translate(-50%, 0%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '2vmin',\n    borderRadius: '4vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    zIndex: 1000,\n    fontSize: sizes.text.small\n  }\n})\n\nexport default useJSS","import React, { Fragment, useState } from 'react'\nimport { makeNotificationData } from './makeData'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\n\ndeclare global {\n  interface Window {\n    flashNotification: (color: string, text: string) => void\n  }\n}\n\nconst notificationTime = 2500 //milliseconds\n\nfunction Notification() {\n  const [{ isOpen, color, text }, setNotificationData] = useState(makeNotificationData(false))\n  const [isVisible, setIsVisible] = useState(false)\n  const classes = useJSS()\n  window.flashNotification = (color, text) => { \n    setNotificationData(makeNotificationData(true, color, text))\n    setIsVisible(true)\n    window.setTimeout(() => {\n      setIsVisible(false)\n    }, notificationTime)\n    window.setTimeout(() => {\n      setNotificationData(makeNotificationData(false))\n    }, notificationTime + 700)\n  }\n  const spring = useSpring({\n    opacity: isVisible ? 1 : 0\n  })\n  return (\n    <Fragment>\n      {\n        !isOpen ? null :\n        <animated.div className={classes.Notification}\n          style={Object.assign({ backgroundColor: color }, spring)}\n        >\n          {text}\n        </animated.div>\n      }\n    </Fragment>\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { AudioModules } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport PointerLayer, { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\nimport configureSpaceDB from './configureSpaceDB'\nimport setUserAgent from './setUserAgent'\nimport ContextMenus from '../components/ContextMenus/ContextMenus'\nimport ModuleViewFill from '../components/ModuleView/Fill'\nimport RightDrawer from '../components/RightDrawer/RightDrawer'\nimport AudioTags from '../components/AudioTags/AudioTags'\nimport CenterMenus from '../components/CenterMenus/CenterMenus'\nimport Notification from '../components/Notification/Notification'\n\ndeclare global {\n  interface Window { \n    fillContainerID: string\n    audioModules: AudioModules\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.fillContainerID = 'project'\n\nwindow.audioModules = {}\nmakeAddModule()\nconfigureSpaceDB()\nsetUserAgent()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n      <Notification />\n      <ContextMenus />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trash.9d2c8d42.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";"],"sourceRoot":""}