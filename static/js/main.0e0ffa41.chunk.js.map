{"version":3,"sources":["icons/settings.svg","icons/trash.svg","App/style.ts","theme/theme.ts","components/RightDrawer/style.ts","components/RightDrawer/HeaderItem.tsx","audioModules/moduleTypes.ts","components/RightDrawer/ModuleIcons/moduleData.ts","helpers/genFuncs.ts","theme/moduleColor.ts","redux/idGen.ts","components/RightDrawer/DrawerItem.tsx","redux/modules/moduleActionTypes.ts","components/RightDrawer/ModuleIcons/ModuleIcons.tsx","redux/modules/moduleActions.ts","redux/connections/connectionActions.ts","redux/connections/connectionActionTypes.ts","redux/root/rootActions.ts","redux/root/rootActionTypes.ts","audioCtx.ts","audioModules/modules/constant.ts","audioModules/modules/autoFilter.ts","audioModules/modules/output.ts","audioModules/modules/stereoPanner.ts","audioModules/modules/signalDelay.ts","audioModules/modules/kompressor.ts","audioModules/modules/gain.ts","audioModules/modules/oscillator.ts","audioModules/modules/lineInput.ts","audioModules/modules/container.ts","audioModules/modules/distortion.ts","audioModules/modules/analyzer.ts","audioModules/modules/envelopedTrigger.ts","audioModules/restoreAudioModule.ts","audioModules/connection.ts","audioModules/restoreAMFromState.ts","components/RightDrawer/SpaceDBMenu.tsx","components/RightDrawer/FileMenu.tsx","components/RightDrawer/ContainerDrawerItem.tsx","components/RightDrawer/SpaceDBContainerMenu.tsx","components/RightDrawer/RightDrawer.tsx","components/ModuleView/style.ts","components/LargeIcon/style.ts","components/LargeIcon/controls/style.ts","components/LargeIcon/controls/File.tsx","components/LargeIcon/controls/Type.tsx","components/Knob/helpers.ts","components/LargeIcon/controls/Value.tsx","components/LargeIcon/controls/Button.tsx","components/LargeIcon/controls/Switch.tsx","components/LargeIcon/controls/Graph.tsx","components/LargeIcon/controls/Pad.tsx","components/LargeIcon/ControlMenu.tsx","components/LargeIcon/MarkContainerControls.tsx","components/LargeIcon/MarkContainerIO.tsx","components/LargeIcon/ContainerControlMenu.tsx","components/DropSquare/style.ts","redux/helpers.ts","redux/getContainerAsProject.ts","audioModules/mergeExistingAM.ts","redux/replicateContainer.ts","redux/replicateModule.ts","components/DropSquare/callbacks.ts","components/ModuleView/helpers.ts","components/DropSquare/DropSquare.tsx","components/ModuleView/Icon.tsx","components/ModuleView/callbacks.ts","components/ModuleView/Fill.tsx","components/HorizontalScrollDiv/HorizontalScrollDiv.tsx","components/CenterMenus/CenterMenu/style.ts","components/CenterMenus/CenterMenu/CenterMenu.tsx","components/MrTesterr/style.ts","components/MrTesterr/MrTesterr.tsx","components/Button/style.ts","components/Button/Button.tsx","audioModules/modules/mediaElement.ts","components/AudioTags/AudioTag.tsx","components/AudioTags/AudioTags.tsx","components/Switch/style.ts","components/Switch/Switch.tsx","components/Knob/style.ts","components/Knob/StatelessKnob.tsx","components/Knob/Knob.tsx","components/PointerLayer/style.ts","components/PointerLayer/PointerLayer.tsx","components/CenterMenus/makeData.ts","components/CenterMenus/ConnectionMenu/style.ts","components/CenterMenus/ConnectionMenu/IORecursion.tsx","components/CenterMenus/ConnectionMenu/helpers.ts","components/CenterMenus/ConnectionMenu/ConnectionMenu.tsx","components/CenterMenus/RangeSetMenu/style.ts","components/CenterMenus/RangeSetMenu/KnobRangeSetMenu.tsx","components/CenterMenus/SaveMenu/style.ts","components/CenterMenus/SaveMenu/SpaceDBProjectSaveMenu.tsx","components/CenterMenus/ConfirmDeleteMenu/ConfirmDeleteMenu.tsx","components/CenterMenus/SaveMenu/FileSaveMenu.tsx","components/CenterMenus/SaveMenu/helpers.ts","components/CenterMenus/SaveMenu/SpaceDBContainerSaveMenu.tsx","components/CenterMenus/RangeSetMenu/AnalyzerRangeSetMenu.tsx","components/CenterMenus/RenameMenu/style.ts","components/CenterMenus/RenameMenu/RenameMenu.tsx","components/CenterMenus/RenameMenu/RenameModuleMenu.tsx","components/CenterMenus/RenameMenu/RenameControlMenu.tsx","components/CenterMenus/CenterMenus.tsx","components/Notification/makeData.ts","components/Notification/style.ts","components/Notification/Notification.tsx","components/Flex/style.ts","components/Flex/FlexRow.tsx","components/Flex/FlexCol.tsx","audioModules/makeAddModule.ts","components/PointerLayer/makeData.ts","App/configureSpaceDB.ts","App/setUserAgent.ts","components/ContextMenus/makeData.ts","components/ContextMenus/ContextMenu/helpers.ts","components/ContextMenus/ContextMenu/style.ts","components/ContextMenus/ContextMenu/ContextMenu.tsx","components/ContextMenus/Module/style.ts","components/ContextMenus/Module/DeleteButton.tsx","components/ContextMenus/Module/InputOutputView.tsx","components/ContextMenus/Module/ModuleContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","App/App.tsx","serviceWorker.ts","redux/modules/reducers/addModule.ts","redux/modules/reducers/moveModule.ts","redux/modules/reducers/renameModule.ts","redux/modules/reducers/markContainerInput.ts","redux/modules/reducers/unmarkContainerInput.ts","redux/modules/reducers/markContainerOutput.ts","redux/modules/reducers/unmarkContainerOutput.ts","redux/modules/reducers/markContainerControl.ts","redux/modules/reducers/unmarkContainerControl.ts","redux/modules/reducers/renameContainerControl.ts","redux/modules/reducers/updateControlValue.ts","redux/modules/reducers/updateControlRange.ts","redux/modules/moduleReducer.ts","redux/baseContainerID/bcidReducer.ts","redux/baseContainerID/bcidActionTypes.ts","redux/connections/reducers/addConnection.ts","redux/connections/reducers/removeConnection.ts","redux/connections/reducers/removeModule.ts","redux/connections/reducers/mergeContainer.ts","redux/connections/connectionReducer.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","useJSS","createUseStyles","Bounder","backgroundImage","width","height","display","fontSize","color","position","top","left","userSelect","zIndex","overflow","ModuleViewBounder","minWidth","flexDirection","alignItems","justifyContent","colors","sizes","toggleWidth","item","iconGrid","gutterGrid","icon","bigIconWidth","bigIconHeight","large","medium","small","xsmall","xxsmall","size","borderRadius","markerWidth","markerHeight","rotRange","sensitivity","borderWidth","diameter","DrawerBounder","right","Drawer","backgroundColor","DrawerHeader","overflowX","overflowY","DrawerHeaderItem","padding","textDecoration","whiteSpace","cursor","ItemRouter","flexFlow","alignContent","DrawerItem","boxShadow","margin","DrawerIcon","borderColor","borderStyle","marginBottom","DrawerItemText","Toggle","ToggleLine","HeaderItem","className","text","onClick","linkStyle","selectedRoute","style","CONTAINER","VALUE","BUTTON","effectModuleData","sourceModuleData","utilityModuleData","stringIn","str","ar","i","length","bothStringsIn","str1","str2","range","start","stop","out","push","clamp","val","Math","min","max","inRange","mapValBetweenRanges","fromRange","toRange","valProportion","toRangeDif","getModuleColor","moduleType","genRandomID","index","totNumber","floor","random","fullName","shortName","totNumModules","classes","draggable","onDragStart","event","dataTransfer","setData","window","setFillIsExpanded","onDragEnd","ModuleIcons","moduleData","map","modDat","key","addModule","id","name","controlData","parentID","row","col","connectionInputs","connectionOutputs","type","moveModule","newRow","newCol","markContainerControl","modID","controlID","actualModID","unmarkContainerControl","updateControlValue","newValue","updateControlRange","newRange","addConnection","fromID","toID","param","outputIndex","inputIndex","containerOutputChildID","containerInputChildID","removeConnection","connectionID","mergeContainer","containerID","newModules","newConnections","restoreFromState","state","audioCtx","AudioContext","makeConstantSource","prevControlData","constantSource","createConstantSource","offset","value","controlSetFuncs","Number","audioNode","connectingParamIDs","filterTypes","makeAutoFilter","autoFilter","createBiquadFilter","frequency","detune","Q","gain","newType","newFrequency","newDetune","newQ","newGain","typeTypes","makeOutput","resume","masterGain","createGain","connect","destination","arg","suspend","makeStereoPanner","stereoPanner","createStereoPanner","pan","newPan","makeSignalDelay","signalDelay","createDelay","delayTime","newDelayTime","makeKompressor","kompressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","newThreshold","newKnee","newRatio","newAttack","newRelease","makeGain","oscillatorTypes","makeOscillator","oscillator","createOscillator","makeLineInput","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","noiseSuppression","latency","then","stream","lineInput","createMediaStreamSource","channelSplitter","createChannelSplitter","lineInputModule","getAudioTracks","enabled","audioModules","makeContainer","fillContainerID","reRenderFillContainer","makeDistortionCurve","amount","x","k","curve","Float32Array","deg","PI","abs","makeDistortion","distortion","createWaveShaper","newAmount","newOversample","oversample","makeAnalyzer","analyzer","createAnalyser","fftSize","bufferLength","frequencyBinCount","timeArray","makeEnvelopedTrigger","constant","decay","sustain","currTime","currentTime","linearRampToValueAtTime","setTargetAtTime","cancelAndHoldAtTime","restoreAudioModule","osc","output","filter","komp","panner","delay","addAudioTag","reRenderAudioTags","container","envelopedTrigger","fromMod","toMod","alert","disconnect","restoreAMFromState","prevConnections","modules","connections","Object","keys","forEach","actualOutputID","actualInputID","numberRestores","audioTags","toType","fromType","connectLate","numTries","setTimeout","buttonStyle","SpaceDBMenu","fs","useState","saveList","setSaveList","dispatch","useDispatch","useSelector","useEffect","projectSaveService","find","saveNames","openSpaceDBProjectSaveMenu","saveName","get","savedState","openConfirmDeleteMenu","usingElectron","require","FileMenu","folderRef","useRef","current","webkitdirectory","htmlFor","opacity","onChange","e","file","target","files","path","readFile","err","data","newState","JSON","parse","openFileSaveMenu","ContainerDrawerItem","SpaceDBContainerMenu","containerSaves","setContainerSaves","containerSaveService","onDragOver","preventDefault","onDrop","getData","openSpaceDBContainerSaveMenu","containerName","drawerWidth","RightDrawer","open","setOpen","setWidth","drawerSpring","useSpring","transform","config","tension","setSR","drawerRef","toggleRef","drawerHeaderRef","itemRouterRef","vw","document","documentElement","clientWidth","innerWidth","adjusting","toReRender","addEventListener","div","onPointerDown","stopPropagation","ref","shiftKey","setPointerCapture","pointerId","onPointerMove","clientX","onPointerUp","releasePointerCapture","onWheel","scrollLeft","deltaY","FillBounder","FillHeaderBounder","FillHeader","marginLeft","Fill","minHeight","rowGap","columnGap","ArcherContainer","Icon","IconControlContainer","maxHeight","justifySelf","ArcherElement","gridTemplateRows","gridTemplateColumns","IconName","IconConnector","alignSelf","flexShrink","MenuHeader","ControlBounder","ControlMenu","ControlTypeSelect","maxWidth","textAlign","ControlInput","Pad","File","setFunc","reRenderIcon","modName","label","URL","createObjectURL","srcName","overflowWrap","wordWrap","hyphens","Type","audioModule","getRotation","makeValString","roundedNumString","toString","slice","ValueControl","displayModName","currRange","inputVal","setInputVal","initValue","onEveryChange","newVal","onSettingsClick","openKnobRangeSetMenu","ButtonControl","SwitchControl","initState","onSwitch","Graph","yRange","zero","setup","p5","canvasParentRef","createCanvas","parent","CENTER","fill","draw","getFloatTimeDomainData","xStep","background","currX","currY","stroke","strokeWeight","nextX","nextY","line","zeroXStep","openAnalyzerRangeSetMenu","PadControl","onPointerCancel","selectedModule","controlType","Value","Button","Switch","MarkContainerControls","marginTop","containerControls","control","containerControl","markedToContainer","isMarked","nowMarked","openControlRenameMenu","switchStyle","MarkContainerIO","baseContainerID","isContainerInput","unmarkContainerInput","isContainerOutput","unmarkContainerOutput","ContainerControlMenu","DropSquare","filterOutFromObj","obj","idsToFilterOut","fromEntries","entries","entry","keepOnlyIdsInObj","idsToKeep","ObjFrom2Arrays","getChildrenRecursive","childIDs","childModules","containerChildIDs","getInternalConnectionIDs","trimmedIDs","allConnectionIDs","connectionIDs","getInternalConnections","getContainerModulesConnections","mergeExistingContainerAM","getReplicatedState","totNumberModules","totNumberConnections","modIDs","modIDConverter","connectionIDConverter","values","containerMod","inputs","outputs","outputID","inputID","connection","undefined","performContainerMerge","modulesToMerge","connectionsToMerge","duplicateModule","newID","setHL","currentChildren","possiblyMod","possiblyOccupyingID","mod","isOccupied","fromRow","fromCol","refreshArcherContainer","moduleDragType","MOVE","COPY","duplicateContainer","dropType","isHL","dsStyle","gridColumn","gridRow","onDragEnter","types","onDragLeave","ModuleViewIcon","gridCol","isLarge","setLarge","reRender","iconStyle","archerElementStyle","nameSpring","openConnectionMenu","iconOnDrop","iconOnDragStart","onContextMenu","persist","openModuleContextMenu","openModuleRenameMenu","relations","targetId","targetAnchor","sourceAnchor","strokeColor","ModuleViewFill","isExpanded","setIsExpanded","gridStyle","containerModule","maxRow","maxCol","moduleID","getGridRange","isEmpty","archerContainerRef","refreshScreen","svgContainerStyle","strokeWidth","arrowLength","flat","HorizontalScrollDiv","CenterMenuBounder","CenterMenu","border","Header","children","header","onClose","TestingArea","ButtonDiv","MrTesterr","onKeyDown","makeMediaElement","audioRef","url","src","pause","play","createMediaElementSource","AudioTag","possiblyMediaElement","autoPlay","AudioTags","ids","SwitchSVG","fullWidth","fullHeight","rectWidth","rectHeight","rectX","circleCY","isSwitched","setSwitched","spring","cx","y","rx","ry","circle","cy","r","KnobContainer","placeItems","KnobSVG","KnobText","InteractionLayer","SettingsButton","placeSelf","justClicked","StatelessKnob","svgRef","scale","tempVal","textRef","movementY","onBlur","keyCode","blur","title","placeholder","focus","openPointerLayer","settingsSVG","alt","Knob","PointerLayer","pointerLayerData","resetPointerLayerData","pointerLayerRef","makeConnectionMenuData","isOpen","makeKnobRangeSetMenuData","onChangeSubmit","makeAnalyzerRangeSetMenuData","makeSaveMenuData","makeContainerSaveMenuData","makeConfirmDeleteMenuData","makeRenameControlMenuData","parentModID","IORecursionBounder","IORecursionInnerBounder","IORecursion","isOutput","setConnection","isContainer","io","ioID","connectionExists","actualToID","newParam","ConnectionMenu","am","setOutputIndex","setInputIndex","actualFromID","setActualFromID","setActualToID","isFromContainer","isToContainer","initMenu","openMenu","setOpenMenu","actualIOID","ioIndex","paramID","CMInputBounder","CenterMenuInput","KnobRangeSetMenu","maxRange","setMin","setMax","SpaceDBProjectSaveMenu","setSaveName","message","confirmSaveData","setConfirmSaveData","inputRef","create","res","flashNotification","autoFocus","marginRight","update","ConfirmDeleteMenu","remove","confirmContainerSaveName","success","currentSaveDirectory","FileSaveMenu","initName","currentDirectory","setCurrentDirectory","goodDir","badDir","getFileDirectory","writeFile","stringify","SpaceDBContainerSaveMenu","setName","AnalyzerRangeSetMenu","InputSubmit","Error","RenameMenu","onSubmit","setVal","isTooShort","setIsTooShort","trySubmit","RenameModuleMenu","toRenameID","newName","renameModule","RenameControlMenu","renameContainerControl","CenterMenus","connectionMenuData","setConnectionMenuData","renameModuleMenuData","setRenameModuleMenuData","renameControlMenuData","setRenameControlMenuData","knobRangeSetMenuData","setKnobRangeSetMenuData","analyzerRangeSetMenuData","setAnalyzerRangeSetMenuData","spaceDBProjectSaveMenuData","setSpaceDBProjectSaveMenuData","spaceDBContainerSaveMenuData","setSpaceDBContainerSaveMenuData","confirmDeleteMenuData","setConfirmDeleteMenuData","fileSaveMenuData","setFileSaveMenuData","makeNotificationData","Notification","setNotificationData","isVisible","setIsVisible","notificationTime","assign","FlexRow","FlexCol","makeAddModule","oscControlData","gainControlData","outputControlData","filterControlData","sampleRate","kompControlData","pannerControlData","delayControlData","constantControlData","mediaControlData","containerControlData","distortionControlData","analyzerControlData","envelopedTriggerControlData","makePointerLayerData","configureSpaceDB","spaceDB","feathers","restClient","rest","configure","fetch","service","setUserAgent","userAgent","toLowerCase","indexOf","makeModuleCMData","getLocation","innerHeight","pageY","offsetHeight","pageX","offsetWidth","ContextMenu","MenuItem","cmRef","location","setLocation","DeleteButtonBounder","DeleteButtonSVG","Connection","DeleteButton","inputData","outputData","trashSVG","InputOutputView","ModuleContextMenu","ContextMenus","moduleCMData","setModuleCMData","App","setPointerLayerData","Boolean","hostname","match","toContainerControls","isBaseContainer","renameContainer","markContainerInput","markContainerOutput","moduleReducer","action","addModuleReducer","moveModuleReducer","renameModuleReducer","markContainerInputReducer","unmarkContainerInputReducer","markContainerOutputReducer","unmarkContainerOutputReducer","markContainerControlReducer","unmarkContainerControlReducer","updateControlValueReducer","updateControlRangeReducer","renameContainerControlReducer","bcidReducer","removeModule","toTrimModIDs","getContainerIDs","toTrimConnectionIDs","trimmedModules","childID","connectionReducer","combinedModuleConnectionReducer","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0e0ffa41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.9d2c8d42.svg\";","import { createUseStyles } from 'react-jss'\n//import { colors } from '../theme/theme'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    //backgroundColor: colors.grey,\n    backgroundImage: 'url(https://media.wired.com/photos/5a593a7ff11e325008172bc2/master/pass/pulsar-831502910.jpg)',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    fontSize: 'calc(20px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: '-1',\n    overflow: 'hidden',\n  },\n\n  ModuleViewBounder: {\n    minWidth: '60vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    zIndex: 0,\n    overflow: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n  }\n})\n\nexport default useJSS","import { Colors, Sizes } from './types'\n\nconst grey = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport const colors: Colors = {\n  grey: grey,\n  secondary: secondary,\n  tertiary: tertiary,\n\n  rightDrawer: '#0000009e',\n  drawerToggle: '#00347d',\n  drawerToggleLine: '#001b40',\n\n  centerMenu: 'black',\n\n  fillModule: '#c0c0c038',\n  module: '#37538a',\n\n  text: 'white',\n  selectedText: '#007ab3',\n\n  dropSquareHL: 'white',\n\n  defaultButton: 'black',\n  deleteButton: '#cc00006e',\n  deleteButtonText: 'white',\n\n  errorBackground: '#cc0000',\n\n  outputConnector: 'red',\n\n  controlMenuButton: '#3b3b3b94',\n\n  //knob: '#ffffffa3',\n  knob: '#0000009e',\n  knobText: 'white',\n  knobBorder: '#cc00006e',\n  knobMarker: 'white',\n\n  // connection menu\n  connectableName: 'white',\n  expandableName: '#85adad',\n\n  // module colors\n\n  sourceModuleBG: '#028174',\n  //sourceModuleKnob\n\n  effectsModuleBG: '#7D1551',\n  //effectsModukeKnob\n\n  containerModuleBG: '#4C4141',\n  //container knob magic tricks\n\n  outputModuleBG: '#CA5F3C',\n\n  analyzerModuleBG: '#00347D',\n\n  confirmButton: '#00802da6',\n  denyButton: '#cc00006e',\n\n  // Context menu\n  contextMenuItemBorder: 'black',\n  contextMenuBackground: '#08101deb',\n}\n\nexport const sizes: Sizes = {\n  rightDrawer: {\n    width: '400px',\n    toggleWidth: '2vmin',\n    item: '9vmin',\n  },\n  moduleView: {\n    iconGrid: '12vmin',\n    gutterGrid: '6vmin',\n    icon: '10vmin',\n    bigIconWidth: '25vmin',\n    bigIconHeight: '35vmin',\n  },\n  text: {\n    large: 'calc(25px + 2.8vmin)',\n    medium: 'calc(20px + 2.4vmin)',\n    small: 'calc(12px + 1.2vmin)',\n    xsmall: 'calc(8px + 1vmin)',\n    xxsmall: 'calc(7px + .8vmin)',\n  },\n  connector: {\n    size: '2.5vmin',\n    borderRadius: '1.5vmin'\n  },\n  knob: {\n    size: 7, // converted to vmin in knob\n    markerWidth: .5,\n    markerHeight: 1.3,\n    rotRange: [-150, 150], // in degrees\n    sensitivity: 1,\n    borderWidth: 8,\n  },\n  switch: {\n    diameter: 3 // in vmin\n  },\n}","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DrawerBounder: {\n    //backgroundColor: colors.rightDrawer,\n    width: '0px',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    userSelect: 'none',\n    zIndex: 10,\n  },\n\n  Drawer: {\n    backgroundColor: colors.rightDrawer,\n    height: '100vh',\n    width: sizes.rightDrawer.width,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n    //overflow: 'hidden',\n  },\n\n  // header\n\n  DrawerHeader: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: 'inherit',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    '&::-webkit-scrollbar': {\n      height: '3px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  DrawerHeaderItem: {\n    fontSize: sizes.text.medium,\n    padding: '1vmin 1.5vmin',\n    color: colors.text,\n    textDecoration: 'none',\n    whiteSpace: 'nowrap',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  ItemRouter: {\n    width: sizes.rightDrawer.width,\n    height: 'calc(100% - 60px)',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  // Drawer items\n\n  DrawerItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: '10px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    margin: '3vmin',\n  },\n\n  DrawerIcon: {\n    backgroundColor: colors.grey,\n    borderColor: colors.grey,\n    borderStyle: 'solid',\n    width: sizes.rightDrawer.item,\n    height: sizes.rightDrawer.item,\n    borderRadius: '1.5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    marginBottom: '1.5vmin',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n  },\n\n  DrawerItemText: {\n    fontSize: sizes.text.small,\n  },\n\n  // toggle\n\n  Toggle: {\n    backgroundColor: colors.drawerToggle,\n    width: sizes.rightDrawer.toggleWidth,\n    zIndex: 10,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    position: 'absolute',\n    top: '0px',\n    right: sizes.rightDrawer.width,\n  },\n\n  ToggleLine: {\n    backgroundColor: colors.drawerToggleLine,\n    borderRadius: '4px',\n    width: '0.75vmin',\n    height: '80px',\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport { colors } from '../../theme/theme'\n\ninterface Props {\n  className: string\n  text: string\n  onClick: () => void\n  selectedRoute: string\n}\n\nfunction HeaderItem({ className, text, onClick, selectedRoute }: Props) {\n  const linkStyle = {\n    color: (selectedRoute === text) ? colors.selectedText : colors.text,\n  }\n  return (\n    <div className={className} onClick={onClick} style={linkStyle}>\n      {text}\n    </div>\n  )\n}\n\nexport default HeaderItem","import { OscillatorModule } from './modules/oscillator'\nimport { GainModule } from './modules/gain'\nimport { OutputModule } from './modules/output'\nimport { AutoFilterModule } from './modules/autoFilter'\nimport { KompressorModule } from './modules/kompressor'\nimport { StereoPannerModule } from './modules/stereoPanner'\nimport { SignalDelayModule } from './modules/signalDelay'\nimport { ConstantModule } from './modules/constant'\nimport { MediaElementModule } from './modules/mediaElement'\nimport { LineInputModule } from './modules/lineInput'\nimport { ContainerModule } from './modules/container'\nimport { DistortionModule } from './modules/distortion'\nimport { AnalyzerModule } from './modules/analyzer'\n\n// module types\n\nexport const GAIN = 'GAIN'\nexport const OSCILLATOR = 'OSCILLATOR'\nexport const OUTPUT = 'OUTPUT'\nexport const AUTOFILTER = 'AUTOFILTER'\nexport const KOMPRESSOR = 'KOMPRESSOR'\nexport const STEREO_PANNER = 'STEREO_PANNER'\nexport const SIGNAL_DELAY = 'SIGNAL_DELAY'\nexport const CONSTANT = 'CONSTANT'\nexport const MEDIA_ELEMENT = 'MEDIA_ELEMENT'\nexport const LINE_IN = 'LINE_IN'\nexport const CONTAINER = 'CONTAINER'\nexport const DISTORTION = 'DISTORTION'\nexport const ANALYZER = 'ANALYZER'\nexport const ENVELOPED_TRIGGER = 'ENVELOPED_TRIGGER'\n\nexport type ModuleType = 'OSCILLATOR' | 'CONTAINER' | 'OUTPUT' | 'GAIN' | 'AUTOFILTER' | 'KOMPRESSOR' | 'STEREO_PANNER' | 'SIGNAL_DELAY' | 'CONSTANT' | 'MEDIA_ELEMENT' | 'LINE_IN' | 'DISTORTION' | 'ANALYZER' | 'ENVELOPED_TRIGGER'\n\nexport type AudioModuleWithTypes = OscillatorModule | AutoFilterModule\n\nexport type ConnectingAudioModule = OscillatorModule | GainModule | AutoFilterModule | KompressorModule | StereoPannerModule | SignalDelayModule | ConstantModule | MediaElementModule | LineInputModule | OutputModule | DistortionModule | AnalyzerModule\n\nexport type AudioModule = ConnectingAudioModule | ContainerModule\n\nexport interface AudioModules {\n  [index: string]: AudioModule\n}\n\n// control types\n\nexport const TYPE = 'TYPE'\nexport const VALUE = 'VALUE'\nexport const BUTTON = 'BUTTON'\nexport const FILE = 'FILE'\nexport const INFO = 'INFO'\nexport const SWITCH = 'SWITCH'\nexport const GRAPH = 'GRAPH'\nexport const PAD = 'PAD'\n\nexport type ControlType = 'TYPE' | 'VALUE' | 'BUTTON' | 'FILE' | 'INFO' | 'SWITCH' | 'GRAPH' | 'PAD'\nexport type Value = number | string | boolean\nexport type SetFunc = (arg: string) => void\nexport type Range = [number, number] // min / max\n\nexport interface ControlDataPacket {\n  controlType: ControlType\n  paramID?: string\n  value?: Value // need either paramID or value\n  range?: Range\n  maxRange?: Range // the max the range can be set to be\n  markedToContainer?: boolean\n}\n\nexport interface ControlData {\n  [controlID: string]: ControlDataPacket\n}\n\nexport interface ControlSetFuncs {\n  [controlID: string]: SetFunc\n}\n\nexport interface BaseAM {\n  connectingParamIDs: string[]\n  controlSetFuncs: ControlSetFuncs\n}\n\n\n","import { GAIN, AUTOFILTER, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, MEDIA_ELEMENT, LINE_IN, OSCILLATOR, CONSTANT, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER } from \"../../../audioModules/moduleTypes\";\n\nexport type DrawerModuleData = [string, string, string][]\n\nexport const effectModuleData: DrawerModuleData = [\n  ['gain', 'gain', GAIN], // fullname, id, moduleType\n  ['filter', 'filter', AUTOFILTER],\n  ['kompressor', 'komp', KOMPRESSOR],\n  ['signal delay', 'delay', SIGNAL_DELAY],\n  ['stereo panner', 'pan', STEREO_PANNER],\n  ['distortion', 'dist', DISTORTION],\n]\n\nexport const sourceModuleData: DrawerModuleData = [\n  ['file', 'file', MEDIA_ELEMENT],\n  ['stream', 'stream', LINE_IN],\n  ['oscillator', 'osc', OSCILLATOR],\n  ['constant', 'const', CONSTANT],\n  ['enveloped pad', 'env', ENVELOPED_TRIGGER],\n]\n\nexport const utilityModuleData: DrawerModuleData = [\n  ['container', 'cntnr', CONTAINER],\n  ['output', 'out', OUTPUT],\n  ['analyzer', 'analyzer', ANALYZER]\n]","export function stringIn(str: string, ar: any[]) {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function allStringsIn(strings: string[], ar: any[]) {\n\tfor (var i = 0; i < strings.length; i++) {\n\t\tif (!stringIn(strings[i], ar)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function range(start: number, stop: number) {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = []\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i)\n\t}\n\treturn out\n}\n\nexport function clamp(val: number, range: [number, number]) {\n\treturn Math.min(range[1], Math.max(range[0], val))\n}\n\nexport function inRange(val: number, range: [number, number]) {\n\treturn val >= range[0] && val <= range[1] \n}\n\nexport function mapValBetweenRanges(val: number, fromRange: [number, number], toRange: [number, number]) {\n\tconst valProportion = (val - fromRange[0]) / (fromRange[1] - fromRange[0])\n\tconst toRangeDif = toRange[1] - toRange[0]\n\treturn toRange[0] + valProportion * toRangeDif\n}","import { colors } from './theme'\nimport { LINE_IN, OSCILLATOR, MEDIA_ELEMENT, CONSTANT, AUTOFILTER, GAIN, KOMPRESSOR, SIGNAL_DELAY, STEREO_PANNER, CONTAINER, OUTPUT, DISTORTION, ANALYZER, ENVELOPED_TRIGGER } from '../audioModules/moduleTypes'\n\nfunction getModuleColor(moduleType: string) {\n\n  switch (moduleType) {\n\n    // sources\n    case LINE_IN: return colors.sourceModuleBG \n    case OSCILLATOR: return colors.sourceModuleBG \n    case MEDIA_ELEMENT: return colors.sourceModuleBG \n    case CONSTANT: return colors.sourceModuleBG\n    case ENVELOPED_TRIGGER: return colors.sourceModuleBG\n\n    // effects \n    case GAIN: return colors.effectsModuleBG\n    case AUTOFILTER: return colors.effectsModuleBG\n    case KOMPRESSOR: return colors.effectsModuleBG\n    case SIGNAL_DELAY: return colors.effectsModuleBG\n    case STEREO_PANNER: return colors.effectsModuleBG\n    case DISTORTION: return colors.effectsModuleBG\n\n    // utility\n    case CONTAINER: return colors.containerModuleBG\n    case OUTPUT: return colors.outputModuleBG\n    case ANALYZER: return colors.analyzerModuleBG\n  }\n}\n\nexport default getModuleColor ","function genRandomID(index: number, totNumber: number) {\n  return `${totNumber}${index}${Math.floor(20480 * Math.random())}`\n}\n\nexport default genRandomID","import React from 'react'\nimport useJSS from './style'\nimport getModuleColor from '../../theme/moduleColor'\nimport { ADD_MODULE } from '../../redux/modules/moduleActionTypes'\nimport genRandomID from '../../redux/idGen'\n\n\ninterface Props {\n  fullName: string\n  shortName: string\n  moduleType: string\n  totNumModules: number\n}\n\nfunction DrawerItem({ fullName, shortName, moduleType, totNumModules }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.DrawerItem}>\n      <div \n        className={classes.DrawerIcon}\n        style={{ backgroundColor: getModuleColor(moduleType) }}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData('type', ADD_MODULE)\n          event.dataTransfer.setData('id', genRandomID(0, totNumModules))\n          event.dataTransfer.setData('moduleType', moduleType)\n          event.dataTransfer.setData('name', shortName)\n          window.setFillIsExpanded(true)\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {fullName}\n      </div>\n    </div>\n  )\n}\n\nexport default DrawerItem","export const ADD_MODULE = 'ADD_MODULE'\nexport const MOVE_MODULE = 'MOVE_MODULE'\nexport const RENAME_MODULE = 'RENAME_MODULE'\nexport const MARK_CONTAINER_INPUT = 'MARK_CONTAINER_INPUT'\nexport const UNMARK_CONTAINER_INPUT = 'UNMARK_CONTAINER_INPUT'\nexport const MARK_CONTAINER_OUTPUT = 'MARK_CONTAINER_OUTPUT'\nexport const UNMARK_CONTAINER_OUTPUT = 'UNMARK_CONTAINER_OUTPUT'\nexport const MARK_CONTAINER_CONTROL = 'MARK_CONTAINER_CONTROL'\nexport const UNMARK_CONTAINER_CONTROL = 'UNMARK_CONTAINER_CONTROL'\nexport const RENAME_CONTAINER_CONTROL = 'RENAME_CONTAINER_CONTROL'\nexport const UPDATE_CONTROL_VALUE = 'UPDATE_CONTROL_DATA'\nexport const UPDATE_CONTROL_RANGE = 'UPDATE_CONTROL_RANGE'","import React, { Fragment } from 'react'\nimport DrawerItem from '../DrawerItem'\nimport { DrawerModuleData } from './moduleData'\n\ninterface Props {\n  moduleData: DrawerModuleData\n  totNumModules: number\n}\n\nfunction ModuleIcons({ moduleData, totNumModules }: Props) {\n  return (\n    <Fragment>\n      {moduleData.map((modDat, index) => {\n        return (\n          <DrawerItem fullName={modDat[0]} shortName={modDat[1]} moduleType={ modDat[2]} totNumModules={totNumModules} key={index}/>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default ModuleIcons","import { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE,\n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { ModuleType, ControlData, Range, Value } from '../../audioModules/moduleTypes'\nimport { AddModuleAction, MoveModuleAction, RenameModuleAction, MarkContainerIOAction, MarkContainerControlAction, UpdateControlValueAction, UpdateControlRangeAction, RenameContainerControlAction } from './moduleTSTypes'\n\nexport const addModule = (id: string, name: string, moduleType: ModuleType, controlData: ControlData, parentID: string, row: number, col: number, connectionInputs: string[], connectionOutputs: string[]): AddModuleAction => {\n  return {\n    type: ADD_MODULE,\n    moduleType,\n    id,\n    name,\n    controlData,\n    row,\n    col,\n    parentID,\n    connectionInputs,\n    connectionOutputs,\n  }\n}\n\nexport const moveModule = (id: string, newRow: number, newCol: number): MoveModuleAction => {\n  return {\n    type: MOVE_MODULE,\n    id,\n    newRow,\n    newCol,\n  }\n}\n\nexport const renameModule = (id: string, newName: string): RenameModuleAction => {\n  return {\n    type: RENAME_MODULE,\n    id,\n    newName,\n  }\n}\n\nexport const markContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_INPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerInput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_INPUT,\n    id,\n  }\n}\nexport const markContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: MARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const unmarkContainerOutput = (id: string): MarkContainerIOAction => {\n  return {\n    type: UNMARK_CONTAINER_OUTPUT,\n    id,\n  }\n}\n\nexport const markContainerControl = (modID: string, controlID: string, actualModID: string, name?: string): MarkContainerControlAction => {\n  return {\n    type: MARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n    name,\n  }\n}\n\nexport const renameContainerControl = (name: string, parentModID: string, modID: string, controlID: string, actualModID: string): RenameContainerControlAction => {\n  return {\n    type: RENAME_CONTAINER_CONTROL,\n    name,\n    parentModID,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const unmarkContainerControl = (modID: string, controlID: string, actualModID: string): MarkContainerControlAction => {\n  return {\n    type: UNMARK_CONTAINER_CONTROL,\n    modID,\n    controlID,\n    actualModID,\n  }\n}\n\nexport const updateControlValue = (modID: string, controlID: string, newValue: Value): UpdateControlValueAction => {\n  return {\n    type: UPDATE_CONTROL_VALUE,\n    modID,\n    controlID,\n    newValue,\n  }\n}\n\nexport const updateControlRange = (modID: string, controlID: string, newRange: Range): UpdateControlRangeAction => {\n  return {\n    type: UPDATE_CONTROL_RANGE,\n    modID,\n    controlID,\n    newRange,\n  }\n}","import { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport { AddConnectionAction, RemoveConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { Modules, Connections } from \"../stateTSTypes\"\n\nexport const addConnection = (fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, containerOutputChildID?: string, containerInputChildID?: string): AddConnectionAction => {\n  return {\n    type: ADD_CONNECTION,\n    fromID,\n    toID,\n    param,\n    outputIndex,\n    inputIndex,\n    containerOutputChildID,\n    containerInputChildID,\n  }\n}\n\nexport const removeConnection = (connectionID: string): RemoveConnectionAction => {\n  return {\n    type: REMOVE_CONNECTION,\n    connectionID,\n  }\n}\n\nexport const removeModule = (id: string): RemoveModuleAction => {\n  return {\n    type: REMOVE_MODULE,\n    id,\n  }\n}\n\nexport const mergeContainer = (containerID: string, newModules: Modules, newConnections: Connections, parentID: string, row: number, col: number): MergeContainerAction => {\n  return {\n    type: MERGE_CONTAINER,\n    containerID,\n    newModules,\n    newConnections,\n    parentID,\n    row,\n    col,\n  }\n}","export const ADD_CONNECTION = 'ADD_CONNECTION'\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION'\nexport const REMOVE_MODULE = 'REMOVE_MODULE'\nexport const MERGE_CONTAINER = 'MERGE_CONTAINER'\n","import { RESTORE_FROM_STATE } from \"./rootActionTypes\";\nimport { RootState } from \"../stateTSTypes\";\nimport { RestoreFromStateAction } from \"./rootActionTSTypes\";\n\nexport function restoreFromState(state: RootState): RestoreFromStateAction {\n  return {\n    type: RESTORE_FROM_STATE,\n    state,\n  }\n}","export const RESTORE_FROM_STATE = 'RESTORE_FROM_STATE'","const AudioContext = window.AudioContext\nconst audioCtx = new AudioContext()\nexport default audioCtx","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, BUTTON } from '../moduleTypes'\n\nexport interface ConstantModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeConstantControlData(): ControlData {\n  return {\n    'value': {\n      controlType: VALUE,\n      paramID: 'offset',\n      value: 0,\n      range: [-100, 100],\n    },\n    'kill': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  }\n}\n\n\nfunction makeConstantSource(prevControlData?: ControlData): ConstantModule {\n  const constantSource = audioCtx.createConstantSource()\n  constantSource.offset.value = prevControlData ? prevControlData['value'].value as number : 0\n\n  const connectingParamIDs = ['offset']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'value': (newValue: string) => { constantSource.offset.value = Number(newValue) },\n    'kill': (arg = '') => { constantSource.stop() }\n  }\n\n  constantSource.start()\n\n  return {\n    audioNode: constantSource,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeConstantSource","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface AutoFilterModule extends BaseAM {\n  audioNode: BiquadFilterNode\n  typeTypes: string[]\n}\n\nconst filterTypes = ['lowpass', 'lowshelf', 'highpass', 'highshelf', 'allpass', 'bandpass', 'notch', 'peaking']\nconst connectingParamIDs = ['frequency', 'detune', 'Q', 'gain']\n\nexport function makeFilterControlData(autoFilter: BiquadFilterNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: autoFilter.type\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: autoFilter.frequency.value,\n      range: [0, audioCtx.sampleRate / 2],\n      maxRange: [0, audioCtx.sampleRate / 2]\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: autoFilter.detune.value,\n      range: [-50, 50],\n      maxRange: [-153600, 153600]\n    },\n    'Q': {\n      controlType: VALUE,\n      paramID: 'Q',\n      value: autoFilter.Q.value,\n      range: [0.0001, 1000],\n      maxRange: [0.0001, 1000],\n    },\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: autoFilter.gain.value,\n      range: [-40, 40],\n      maxRange: [-40, 40],\n    },\n  }\n}\n\nfunction makeAutoFilter (prevControlData?: ControlData): AutoFilterModule {\n  const autoFilter = audioCtx.createBiquadFilter()\n\n  if (prevControlData) {\n    autoFilter.type = prevControlData['set type'].value as BiquadFilterType\n    autoFilter.frequency.value = prevControlData['frequency'].value as number\n    autoFilter.detune.value = prevControlData['detune'].value as number\n    autoFilter.Q.value = prevControlData['Q'].value as number\n    autoFilter.gain.value = prevControlData['gain'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { autoFilter.type = newType as BiquadFilterType},\n    'frequency': (newFrequency: string) => { \n      autoFilter.frequency.value = Number(newFrequency) \n    },\n    'detune': (newDetune: string) => { \n      autoFilter.detune.value = Number(newDetune) \n    },\n    'Q': (newQ: string) => { \n      autoFilter.Q.value = Number(newQ) \n    },\n    'gain': (newGain: string) => {\n      autoFilter.gain.value = Number(newGain)\n    },\n  }\n\n  return {\n    audioNode: autoFilter,\n    typeTypes: filterTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeAutoFilter","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, BUTTON, VALUE } from '../moduleTypes'\n\nexport interface OutputModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeOutputControlData(): ControlData {\n  return {\n    'master gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 20],\n    },\n    'resume': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    },\n    'suspend': {\n      controlType: BUTTON,\n      paramID: 'n/a'\n    }\n  }\n}\n\nfunction makeOutput(prevControlData?: ControlData): OutputModule {\n  audioCtx.resume()\n\n  const masterGain = audioCtx.createGain()\n  masterGain.connect(audioCtx.destination)\n\n  if (prevControlData) {\n    masterGain.gain.value = prevControlData['master gain'].value as number\n  } else {\n    masterGain.gain.value = 1\n  }\n\n  const controlSetFuncs = {\n    'master gain': (arg: string) => {\n      masterGain.gain.value = Number(arg)\n    },\n    'resume': (arg: string) => { audioCtx.resume() },\n    'suspend': (arg: string) => { audioCtx.suspend() }\n  }\n\n  return {\n    audioNode: masterGain,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeOutput","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE} from '../moduleTypes'\n\nexport interface StereoPannerModule extends BaseAM {\n  audioNode: StereoPannerNode\n}\n\nexport function makePannerControlData(): ControlData {\n  return {\n    'pan': {\n      controlType: VALUE,\n      paramID: 'pan',\n      value: 0,\n      range: [-1, 1],\n      maxRange: [-1, 1],\n    }\n  }\n}\n\nfunction makeStereoPanner(prevControlData?: ControlData): StereoPannerModule {\n  const stereoPanner = audioCtx.createStereoPanner()\n\n  const connectingParamIDs = ['pan']\n\n  if (prevControlData) {\n    stereoPanner.pan.value = prevControlData['pan'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'pan': (newPan: string) => {\n      stereoPanner.pan.value = Number(newPan)\n    }\n  }\n\n  return {\n    audioNode: stereoPanner,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n\n}\n\nexport default makeStereoPanner","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface SignalDelayModule extends BaseAM {\n  audioNode: DelayNode\n}\n\nexport function makeDelayControlData(): ControlData {\n  return {\n    'delay time': {\n      controlType: VALUE,\n      paramID: 'delayTime',\n      value: 0,\n      range: [0, 2],\n      maxRange: [0, 60],\n    }\n  }\n}\n\nfunction makeSignalDelay(prevControlData?: ControlData): SignalDelayModule {\n  const signalDelay = audioCtx.createDelay(60)\n\n  if (prevControlData) {\n    signalDelay.delayTime.value = prevControlData['delay time'].value as number\n  }\n\n  const connectingParamIDs = ['delayTime']\n\n  const controlSetFuncs: ControlSetFuncs = { \n    'delay time': (newDelayTime: string) => {\n      signalDelay.delayTime.value = Number(newDelayTime)\n    }\n  }\n\n  return {\n    audioNode: signalDelay,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeSignalDelay","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface KompressorModule extends BaseAM {\n  audioNode: DynamicsCompressorNode\n}\n\nexport function makeKompControlData(kompressor: DynamicsCompressorNode): ControlData {\n  return {\n    'threshold': {\n      controlType: VALUE,\n      paramID: 'threshold',\n      value: kompressor.threshold.value,\n      range: [-100, 0],\n      maxRange: [-100, 0],\n    },\n    'knee': {\n      controlType: VALUE,\n      paramID: 'knee',\n      value: kompressor.knee.value,\n      range: [0, 40],\n      maxRange: [0, 40],\n    },\n    'ratio': {\n      controlType: VALUE,\n      paramID: 'ratio',\n      value: kompressor.ratio.value,\n      range: [1, 20],\n      maxRange: [1, 20],\n    },\n    'attack': {\n      controlType: VALUE,\n      paramID: 'attack',\n      value: kompressor.attack.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    },\n    'release': {\n      controlType: VALUE,\n      paramID: 'release',\n      value: kompressor.release.value,\n      range: [0, 1],\n      maxRange: [0, 1],\n    }\n  }\n}\n\nfunction makeKompressor(prevControlData?: ControlData): KompressorModule {\n  const kompressor = audioCtx.createDynamicsCompressor()\n\n  const connectingParamIDs = ['threshold', 'knee', 'ratio', 'attack', 'release']\n\n  if (prevControlData) {\n    kompressor.threshold.value = prevControlData['threshold'].value as number\n    kompressor.knee.value = prevControlData['knee'].value as number\n    kompressor.ratio.value = prevControlData['ratio'].value as number\n    kompressor.attack.value = prevControlData['attack'].value as number\n    kompressor.release.value = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'threshold': (newThreshold: string) => { \n      kompressor.threshold.value = Number(newThreshold) \n    },\n    'knee': (newKnee: string) => { \n      kompressor.knee.value = Number(newKnee) \n    },\n    'ratio': (newRatio: string) => { \n      kompressor.ratio.value = Number(newRatio) \n    },\n    'attack': (newAttack: string) => { \n      kompressor.attack.value = Number(newAttack)\n    },\n    'release': (newRelease: string) => { \n      kompressor.release.value = Number(newRelease) \n    },\n  }\n\n  return {\n    audioNode: kompressor,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeKompressor","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE } from '../moduleTypes'\n\nexport interface GainModule extends BaseAM {\n  audioNode: GainNode\n}\n\nexport function makeGainControlData(): ControlData {\n  return {\n    'gain': {\n      controlType: VALUE,\n      paramID: 'gain',\n      value: 0,\n      range: [0, 1],\n    }\n  }\n}\n\nfunction makeGain(prevControlData?: ControlData): GainModule {\n  const gain = audioCtx.createGain()\n  gain.gain.value = prevControlData ? prevControlData['gain'].value as number : 0\n\n  const connectingParamIDs = ['gain']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'gain': (newGain: string) => {\n      gain.gain.value = Number(newGain)\n    },\n  }\n  \n  return {\n    audioNode: gain,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n}\n\nexport default makeGain","import audioCtx from '../../audioCtx'\nimport { BaseAM, ControlData, ControlSetFuncs, VALUE, TYPE } from '../moduleTypes'\n\nexport interface OscillatorModule extends BaseAM {\n  audioNode: OscillatorNode\n  typeTypes: string[]\n}\n\nexport function makeOscControlData(oscillator: OscillatorNode): ControlData {\n  return {\n    'set type': {\n      controlType: TYPE,\n      paramID: 'type',\n      value: oscillator.type,\n    },\n    'frequency': {\n      controlType: VALUE,\n      paramID: 'frequency',\n      value: oscillator.frequency.value,\n      range: [0, 440],\n    },\n    'detune': {\n      controlType: VALUE,\n      paramID: 'detune',\n      value: oscillator.detune.value,\n      range: [-50, 50],\n    }\n  }\n}\n\nconst oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\nfunction makeOscillator(prevControlData?: ControlData): OscillatorModule {\n  const oscillator = audioCtx.createOscillator()\n   \n  if (prevControlData) {\n    oscillator.type = prevControlData['set type'].value as OscillatorType\n    oscillator.frequency.value = prevControlData['frequency'].value as number\n    oscillator.detune.value = prevControlData['detune'].value as number \n  }\n\n  const connectingParamIDs = ['frequency', 'detune']\n\n  const controlSetFuncs: ControlSetFuncs = {\n    'set type': (newType: string) => { oscillator.type = newType as OscillatorType },\n    'frequency': (newFrequency: string) => {\n      oscillator.frequency.value = Number(newFrequency)\n    },\n    'detune': (newDetune: string) => { \n      oscillator.detune.value = Number(newDetune)\n    },\n    'kill': (arg = '') => { oscillator.stop() }\n  }\n\n  oscillator.start()\n  \n  return {\n    audioNode: oscillator,\n    typeTypes: oscillatorTypes,\n    connectingParamIDs,\n    controlSetFuncs,\n  }\n    \n}\n\nexport default makeOscillator","import audioCtx from '../../audioCtx'\nimport { BaseAM, SWITCH, ControlData, ControlSetFuncs } from '../moduleTypes'\n\nexport interface LineInputModule extends BaseAM {\n  audioNode: ChannelSplitterNode\n}\n\nexport function makeLineInControlData(): ControlData {\n  return {\n    'mute': {\n      controlType: SWITCH,\n      paramID: 'n/a',\n      value: false,\n    }\n  }\n}\n\nfunction makeLineInput(id: string) {\n  navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false,\n      autoGainControl: false,\n      noiseSuppression: false,\n      latency: 0,\n    }\n  }).then(stream => {\n    const lineInput = audioCtx.createMediaStreamSource(stream)\n    const channelSplitter = audioCtx.createChannelSplitter(2)\n    lineInput.connect(channelSplitter)\n\n    \n\n    const controlSetFuncs: ControlSetFuncs = {\n      'mute': (arg: string) => {\n        stream.getAudioTracks()[0].enabled = arg === 'true'\n      }\n    }\n\n    const lineInputModule: LineInputModule = {\n      audioNode: channelSplitter,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n\n    window.audioModules = {\n      ...window.audioModules,\n      [id]: lineInputModule\n    }\n  })\n}\n\nexport default makeLineInput","import { BaseAM, ControlData, ControlSetFuncs, BUTTON } from \"../moduleTypes\"\n\nexport interface ContainerModule extends BaseAM {\n  inputModuleID?: string\n  outputModuleID?: string\n}\n\nexport function makeContainerControlData(): ControlData {\n  return {\n    'open': {\n      controlType: BUTTON,\n    },\n  }\n}\n\nfunction makeContainer(id: string): ContainerModule {\n  const controlSetFuncs: ControlSetFuncs = {\n    'open': () => {\n      window.fillContainerID = id\n      window.reRenderFillContainer()\n    },\n  }\n  return {\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeContainer","import audioCtx from '../../audioCtx'\nimport { VALUE, ControlData, BaseAM } from '../moduleTypes';\n\nexport interface DistortionModule extends BaseAM {\n  audioNode: WaveShaperNode,\n}\n\nexport function makeDistortionControlData(): ControlData {\n  return {\n    'amount': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 1000],\n    },\n    'oversample': {\n      controlType: VALUE,\n      value: 0,\n      range: [0, 4],\n      maxRange: [0, 4],\n    }\n  }\n}\n\nfunction makeDistortionCurve(amount: number) {\n  var k = typeof amount === 'number' ? amount : 50,\n    n_samples = 44100,\n    curve = new Float32Array(n_samples),\n    deg = Math.PI / 180,\n    i = 0,\n    x;\n  for (; i < n_samples; ++i) {\n    x = i * 2 / n_samples - 1;\n    curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n  }\n  return curve\n}\n\nfunction makeDistortion(prevControlData?: ControlData): DistortionModule {\n  const distortion = audioCtx.createWaveShaper()\n  distortion.curve = makeDistortionCurve(prevControlData ? prevControlData['amount'].value as number : 0)\n\n  const controlSetFuncs = {\n    'amount': (newAmount: string) => {\n      distortion.curve = makeDistortionCurve(Number(newAmount))\n    },\n    'oversample': (newAmount: string) => {\n      const newOversample = Math.floor(Number(newAmount))\n      if (newOversample < 2) {\n        distortion.oversample = 'none'\n      } else if (newOversample < 4) {\n        distortion.oversample = '2x'\n      } else {\n        distortion.oversample = '4x'\n      }\n    }\n  }\n  return {\n    audioNode: distortion,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeDistortion","import audioCtx from '../../audioCtx'\nimport { ControlSetFuncs, BaseAM, ControlData, GRAPH } from '../moduleTypes'\n\nexport interface AnalyzerModule extends BaseAM {\n  audioNode: AnalyserNode\n  timeArray: Float32Array\n  bufferLength: number\n}\n\nexport function makeAnalyzerControlData(): ControlData {\n  return {\n    'time graph': {\n      controlType: GRAPH,\n      range: [-1.5, 1.5],\n    }\n  }\n}\n\nfunction makeAnalyzer(prevControlData?: ControlData): AnalyzerModule {\n  const analyzer = audioCtx.createAnalyser()\n  analyzer.fftSize = 1024\n  const bufferLength = analyzer.frequencyBinCount\n  const timeArray = new Float32Array(bufferLength)\n  const controlSetFuncs: ControlSetFuncs = {\n    'time graph': () => {\n      \n    }\n  }\n\n  return {\n    audioNode: analyzer,\n    controlSetFuncs,\n    connectingParamIDs: [],\n    timeArray,\n    bufferLength,\n  }\n}\n\nexport default makeAnalyzer","import { BaseAM, ControlData, VALUE, PAD } from \"../moduleTypes\"\nimport audioCtx from '../../audioCtx'\n\nexport interface EnvelopedTriggerModule extends BaseAM {\n  audioNode: ConstantSourceNode\n}\n\nexport function makeEnvelopedTriggerControlData(): ControlData {\n  return {\n    'trigger': {\n      controlType: PAD,\n    },\n    'attack': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'decay': {\n      controlType: VALUE,\n      value: 0.2,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n    'sustain': {\n      controlType: VALUE,\n      value: 1,\n      range: [0, 1],\n      maxRange: [0, 100],\n    },\n    'release': {\n      controlType: VALUE,\n      value: 0.1,\n      range: [0.001, 1],\n      maxRange: [0.001, 100],\n    },\n  }\n}\n\nfunction makeEnvelopedTrigger(prevControlData?: ControlData): EnvelopedTriggerModule {\n  const constant = audioCtx.createConstantSource()\n  constant.offset.value = 0\n\n  let attack = .1\n  let decay = 0.2\n  let sustain = 1\n  let release = .1\n\n  if (prevControlData) {\n    attack = prevControlData['attack'].value as number\n    decay = prevControlData['decay'].value as number\n    sustain = prevControlData['sustain'].value as number\n    release = prevControlData['release'].value as number\n  }\n\n  const controlSetFuncs = {\n    'trigger': (val: string) => {\n      const currTime = audioCtx.currentTime\n      if (val === 'on') {\n        constant.offset.linearRampToValueAtTime(1, currTime + attack)\n        constant.offset.setTargetAtTime(sustain, currTime + attack, decay)\n      } else {\n        constant.offset.cancelAndHoldAtTime(currTime)\n        constant.offset.setTargetAtTime(0, currTime, release)\n      }\n    },\n    'attack': (val: string) => {\n      attack = Number(val)\n    },\n    'decay': (val: string) => {\n      decay = Number(val)\n    },\n    'sustain': (val: string) => {\n      sustain = Number(val)\n    },\n    'release': (val: string) => {\n      release = Number(val)\n    },\n  }\n\n  constant.start()\n\n  return {\n    audioNode: constant,\n    connectingParamIDs: [],\n    controlSetFuncs,\n  }\n}\n\nexport default makeEnvelopedTrigger","import {\n  ModuleType,\n  OSCILLATOR,\n  OUTPUT, GAIN,\n  AUTOFILTER,\n  KOMPRESSOR,\n  STEREO_PANNER,\n  SIGNAL_DELAY,\n  CONSTANT,\n  MEDIA_ELEMENT,\n  LINE_IN,\n  CONTAINER,\n  ControlData,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n} from './moduleTypes'\nimport makeConstantSource from './modules/constant'\nimport makeAutoFilter from './modules/autoFilter'\nimport makeOutput from './modules/output'\nimport makeStereoPanner from './modules/stereoPanner'\nimport makeSignalDelay from './modules/signalDelay'\nimport makeKompressor from './modules/kompressor'\nimport makeGain from './modules/gain'\nimport makeOscillator from './modules/oscillator'\nimport makeLineInput from './modules/lineInput'\nimport makeContainer from './modules/container'\nimport makeDistortion from './modules/distortion'\nimport makeAnalyzer from './modules/analyzer'\nimport makeEnvelopedTrigger from './modules/envelopedTrigger'\n\n\nfunction restoreAudioModule(id: string, moduleType: ModuleType, prevControlData: ControlData) {\n  switch (moduleType) {\n    case OSCILLATOR:\n      const osc = makeOscillator(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: osc }\n      break\n    case GAIN:\n      const gain = makeGain(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: gain }\n      break\n    case OUTPUT:\n      const output = makeOutput(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: output }\n      break\n    case AUTOFILTER:\n      const filter = makeAutoFilter(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: filter }\n      break\n    case KOMPRESSOR:\n      const komp = makeKompressor(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: komp }\n      break\n    case STEREO_PANNER:\n      const panner = makeStereoPanner(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: panner }\n      break;\n    case SIGNAL_DELAY:\n      const delay = makeSignalDelay(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: delay }\n      break\n    case CONSTANT:\n      const constant = makeConstantSource(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: constant }\n      break\n    case MEDIA_ELEMENT:\n      window.addAudioTag(id); window.reRenderAudioTags();\n      break;\n    case LINE_IN:\n      makeLineInput(id)\n      break;\n    case CONTAINER:\n      const container = makeContainer(id)\n      window.audioModules = { ...window.audioModules, [id]: container };\n      break\n    case DISTORTION:\n      const distortion = makeDistortion(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: distortion }\n      break\n    case ANALYZER:\n      const analyzer = makeAnalyzer(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: analyzer }\n      break\n    case ENVELOPED_TRIGGER:\n      const envelopedTrigger = makeEnvelopedTrigger(prevControlData)\n      window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n      break\n  }\n}\n\n\nexport default restoreAudioModule","import { ConnectingAudioModule } from \"./moduleTypes\";\n\nexport function connect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number, inputIndex?: number) {\n  if (param.length === 0) {\n    fromMod.audioNode.connect(toMod.audioNode, outputIndex, inputIndex)\n  } else {\n    if (toMod.audioNode[param]) {\n      fromMod.audioNode.connect(toMod.audioNode[param], outputIndex)\n    } else {\n      alert('param does not exist')\n    }\n  }\n}\n\nexport function disconnect(fromMod: ConnectingAudioModule, toMod: ConnectingAudioModule, param = '', outputIndex?: number) {\n  if (param.length === 0) {\n    if (typeof(outputIndex) === 'number') {\n      fromMod.audioNode.disconnect(toMod.audioNode, outputIndex)\n    } else {\n      fromMod.audioNode.disconnect(toMod.audioNode)\n    }\n  } else {\n    if (toMod.audioNode[param]) {\n      if (typeof (outputIndex) === 'number') {\n        fromMod.audioNode.disconnect(toMod.audioNode[param], outputIndex)\n      } else {\n        fromMod.audioNode.disconnect(toMod.audioNode[param])\n      }\n    } else {\n      alert('param does not exist')\n    }\n  }\n}","import { RootState, Connections } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect, disconnect } from \"./connection\"\n\nfunction connectLate(numTries: number, fromID: string, toID: string, param: string, outputIndex: number, inputIndex: number, actualOutputID?: string, actualInputID?: string) {\n  if (numTries > 10) {\n    alert('restore failed')\n  } else {\n    window.setTimeout(() => {\n      if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(numTries + 1, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    }, 500)\n  }\n}\n\nfunction restoreAMFromState(prevConnections: Connections, { modules, connections }: RootState) {\n  Object.keys(prevConnections).forEach(connectionID => {\n    const { fromID, toID, param, outputIndex, actualOutputID, actualInputID } = prevConnections[connectionID]\n    if (window.audioModules[actualOutputID ? actualOutputID : fromID] && window.audioModules[actualInputID ? actualInputID : toID]) {\n      disconnect(\n        window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n        window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n        param,\n        outputIndex, // may need to figure out how to pass in inputIndex\n      )\n    }\n  })\n  window.numberRestores++\n  window.audioModules = {}\n  window.audioTags = {}\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        connectLate(0, fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID)\n      }\n    })\n  }\n}\n\nexport default restoreAMFromState","import React, { useState, useEffect } from 'react'\nimport { Button } from '../all'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { restoreFromState } from '../../redux/allActions'\nimport restoreAMFromState from '../../audioModules/restoreAMFromState'\nimport { colors } from '../../theme/theme'\n\nexport interface Save {\n  id: string,\n  savedState: RootState,\n}\n\nconst buttonStyle = {\n  backgroundColor: 'transparent'\n}\n\nfunction SpaceDBMenu() {\n  const [ saveList, setSaveList ] = useState<string[]>([])\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  useEffect(() => {\n    window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) }) \n  }, [])\n  return (\n    <div>\n      <Button style={buttonStyle}\n        onClick={() => {\n          window.openSpaceDBProjectSaveMenu(saveList, () => {\n            window.setTimeout(() => {\n              window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n            }, 1000)\n          })\n        }}\n      >\n        save\n      </Button>\n      <div>\n        {saveList.map(saveName => {\n          return (\n            <div style={{ display: 'flex', flexDirection: 'row' }} key={saveName}>\n              <Button style={buttonStyle}\n                onClick={() => {\n                  window.projectSaveService.get(saveName).then((savedState: RootState) => {\n                    restoreAMFromState(connections, savedState)\n                    dispatch(restoreFromState(savedState))\n                  })\n                }}\n              >\n                {saveName}\n              </Button>\n              <Button style={{ backgroundColor: colors.deleteButton }}\n                onClick={() => {\n                  window.openConfirmDeleteMenu(saveName, () => {\n                    window.setTimeout(() => {\n                      window.projectSaveService.find().then((saveNames: string[]) => { setSaveList(saveNames) })\n                    }, 1000)\n                  })\n                }}\n              >\n                delete\n              </Button>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SpaceDBMenu","import React, { useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { Button } from '../all'\nimport { restoreFromState } from '../../redux/allActions'\nimport restoreAMFromState from '../../audioModules/restoreAMFromState'\nlet fs: any\nif (window.usingElectron) {\n  fs = window.require('fs')\n}\n\nfunction FileMenu() {\n  const state = useSelector((state: RootState) => state)\n  const folderRef = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    window.setTimeout(() => {\n      if (folderRef.current) {\n        (folderRef.current as any).webkitdirectory = true\n      }\n    }, 50)\n  }, [])\n  return (\n    <div \n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n      }}\n    >\n      <label htmlFor='chooseFile'>\n        <Button\n        >open file</Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        id='chooseFile'\n        type='file'\n        onChange={e => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          if (file) {\n            const path = (file as any).path\n            fs.readFile(path, (err: any, data: string) => {\n              if (err) throw err;\n              const newState = JSON.parse(data)\n              restoreAMFromState(state.connections, newState)\n              dispatch(restoreFromState(newState))\n            })\n          }\n        }}\n      />\n      <Button\n        onClick={() => {\n          window.openFileSaveMenu()\n        }}\n      >save</Button>\n    </div>\n  )\n}\n\nexport default FileMenu","import React from 'react'\nimport useJSS from './style'\nimport getModuleColor from '../../theme/moduleColor'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport genRandomID from '../../redux/idGen'\n\n// drop types\n\nexport const CONTAINER_RESTORE = 'CONTAINER_RESTORE'\n\ninterface Props {\n  name: string\n  totNumModules: number\n}\n\nfunction ContainerDrawerItem({ name, totNumModules }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.DrawerItem}>\n      <div\n        className={classes.DrawerIcon}\n        style={{ backgroundColor: getModuleColor(CONTAINER) }}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData('type', CONTAINER_RESTORE)\n          event.dataTransfer.setData('name', name)\n          event.dataTransfer.setData('id', genRandomID(0, totNumModules))\n          window.setFillIsExpanded(true)\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n      />\n      <div className={classes.DrawerItemText}>\n        {name}\n      </div>\n    </div>\n  )\n}\n\nexport default ContainerDrawerItem","import React, { useState, useEffect } from 'react'\nimport ContainerDrawerItem from './ContainerDrawerItem'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport useJSS from './style'\n\ninterface Props {\n  totNumModules: number\n}\n\nfunction SpaceDBContainerMenu({ totNumModules }: Props) {\n  const [containerSaves, setContainerSaves] = useState<string[]>([])\n  useEffect(() => {\n    window.containerSaveService.find().then((saveNames: string[]) => { setContainerSaves(saveNames) }) \n  }, [])\n  const state = useSelector((state: RootState) => state)\n  const classes = useJSS()\n  return (\n    <div className={classes.ItemRouter}\n      style={{ width: '100%' }}\n      onDragOver={e => e.preventDefault()}\n      onDrop={e => {\n        const id = e.dataTransfer.getData('id')\n        if (id && state.modules[id]) {\n          const moduleType = state.modules[id].moduleType\n          if (moduleType === CONTAINER) {\n            window.openSpaceDBContainerSaveMenu(containerSaves, id, () => {\n              window.setTimeout(() => {\n                window.containerSaveService.find().then((saveNames: string[]) => { setContainerSaves(saveNames) })\n              }, 500)\n            })\n          }\n        }\n      }}\n    >\n      {containerSaves.map((containerName, index) => {\n        return (\n          <ContainerDrawerItem name={containerName} totNumModules={totNumModules} key={containerName + index}/>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default SpaceDBContainerMenu","import React, { useState, useRef, useEffect } from 'react'\nimport useJSS from './style'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport HeaderItem from './HeaderItem'\nimport { sourceModuleData, effectModuleData, utilityModuleData } from './ModuleIcons/moduleData'\nimport { clamp } from '../../helpers/genFuncs'\nimport ModuleIcons from './ModuleIcons/ModuleIcons'\nimport SpaceDBMenu from './SpaceDBMenu'\nimport FileMenu from './FileMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport SpaceDBContainerMenu from './SpaceDBContainerMenu'\n\nconst SOURCES = 'sources'\nconst EFFECTS = 'effects'\nconst UTILITY = 'utility'\nconst SPACEDB_PROJECTS = 'spaceDB projects'\nconst FILE = 'file'\nconst SPACEDB_CONTAINERS = 'spaceDB modules'\n\nlet drawerWidth = sizes.rightDrawer.width\n\nfunction RightDrawer() {\n  const classes = useJSS()\n  const [open, setOpen] = useState(true)\n  const [width, setWidth] = useState(drawerWidth)\n  const drawerSpring = useSpring({\n    transform: open ? 'translate(0px, 0px)' : `translate(${width}px, 0px)`,\n    config: {\n      tension: 220,\n      clamp: true,\n    }\n  })\n  const [selectedRoute, setSR] = useState(SOURCES)\n  const drawerRef = useRef<HTMLDivElement>(null)\n  const toggleRef = useRef<HTMLDivElement>(null)\n  const drawerHeaderRef = useRef<HTMLDivElement>(null)\n  const itemRouterRef = useRef<HTMLDivElement>(null)\n  const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n  let adjusting = false\n  const [, toReRender ] = useState({})\n  const totNumModules = useSelector((state: RootState) => Object.keys(state.modules).length)\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      window.setTimeout(() => { toReRender({}) }, 500) \n    })\n  }, [])\n  return (\n    <animated.div className={classes.DrawerBounder} style={drawerSpring} onPointerDown={e => e.stopPropagation()}>\n      <div className={classes.Toggle}\n        ref={toggleRef}\n        onPointerDown={e => {\n          if (open && e.shiftKey) {\n            adjusting = true\n            toggleRef.current?.setPointerCapture(e.pointerId)\n          } else {\n            setOpen(!open)\n          }\n        }}\n        onPointerMove={e => {\n          if (adjusting) {\n            drawerWidth = `${clamp(vw - e.clientX, [150, 700] )}px`\n            if (drawerRef.current) { drawerRef.current.style.width = drawerWidth }\n            if (drawerHeaderRef.current) { drawerHeaderRef.current.style.width = drawerWidth }\n            if (itemRouterRef.current) { itemRouterRef.current.style.width = drawerWidth }\n            if (toggleRef.current) { toggleRef.current.style.right = drawerWidth }\n          }\n        }}\n        onPointerUp={e => {\n          if (adjusting) {\n            adjusting = false\n            setWidth(drawerWidth)\n            toggleRef.current?.releasePointerCapture(e.pointerId)\n          }\n        }}\n      >\n        <div className={classes.ToggleLine} onClick={() => {setOpen(!open)}}/>\n      </div>\n      <div className={classes.Drawer} ref={drawerRef}>\n        <div className={classes.DrawerHeader} ref={drawerHeaderRef}\n          onWheel={e => {\n            if (drawerHeaderRef && drawerHeaderRef.current) {\n              drawerHeaderRef.current.scrollLeft += e.deltaY\n            }\n          }}\n        >\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={SOURCES}\n            onClick={() => {setSR(SOURCES)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem} \n            text={EFFECTS} \n            onClick={() => {setSR(EFFECTS)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem \n            className={classes.DrawerHeaderItem} \n            text={UTILITY} \n            onClick={() => {setSR(UTILITY)}}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={SPACEDB_CONTAINERS}\n            onClick={() => { setSR(SPACEDB_CONTAINERS) }}\n            selectedRoute={selectedRoute}\n          />\n          <HeaderItem\n            className={classes.DrawerHeaderItem}\n            text={SPACEDB_PROJECTS}\n            onClick={() => { setSR(SPACEDB_PROJECTS) }}\n            selectedRoute={selectedRoute}\n          />\n          {\n            !window.usingElectron ? null :\n            <HeaderItem\n              className={classes.DrawerHeaderItem}\n              text={FILE}\n              onClick={() => { setSR(FILE) }}\n              selectedRoute={selectedRoute}\n            />\n          }\n        </div>\n        <div className={classes.ItemRouter} ref={itemRouterRef}>\n          {\n            selectedRoute === SOURCES\n            ?\n            <ModuleIcons moduleData={sourceModuleData} totNumModules={totNumModules}/>\n            :\n            selectedRoute === EFFECTS\n            ?\n            <ModuleIcons moduleData={effectModuleData} totNumModules={totNumModules}/>\n            :\n            selectedRoute === UTILITY\n            ?\n            <ModuleIcons moduleData={utilityModuleData} totNumModules={totNumModules}/>\n            :\n            selectedRoute === SPACEDB_CONTAINERS\n            ?\n            <SpaceDBContainerMenu totNumModules={totNumModules}/>\n            :\n            selectedRoute === SPACEDB_PROJECTS\n            ?\n            <SpaceDBMenu />\n            :\n            selectedRoute === FILE\n            ?\n            <FileMenu />\n            :\n            null\n          }\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default RightDrawer","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../theme/theme'\n//import sineSVG from '../../icons/oscIcons/sine2.svg'\n\nconst useJSS = createUseStyles({\n  FillBounder: {\n    backgroundColor: colors.fillModule,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderRadius: '2vmin',\n  },\n\n  FillHeaderBounder: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  FillHeader: {\n    borderColor: 'white',\n    borderStyle: 'none none none none',\n    padding: '1vmin',\n    marginLeft: '2vmin',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n\n  Fill: {\n    display: 'grid',\n    minWidth: sizes.moduleView.iconGrid,\n    minHeight: sizes.moduleView.iconGrid,\n    //alignItems: 'center',\n    //justifyItems: 'center',\n    padding: '4vmin',\n    zIndex: 1,\n    rowGap: sizes.moduleView.gutterGrid,\n    columnGap: sizes.moduleView.gutterGrid,\n  },\n\n  ArcherContainer: {\n    width: '100%',\n    height: '100%',\n    zIndex: 0,\n    display: 'grid',\n  },\n\n  Icon: {\n    backgroundColor: colors.module,\n    //backgroundImage: `url(${sineSVG})`,\n    //backgroundSize: 'contain',\n    borderRadius: '1.5vmin',\n    borderStyle: 'none',\n    borderColor: 'white',\n    whiteSpace: 'wrap',\n    fontSize: sizes.text.medium,\n    padding: '1vmin',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer',\n      borderStyle: 'solid',\n    },\n    zIndex: 2,\n  },\n\n  IconControlContainer: {\n    width: sizes.moduleView.bigIconWidth,\n    maxHeight: sizes.moduleView.bigIconHeight,\n    justifySelf: 'flex-end',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    '&::-webkit-scrollbar': {\n      width: '0px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  ArcherElement: {\n    zIndex: 1,\n    display: 'grid',\n    backgroundColor: 'transparent',\n    gridTemplateRows: '10px auto 10px',\n    gridTemplateColumns: '10px auto 10px',\n    padding: '1vmin'\n  },\n\n  IconName: {\n    fontSize: sizes.text.small,\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  },\n\n  IconConnector: {\n    backgroundColor: colors.outputConnector,\n    width: sizes.connector.size,\n    height: sizes.connector.size,\n    borderRadius: sizes.connector.borderRadius,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    justifySelf: 'flex-start',\n    alignSelf: 'flex-end',\n    flexShrink: 0,\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  MenuHeader: {\n    fontSize: sizes.text.medium,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n\n  ControlBounder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    //justifyContent: 'space-around',\n    alignItems: 'center',\n    fontSize: sizes.text.small,\n    justifyContent: 'center',\n    margin: '0vmin 1vmin'\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default useJSS","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  ControlTypeSelect: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small,\n    backgroundColor: colors.knob,\n    color: colors.knobText,\n    textAlign: 'center',\n  },\n\n  ControlInput: {\n    minWidth: '9vmin',\n    maxWidth: '5em',\n    margin: '1vmin',\n    fontSize: sizes.text.small\n  },\n\n  ControlMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center'\n  },\n\n  Pad: {\n    width: '20vmin',\n    height: '15vmin',\n    borderRadius: '2vmin',\n    backgroundColor: 'black',\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport { Button } from '../../all'\nimport { colors, sizes } from '../../../theme/theme'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  actualModID: string\n  controlID: string\n  setFunc: SetFunc\n  reRenderIcon: () => void\n  modName?: string\n  label?: string\n}\n\nfunction File({ actualModID, controlID, setFunc, reRenderIcon, modName, label }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      <label style={{ minWidth: '50%', }}\n        htmlFor={actualModID + controlID}\n      >\n        <Button style={{\n          //backgroundColor: colors.fillModule,\n          borderColor: colors.deleteButton,\n        }}\n        >{label ? label : modName ? `${modName} - ${controlID}` : controlID}</Button>\n      </label>\n      <input style={{ width: 0, height: 0, opacity: 0 }}\n        type='file'\n        id={actualModID + controlID}\n        onChange={(e) => {\n          const file = ((e.target as HTMLInputElement).files as FileList)[0]\n          setFunc(URL.createObjectURL(file))\n          window.audioTags[actualModID].srcName = file.name\n          window.reRenderAudioTags()\n          reRenderIcon()\n        }}\n      />\n      <p style={{\n        fontSize: sizes.text.xsmall,\n        textAlign: 'center',\n        whiteSpace: 'normal',\n        justifyContent: 'center',\n        width: '100%',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        hyphens: 'auto',\n      }}>\n        {window.audioTags[actualModID].srcName}\n      </p>\n    </div>\n  )\n}\n\nexport default File","import React from 'react'\nimport useJSS from './style'\nimport { SetFunc, AudioModuleWithTypes, ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateControlValue } from '../../../redux/allActions'\nimport { FlexRow } from '../../all'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  controlID: string\n  label?: string\n}\n\nfunction Type({ setFunc, controlID, actualModID, modName, label }: Props) {\n  const classes = useJSS()\n  const audioModule = window.audioModules[actualModID] as ConnectingAudioModule\n  const { audioNode } = audioModule\n  const dispatch = useDispatch()\n  const value = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value)\n  return (\n    <FlexRow style={{ justifyContent: 'center', margin: '1vmin 0vmin' }}>\n      <label htmlFor={'type'}>{label ? `set type - ${label}` : modName ? `set type - ${modName}` : 'set type'}</label>\n      <select className={classes.ControlTypeSelect}\n        name='type' id='type'\n        onChange={e => {\n          setFunc(e.target.value)\n          dispatch(updateControlValue(actualModID, controlID, e.target.value))\n        }}\n        value={value as string ? value as string : audioNode.type as string}\n      >\n        {(audioModule as AudioModuleWithTypes).typeTypes.map(type => {\n          return (\n            <option value={type} key={actualModID + type}>{type}</option>\n          )\n        })}\n      </select>\n    </FlexRow>\n  )\n}\n\nexport default Type","import { sizes } from '../../theme/theme'\n\nexport function getRotation(val: number, range: [number, number]) {\n  return ((val - range[0]) / (range[1] - range[0])) * (sizes.knob.rotRange[1] - sizes.knob.rotRange[0]) + sizes.knob.rotRange[0]\n}\n\nexport function makeValString(val: number) {\n  const roundedNumString = (Math.floor(val * 10) / 10).toString()\n\n  return roundedNumString.slice(roundedNumString.length - 2, roundedNumString.length - 1) === '.' ? roundedNumString : roundedNumString + '.0'\n}","import React, { useState } from 'react'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { StatelessKnob } from '../../all'\nimport { clamp } from '../../../helpers/genFuncs'\nimport { makeValString } from '../../Knob/helpers'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { updateControlValue, updateControlRange } from '../../../redux/allActions'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  displayModName?: string\n  label?: string\n}\n\nfunction ValueControl({ controlID, setFunc, actualModID, displayModName, label }: Props) {\n  const [ val, currRange ] = useSelector((state: RootState) => {\n    return [\n      state.modules[actualModID].controlData[controlID].value as number,\n      state.modules[actualModID].controlData[controlID].range as [number, number],\n    ]\n  })\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  const dispatch = useDispatch()\n  return (\n    <div style={{ \n      display: 'flex', \n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <StatelessKnob\n        initValue={val}\n        range={currRange}\n        inputVal={inputVal}\n        setInputVal={setInputVal}\n        onEveryChange={newVal => {\n          setFunc(newVal.toString())\n        }}\n        onChange={newVal => {\n          setFunc(newVal.toString())\n          dispatch(updateControlValue(actualModID, controlID, newVal))\n        }}\n        onSettingsClick={() => {\n          window.openKnobRangeSetMenu(actualModID, controlID, (newRange) => {\n            setFunc(clamp(val, newRange).toString())\n            setInputVal(makeValString(clamp(val, newRange)))\n            dispatch(updateControlRange(actualModID, controlID, newRange))\n          })\n        }}\n      />\n      <div>{label ? label : displayModName ? `${displayModName} - ${controlID}` : controlID}</div>\n    </div>\n  )\n}\n\nexport default ValueControl","import React from 'react'\nimport { Button } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  setFunc: SetFunc\n  controlID: string\n  modName?: string\n  label?: string\n}\n\nfunction ButtonControl({ setFunc, controlID, modName, label }: Props) {\n  return (\n    <Button style={{\n      //backgroundColor: colors.fillModule,\n      borderColor: colors.deleteButton,\n      width: '50%',\n    }}\n      onClick={() => {\n        setFunc('')\n      }}\n    >\n      {label ? label : modName ? `${modName} - ${controlID}` : controlID}\n    </Button>\n  )\n}\n\nexport default ButtonControl","import React from 'react'\nimport { Switch } from '../../all'\nimport { SetFunc } from '../../../audioModules/moduleTypes'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  controlID: string\n  setFunc: SetFunc\n  actualModID: string\n  modName?: string\n  label?: string\n}\n\nfunction SwitchControl({ controlID, setFunc, actualModID, modName, label }: Props) {\n  const initState = useSelector((state: RootState) => state.modules[actualModID].controlData[controlID].value as boolean)\n  return (\n    <Switch text={label ? label : modName ? `${modName} - ${controlID}` : controlID} \n      initState={initState} \n      onSwitch={(newState) => {\n        setFunc(newState ? 'true' : 'false')\n      }}\n    />\n  )\n}\n\nexport default SwitchControl","import React, { useState } from 'react'\nimport Sketch from 'react-p5'\nimport p5Types from 'p5'\nimport { AnalyzerModule } from '../../../audioModules/modules/analyzer'\nimport { mapValBetweenRanges } from '../../../helpers/genFuncs'\nimport { colors, sizes } from '../../../theme/theme'\nimport { FlexCol, Button } from '../../all'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { updateControlRange } from '../../../redux/allActions'\n\ninterface Props {\n  modID: string\n}\n\nconst height = 200\n\nfunction Graph({ modID }: Props) {\n  const analyzer = window.audioModules[modID] as AnalyzerModule\n  const yRange = useSelector((state: RootState) => state.modules[modID].controlData['time graph'].range as Range)\n  const zero = height - mapValBetweenRanges(0, yRange, [0, height])\n  const [width, setWidth] = useState(0)\n\n  function setup(p5: p5Types, canvasParentRef: Element) {\n    p5.createCanvas(canvasParentRef.clientWidth, height).parent(canvasParentRef)\n    p5.textAlign(p5.CENTER, p5.CENTER)\n    p5.fill(100)\n    setWidth(canvasParentRef.clientWidth)\n  }\n\n  function draw(p5: p5Types) {\n    analyzer.audioNode.getFloatTimeDomainData(analyzer.timeArray)\n    const xStep = width / analyzer.bufferLength\n    p5.background(0) // draw black background\n\n    let currX = 0\n    let currY = height - mapValBetweenRanges(analyzer.timeArray[0], yRange, [0, height])\n    p5.stroke(colors.analyzerModuleBG)\n    p5.strokeWeight(6)\n    for (let i = 0; i < analyzer.bufferLength - 1; i++) {\n      const nextX = (i + 1) * xStep\n      const nextY = height - mapValBetweenRanges(analyzer.timeArray[i + 1], yRange, [0, height])\n      p5.line(currX, currY, nextX, nextY)\n      currX = nextX\n      currY = nextY\n    }\n\n    const zeroXStep = width / 20\n    // draw 0 indicator\n    p5.stroke(100)\n    p5.strokeWeight(1)\n    p5.line(0, zero, zeroXStep, zero)\n    p5.text('0', 1.5 * zeroXStep, zero)\n  }\n\n  const dispatch = useDispatch()\n  return (\n    <FlexCol style={{ justifyContent: 'center' }}>\n      <Sketch style={{ width: sizes.moduleView.bigIconWidth, margin: '.5vmin 0vmin' }}\n        setup={setup} \n        draw={draw} \n      />\n      <Button style={{ width: '10em' }}\n        onClick={() => {\n          window.openAnalyzerRangeSetMenu(yRange, (newRange) => {\n            dispatch(updateControlRange(modID, 'time graph', newRange))\n          })\n        }}\n      >\n        change range\n      </Button>\n    </FlexCol>\n  )\n}\n\nexport default Graph","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  setFunc: (arg: string) => void\n}\n\nfunction PadControl({ setFunc }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.Pad}\n      onPointerDown={e => {\n        e.preventDefault()\n        setFunc('on')\n      }}\n      onPointerCancel={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n      onPointerUp={e => {\n        e.preventDefault()\n        setFunc('off')\n      }}\n    />\n  )\n}\n\nexport default PadControl","import React from 'react'\nimport useJSS from './style'\nimport { AudioModule, GRAPH, PAD } from '../../audioModules/moduleTypes'\nimport { Module } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl } from './controls/all'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  audioModule: AudioModule\n  selectedModule: Module\n  reRenderIcon: () => void\n}\n\nfunction ControlMenu({ audioModule, selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.ControlMenu}>\n      {Object.keys(selectedModule.controlData).map((controlID, index) => {\n        const { controlType } = selectedModule.controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        return (\n          <div className={classes.ControlBounder} key={selectedModule.id + controlID + index}>\n            {controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} />\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={selectedModule.id} />\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} actualModID={selectedModule.id}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={selectedModule.id} />\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={selectedModule.id} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ControlMenu","import React, { useState, Fragment } from 'react'\nimport { Button, Switch, FlexRow, FlexCol } from '../all'\nimport { sizes } from '../../theme/theme'\nimport { Module, ContainerModule, RootState, ContainerControl } from '../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { markContainerControl, unmarkContainerControl } from '../../redux/allActions'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\n\ninterface Props {\n  selectedModule: Module\n}\n\n\nfunction MarkContainerControls({ selectedModule }: Props) {\n  const [open, setOpen] = useState(false)\n  const dispatch = useDispatch()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <Fragment>\n      <Button style={{ fontSize: sizes.text.xsmall, marginTop: '2vmin' }}\n        onClick={() => {\n          setOpen(!open)\n        }}\n      >mark container controls</Button>\n      <FlexCol>\n        {\n          open && selectedModule.moduleType === CONTAINER ?\n          (selectedModule as ContainerModule).containerControls.map((control, index) => {\n            const { modID, controlID, actualModID, name, markedToContainer } = control\n            const modName = modules[modID].name\n            let containerControl: ContainerControl\n            const isMarked = markedToContainer ? true : false\n            if (isMarked) {\n              containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n                return (\n                  containerControl.controlID === controlID &&\n                  containerControl.actualModID === actualModID\n                )\n              })[0]\n            }\n            return (\n              <FlexRow>\n                <Switch initState={isMarked} text={name ? name : `${modName} - ${controlID}`}\n                  style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                  key={modID + index}\n                  onSwitch={nowMarked => {\n                    if (nowMarked) {\n                      dispatch(markContainerControl(selectedModule.id, controlID, actualModID))\n                    } else {\n                      dispatch(unmarkContainerControl(selectedModule.id, controlID, actualModID))\n                    }\n                  }}\n                />\n                {\n                  !isMarked ? null :\n                  <Button style={{ fontSize: sizes.text.small }}\n                    onClick={() => {\n                      window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                    }}\n                  >\n                    edit\n                  </Button>\n                }\n              </FlexRow>\n            )\n          }) : null\n        }\n        {\n        !open || selectedModule.moduleType === CONTAINER ? null :\n        Object.keys(selectedModule.controlData).map((controlID, index) => {\n          const isMarked = selectedModule.controlData[controlID].markedToContainer ? true : false\n          let containerControl: ContainerControl\n          if (isMarked) {\n            containerControl = (modules[selectedModule.parentID as string] as ContainerModule).containerControls.filter(containerControl => {\n              return (\n                containerControl.controlID === controlID &&\n                containerControl.actualModID === selectedModule.id\n              )\n            })[0]\n          }\n          return (\n            <FlexRow>\n              <Switch initState={isMarked} text={controlID}\n                style={{ fontSize: sizes.text.xsmall, padding: '1vmin' }}\n                key={controlID + index}\n                onSwitch={nowMarked => {\n                  if (nowMarked) {\n                    dispatch(markContainerControl(selectedModule.id, controlID, selectedModule.id))\n                  } else {\n                    dispatch(unmarkContainerControl(selectedModule.id, controlID, selectedModule.id))\n                  }\n                }} \n              />\n              {\n                !isMarked ? null :\n                <Button style={{ fontSize: sizes.text.small }}\n                  onClick={() => {\n                    window.openControlRenameMenu(controlID, selectedModule.parentID as string, containerControl)\n                  }}\n                >\n                  edit\n                </Button>\n              }\n            </FlexRow>\n          )\n        })\n        }\n      </FlexCol>\n    </Fragment>\n  )\n}\n\nexport default MarkContainerControls","import React, { Fragment } from 'react'\nimport { Module } from '../../redux/stateTSTypes'\nimport { Switch } from '../all'\nimport { useDispatch } from 'react-redux'\nimport { markContainerInput, unmarkContainerInput, markContainerOutput, unmarkContainerOutput } from '../../redux/allActions'\nimport CSS from 'csstype'\nimport { sizes } from '../../theme/theme'\nimport MarkContainerControls from './MarkContainerControls'\n\ninterface Props {\n  baseContainerID: string\n  selectedModule: Module\n}\n\nconst switchStyle: CSS.Properties = {\n  fontSize: sizes.text.xsmall,\n  padding: '1vmin',\n}\n\nfunction MarkContainerIO({ baseContainerID, selectedModule }: Props) {\n  const dispatch = useDispatch()\n  return (\n    (selectedModule && window.fillContainerID !== baseContainerID) ?\n    <Fragment>\n      {\n      Object.keys(window.audioModules[selectedModule.id]).length === 0 ? null :\n      <MarkContainerControls selectedModule={selectedModule} />\n      }\n      {\n      selectedModule.connectionInputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'inputSwitch'}\n        text={'mark as container input'} \n        initState={selectedModule.isContainerInput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerInput(selectedModule.id))\n          } else {\n            dispatch(unmarkContainerInput(selectedModule.id))\n          }\n        }}\n      />\n      }\n      {\n      selectedModule.connectionOutputs.length === 0 ? null :\n      <Switch style={switchStyle}\n        key={selectedModule.id + 'outputSwitch'}\n        text={'mark as container output'}\n        initState={selectedModule.isContainerOutput}\n        onSwitch={(newState) => {\n          if (newState) {\n            dispatch(markContainerOutput(selectedModule.id))\n          } else {\n            dispatch(unmarkContainerOutput(selectedModule.id))\n          }\n        }}\n      />\n      }\n    </Fragment>\n    :\n    null\n  )\n}\n\nexport default MarkContainerIO","import React from 'react'\nimport useJSS from './style'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { TYPE, BUTTON, VALUE, FILE, SWITCH, GRAPH, PAD } from '../../audioModules/moduleTypes'\nimport { FileControl, TypeControl, ValueControl, ButtonControl, SwitchControl, GraphControl } from './controls/all'\nimport { useSelector } from 'react-redux'\nimport PadControl from './controls/Pad'\n\ninterface Props {\n  selectedModule: ContainerModule\n  reRenderIcon: () => void\n}\n\nfunction ContainerControlMenu({ selectedModule, reRenderIcon }: Props) {\n  const classes = useJSS()\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <div className={classes.ControlMenu}>\n      {selectedModule.containerControls.map(({ modID, controlID, actualModID, name }, index) => {\n        const audioModule = window.audioModules[actualModID]\n        const { controlType } = modules[actualModID].controlData[controlID]\n        const setFunc = audioModule.controlSetFuncs[controlID]\n        const modName = modules[modID].name\n        return (\n          <div className={classes.ControlBounder} key={modID + controlID + index}>\n            {\n            controlType === VALUE\n            ?\n            <ValueControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} displayModName={modName} label={name}/>\n            :\n            controlType === BUTTON\n            ?\n            <ButtonControl setFunc={setFunc} controlID={controlID} modName={modName} label={name}/>\n            :\n            controlType === TYPE\n            ?\n            <TypeControl setFunc={setFunc} controlID={controlID} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === FILE\n            ?\n            <FileControl controlID={controlID} setFunc={setFunc} reRenderIcon={reRenderIcon} modName={modName} actualModID={actualModID} label={name}/>\n            :\n            controlType === SWITCH\n            ?\n            <SwitchControl controlID={controlID} setFunc={setFunc} actualModID={actualModID} modName={modName} label={name}/>\n            :\n            controlType === GRAPH\n            ?\n            <GraphControl modID={actualModID} />\n            :\n            controlType === PAD\n            ?\n            <PadControl setFunc={setFunc} />\n            :\n            null\n            }\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ContainerControlMenu","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DropSquare: {\n    width: sizes.moduleView.iconGrid,\n    height: sizes.moduleView.iconGrid,\n    borderStyle: 'solid',\n    borderRadius: '10px',\n    zIndex: 1,\n  },\n})\n\nexport default useJSS","import { stringIn } from \"../helpers/genFuncs\"\n\nexport function filterOutFromObj<ObjType>(obj: ObjType, idsToFilterOut: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return !stringIn(entry[0], idsToFilterOut)\n  }))\n}\n\nexport function keepOnlyIdsInObj<ObjType>(obj: ObjType, idsToKeep: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => {\n    return stringIn(entry[0], idsToKeep)\n  }))\n}\n\nexport function ObjFrom2Arrays(keys: string[], entries: any[]) {\n  if (keys.length === entries.length) {\n    return Object.fromEntries(keys.map((id, index) => {\n      return [id, entries[index]]\n    }))\n  }\n  return {}\n}","import { RootState, ContainerModule, Modules, Connections } from \"./stateTSTypes\";\nimport { CONTAINER } from \"../audioModules/moduleTypes\";\nimport { keepOnlyIdsInObj } from \"./helpers\";\nimport { bothStringsIn } from \"../helpers/genFuncs\";\n\nfunction getChildrenRecursive(containerID: string, modules: Modules): string[] {\n  const childIDs = (modules[containerID] as ContainerModule).childModules\n  let containerChildIDs: string[] = []\n  for (const i in childIDs) {\n    if (modules[childIDs[i]].moduleType === CONTAINER) {\n      containerChildIDs = [...containerChildIDs, ...getChildrenRecursive(childIDs[i], modules) ]\n    }\n  }\n  return [ ...childIDs, ...containerChildIDs ]\n}\n\nexport function getContainerIDs(containerID: string, modules: Modules) {\n  return [ containerID, ...getChildrenRecursive(containerID, modules) ]\n}\n\nexport function getInternalConnectionIDs(connections: Connections, trimmedIDs: string[]) {\n  const allConnectionIDs = Object.keys(connections)\n  let connectionIDs: string[] = []\n  for (const i in allConnectionIDs) {\n    const { fromID, toID, actualOutputID, actualInputID } = connections[allConnectionIDs[i]]\n    const actualFromID = actualOutputID ? actualOutputID : fromID // actualIDs undefined if no containers involved in connection\n    const actualToID = actualInputID ? actualInputID : toID\n    if (bothStringsIn(actualFromID, actualToID, trimmedIDs)) {\n      connectionIDs = [...connectionIDs, allConnectionIDs[i]]\n    }\n  }\n  return connectionIDs\n}\n\nfunction getInternalConnections(connections: Connections, trimmedIDs: string[]) {\n  return keepOnlyIdsInObj(connections, getInternalConnectionIDs(connections, trimmedIDs)) as Connections\n}\n\nexport function getContainerModulesConnections(state: RootState, containerID: string) {\n  const trimmedIDs = [containerID, ...getChildrenRecursive(containerID, state.modules)]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    modules: trimmedModules,\n    connections: trimmedConnections,\n  }\n}\n\n\nexport function getContainerAsProject(state: RootState, containerID: string) {\n  const trimmedIDs = [ containerID, ...getChildrenRecursive(containerID, state.modules) ]\n  const trimmedModules = keepOnlyIdsInObj(state.modules, trimmedIDs)\n  const trimmedConnections = getInternalConnections(state.connections, trimmedIDs)\n  return {\n    baseContainerID: containerID,\n    modules: {\n      ...trimmedModules,\n      [containerID]: {\n        ...trimmedModules[containerID],\n        isBaseContainer: true,\n        parentID: null,\n      },\n    },\n    connections: trimmedConnections\n  }\n}","import { Connections, Modules } from \"../redux/stateTSTypes\"\nimport restoreAudioModule from \"./restoreAudioModule\"\nimport { ModuleType, ConnectingAudioModule, MEDIA_ELEMENT, LINE_IN } from \"./moduleTypes\"\nimport { connect } from \"./connection\"\n\nfunction mergeExistingContainerAM(modules: Modules, connections: Connections) {\n  Object.keys(modules).forEach(modID => {\n    const { moduleType, controlData } = modules[modID]\n    restoreAudioModule(modID, moduleType as ModuleType, controlData)\n  })\n  if (connections) {\n    Object.keys(connections).forEach(connectionID => {\n      const { fromID, toID, param, outputIndex, inputIndex, actualOutputID, actualInputID } = connections[connectionID]\n      const toType = modules[actualInputID ? actualInputID : toID].moduleType\n      const fromType = modules[actualOutputID ? actualOutputID : fromID].moduleType\n      const needsToWait = toType === MEDIA_ELEMENT || fromType === MEDIA_ELEMENT ||\n        toType === LINE_IN || fromType === LINE_IN\n      if (!needsToWait) {\n        connect(\n          window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n          window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n          param,\n          outputIndex,\n          inputIndex,\n        )\n      } else {\n        window.setTimeout(() => {\n          connect(\n            window.audioModules[actualOutputID ? actualOutputID : fromID] as ConnectingAudioModule,\n            window.audioModules[actualInputID ? actualInputID : toID] as ConnectingAudioModule,\n            param,\n            outputIndex,\n            inputIndex,\n          )\n        }, 200)\n      }\n    })\n  }\n}\n\nexport default mergeExistingContainerAM","import { Modules, Connections, ContainerModule, RootState } from \"./stateTSTypes\"\nimport { ObjFrom2Arrays } from \"./helpers\"\nimport { stringIn } from \"../helpers/genFuncs\"\nimport { CONTAINER } from \"../audioModules/moduleTypes\"\nimport { Dispatch } from 'redux'\nimport { mergeContainer } from './allActions'\nimport { getContainerModulesConnections } from \"./getContainerAsProject\"\nimport mergeExistingContainerAM from \"../audioModules/mergeExistingAM\"\nimport genRandomID from \"./idGen\"\n\n\nfunction getReplicatedState(modules: Modules, connections: Connections, totNumberModules: number, totNumberConnections: number) {\n  // this function returns a copy of modules and connections, but with all modIDs and connectionIDs replaced.\n  // this is done so no IDs conflict when the new modules/connections are merged into the active redux state\n  const modIDs = Object.keys(modules)\n  const connectionIDs = Object.keys(connections)\n  const modIDConverter = ObjFrom2Arrays(modIDs, modIDs.map((modID, index) => {\n    return genRandomID(index, totNumberModules)\n  }))\n  const connectionIDConverter = ObjFrom2Arrays(connectionIDs, connectionIDs.map((connectionID, index) => {\n    return genRandomID(index, totNumberConnections)\n  }))\n  const newModules = ObjFrom2Arrays(Object.values(modIDConverter), modIDs.map(modID => {\n    if (modules[modID].moduleType === CONTAINER) {\n      const containerMod = modules[modID] as ContainerModule\n      return {\n        ...containerMod,\n        id: modIDConverter[modID],\n        inputs: containerMod.inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: containerMod.outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        containerControls: containerMod.containerControls\n          .map(containerControl => {\n            return {\n              ...containerControl,\n              modID: modIDConverter[containerControl.modID],\n              actualModID: modIDConverter[containerControl.actualModID],\n            }\n          }),\n        childModules: containerMod.childModules.map(id => modIDConverter[id]),\n        parentID: modules[modID].parentID ? modIDConverter[modules[modID].parentID as string] : null,\n        connectionOutputs: modules[modID].connectionOutputs.map(outputID => modIDConverter[outputID]),\n        connectionInputs: modules[modID].connectionInputs.map(inputID => modIDConverter[inputID])\n      }\n    } else {\n      return {\n        ...modules[modID],\n        id: modIDConverter[modID],\n        inputs: modules[modID].inputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        outputs: modules[modID].outputs\n          .filter(connectionID => stringIn(connectionID, connectionIDs))\n          .map(connectionID => connectionIDConverter[connectionID]),\n        parentID: modIDConverter[modules[modID].parentID as string]\n      }\n    }\n  }))\n  const newConnections = ObjFrom2Arrays(Object.values(connectionIDConverter), connectionIDs.map(connectionID => {\n    const connection = connections[connectionID]\n    return {\n      ...connection,\n      fromID: modIDConverter[connection.fromID],\n      toID: modIDConverter[connection.toID],\n      actualOutputID: connection.actualOutputID ? modIDConverter[connection.actualOutputID] : undefined,\n      actualInputID: connection.actualInputID ? modIDConverter[connection.actualInputID] : undefined,\n    }\n  }))\n  return {\n    modIDConverter,\n    newModules,\n    newConnections,\n  }\n}\n\nexport function performContainerMerge(dispatch: Dispatch, modulesToMerge: Modules, connectionsToMerge: Connections, totNumberModules: number, totNumberConnections: number, parentID: string, containerID: string, row: number, col: number) {\n  // this function makes a copy of state with above function, then restores all modules and connections,\n  // and dispatches an action to merge the copied state with the full project state \n  const { modIDConverter, newModules, newConnections } = getReplicatedState(modulesToMerge, connectionsToMerge, totNumberModules, totNumberConnections)\n  mergeExistingContainerAM(newModules, newConnections)\n  dispatch(mergeContainer(modIDConverter[containerID], newModules, newConnections, parentID, row, col))\n}\n\nexport function duplicateContainer(dispatch: Dispatch, state: RootState, parentID: string, containerID: string, row: number, col: number) {\n  const { modules, connections } = getContainerModulesConnections(state, containerID)\n  const totNumberModules = Object.keys(state.modules).length\n  const totNumberConnections = Object.keys(state.connections).length\n  performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n}\n\nexport function loadSavedContainer(dispatch: Dispatch, name: string, totNumberModules: number, totNumberConnections: number, parentID: string, row: number, col: number) {\n  window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n    performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, parentID, containerID, row, col)\n  })\n}\n\nexport function loadProjectAsContainer(dispatch: Dispatch, currState: RootState, parentID: string, row: number, col: number, stateToRestore: RootState) {\n  // used for loading in projects as containers within an existing project\n  const { modules, connections, baseContainerID } = stateToRestore\n  const totNumberModules = Object.keys(currState.modules).length\n  const totNumberConnections = Object.keys(currState.connections).length\n  const { newModules, newConnections } = getReplicatedState(modules, connections, totNumberModules, totNumberConnections)\n  const goodNewModules = {\n    ...newModules,\n    [baseContainerID]: {\n      ...newModules[baseContainerID],\n      isBaseContainer: false,\n      parentID,\n    }\n  }\n  dispatch(mergeContainer(baseContainerID, goodNewModules, newConnections, parentID, row, col))\n}","import { RootState } from \"./stateTSTypes\"\nimport genRandomID from './idGen'\nimport { Dispatch } from 'redux'\nimport { addModule } from './allActions'\nimport { ModuleType } from \"../audioModules/moduleTypes\"\nimport restoreAudioModule from \"../audioModules/restoreAudioModule\"\n\nfunction duplicateModule(dispatch: Dispatch, state: RootState, modID: string, row: number, col: number) {\n  const newID = genRandomID(0, Object.keys(state.modules).length)\n  const { name, moduleType, controlData, parentID, connectionInputs, connectionOutputs } = state.modules[modID]\n  restoreAudioModule(newID, moduleType as ModuleType, controlData)\n  dispatch(addModule(newID, name, moduleType as ModuleType, controlData, parentID as string, row, col, connectionInputs, connectionOutputs))\n}\n\nexport default duplicateModule","import { DragEvent } from 'react'\nimport { ContainerModule, RootState } from '../../redux/stateTSTypes'\nimport { isOccupied } from '../ModuleView/helpers'\nimport { Dispatch } from 'redux'\nimport { ModuleType, CONTAINER } from '../../audioModules/moduleTypes'\nimport { moveModule } from '../../redux/allActions'\nimport { duplicateContainer, performContainerMerge } from '../../redux/replicateContainer'\nimport { MOVE, COPY } from './DropSquare'\nimport { ADD_MODULE } from '../../redux/modules/moduleActionTypes'\nimport { CONTAINER_RESTORE } from '../RightDrawer/ContainerDrawerItem'\nimport duplicateModule from '../../redux/replicateModule'\n\nexport function onDrop(e: DragEvent<HTMLDivElement>, dispatch: Dispatch, state: RootState, row: number, col: number, setHL: (isHL: boolean) => void) {\n  const id = e.dataTransfer.getData('id')\n  const fc = state.modules[window.fillContainerID] as ContainerModule\n  const currentChildren = fc.childModules\n  const possiblyMod = state.modules[id]\n  const possiblyOccupyingID = isOccupied(row, col, currentChildren, state.modules)\n  if (!possiblyMod) {\n    if (!possiblyOccupyingID) {\n      const dropType = e.dataTransfer.getData('type')\n      const name = e.dataTransfer.getData('name')\n      switch(dropType) {\n        case ADD_MODULE:\n          const moduleType = e.dataTransfer.getData('moduleType') as ModuleType\n          window.addModule(id, name, window.fillContainerID, moduleType, dispatch, row, col)\n          break\n        case CONTAINER_RESTORE:\n          const totNumberModules = Object.keys(state.modules).length\n          const totNumberConnections = Object.keys(state.connections).length\n          window.containerSaveService.get(name).then(({ containerID, modules, connections }: any) => {\n            performContainerMerge(dispatch, modules, connections, totNumberModules, totNumberConnections, window.fillContainerID, containerID, row, col)\n          })\n          break\n      }\n      setHL(false)\n      window.setFillIsExpanded(false)\n    }\n  } else if (possiblyOccupyingID) {\n    const fromRow = e.dataTransfer.getData('fromRow')\n    const fromCol = e.dataTransfer.getData('fromCol')\n    setHL(false)\n    window.setFillIsExpanded(false)\n    dispatch(moveModule(id, row, col))\n    dispatch(moveModule(possiblyOccupyingID, Number(fromRow), Number(fromCol)))\n    window.setTimeout(window.refreshArcherContainer, 1)\n  } else {\n    const moduleDragType = e.dataTransfer.getData('type')\n    setHL(false)\n    window.setFillIsExpanded(false)\n    switch (moduleDragType) {\n      case MOVE:\n        dispatch(moveModule(id, row, col))\n        break\n      case COPY:\n        if (state.modules[id].moduleType === CONTAINER) {\n          duplicateContainer(dispatch, state, window.fillContainerID, id, row, col)\n        } else {\n          duplicateModule(dispatch, state, id, row, col)\n        }\n        break\n    }\n    window.setTimeout(window.refreshArcherContainer, 1)\n  }\n}","import { Modules } from \"../../redux/stateTSTypes\"\n\nexport function getGridRange(childModules: string[], modules: Modules) {\n  let maxRow = 0\n  let maxCol = 0 // min col is always 0\n  childModules.forEach(moduleID => {\n    const mod = modules[moduleID]\n    if (mod.row > maxRow) {\n      maxRow = mod.row\n    }\n    if (mod.col > maxCol) {\n      maxCol = mod.col\n    }\n  })\n  return { maxRow, maxCol }\n}\n\nexport function isOccupied(row: number, col: number, currentChildren: string[], modules: Modules) {\n  for (var i = 0; i < currentChildren.length; i++) {\n    const mod = modules[currentChildren[i]]\n    if (mod.row === row && mod.col === col) {\n      return mod.id\n    }\n  }\n  return false\n}","import React, { useState } from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/stateTSTypes'\nimport { colors } from '../../theme/theme'\nimport { onDrop } from './callbacks'\n\ninterface Props {\n  row: number\n  col: number\n}\n\n// drag types\nexport const MOVE = 'MOVE'\nexport const COPY = 'COPY'\n\nfunction DropSquare({ row, col }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const state = useSelector((state: RootState) => state)\n  const [isHL, setHL] = useState(false) // to highlight on drag enter\n  const dsStyle: CSS.Properties = {\n    gridColumn: `${col + 1} / span 1`,\n    gridRow: `${row + 1} / span 1`,\n    borderColor: isHL ? colors.dropSquareHL : 'transparent',\n  }\n  return (\n    <div \n      className={classes.DropSquare} \n      style={dsStyle}\n      onDragOver={event => {\n        event.preventDefault()\n      }}\n      onDragEnter={e => {\n        if (e.dataTransfer.types.length >= 3) {\n          setHL(true)\n        }\n      }}\n      onDragLeave={e => {\n        if (e.dataTransfer.types.length >= 3) {\n          setHL(false)\n        }\n      }}\n      onDrop={e => {\n        onDrop(e, dispatch, state, row, col, setHL)\n      }}\n    />\n  )\n}\n\nexport default DropSquare","import React, { useState, Fragment } from 'react'\nimport { Module, RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { animated, useSpring } from 'react-spring'\nimport { sizes } from '../../theme/theme'\nimport { ArcherElement } from 'react-archer'\nimport ControlMenu from '../LargeIcon/ControlMenu'\nimport MarkContainerIO from '../LargeIcon/MarkContainerIO'\nimport { CONTAINER } from '../../audioModules/moduleTypes'\nimport ContainerControlMenu from '../LargeIcon/ContainerControlMenu'\nimport getModuleColor from '../../theme/moduleColor'\nimport { bothStringsIn } from '../../helpers/genFuncs'\nimport { iconOnDrop, iconOnDragStart } from './callbacks'\n\ninterface Props {\n  mod: Module\n  gridCol: number\n  gridRow: number\n}\n\nfunction ModuleViewIcon({ mod, gridCol, gridRow }: Props) {\n  const classes = useJSS()\n  const [isLarge, setLarge] = useState(false)\n  const [reRender, toReRender] = useState(false)\n  const reRenderIcon = () => { toReRender(!reRender) }\n\n  const iconStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    borderStyle: isLarge ? 'solid' : 'none',\n    backgroundColor: getModuleColor(mod.moduleType),\n    width: isLarge ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isLarge ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon\n  }\n  const archerElementStyle: CSS.Properties = {\n    gridColumn: `${gridCol} / span 1`,\n    gridRow: `${gridRow} / span 1`,\n    width: isLarge ? sizes.moduleView.bigIconWidth : sizes.moduleView.icon,\n    height: isLarge ? sizes.moduleView.bigIconHeight : sizes.moduleView.icon,\n  }\n\n  const nameSpring = useSpring({\n    fontSize: isLarge ? sizes.text.medium : sizes.text.small,\n    config: {\n      tension: 350,\n      clamp: true\n    }\n  })\n\n  const { modules, baseContainerID, connections } = useSelector((state: RootState) => state)\n  const dispatch = useDispatch()\n  return (\n    <Fragment>\n      <div \n        className={classes.Icon} \n        style={iconStyle}\n        onPointerDown={e => e.stopPropagation()}\n        onDragOver={event => {\n          event.preventDefault()\n        }}\n        onDrop={e => {\n          iconOnDrop(e, modules, mod, dispatch)\n        }}\n        draggable={!isLarge}\n        onDragStart={e => {\n          iconOnDragStart(e, mod)\n        }}\n        onDragEnd={() => {\n          window.setFillIsExpanded(false)\n        }}\n        onClick={e => {\n          e.stopPropagation()\n          setLarge(!isLarge)\n          window.setTimeout(window.refreshArcherContainer, 0)\n        }}\n        onContextMenu={e => {\n          e.preventDefault()\n          e.persist()\n          window.openModuleContextMenu(e, mod.id)\n        }}\n      >\n        {\n        mod.connectionOutputs.length === 0 ? null\n        :\n        <div className={classes.IconConnector}\n          draggable={true}\n          onDragStart={(e) => {\n            e.stopPropagation()\n            e.dataTransfer.setData('fromID', mod.id)\n          }}\n        />\n        }\n        <animated.div className={classes.IconName} style={nameSpring} onClick={e => {\n          if (isLarge) {\n            e.stopPropagation()\n            window.openModuleRenameMenu(mod.id)\n          }\n        }}>\n          {mod.name}\n        </animated.div>\n        {\n        !isLarge ? null :\n        <div className={classes.IconControlContainer} \n          onClick={e => e.stopPropagation()}\n        >\n          {mod.moduleType === CONTAINER ? <ContainerControlMenu selectedModule={mod as ContainerModule} reRenderIcon={reRenderIcon} /> : null}\n          <ControlMenu audioModule={window.audioModules[mod.id]} selectedModule={mod} reRenderIcon={reRenderIcon} />\n          <MarkContainerIO baseContainerID={baseContainerID} selectedModule={mod} />\n        </div>\n        }\n      </div>\n      <div className={classes.ArcherElement}\n        style={archerElementStyle}\n      >\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' input'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'blue',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${1} / span 1`,\n          gridRow: `${3} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' controls'}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n              //backgroundColor: 'yellow',\n            }}></div>\n          </ArcherElement>\n        </div>\n        <div style={{\n          gridColumn: `${3} / span 1`,\n          gridRow: `${1} / span 1`,\n        }}>\n          <ArcherElement\n            id={mod.id + ' output'}\n            relations={mod.outputs.filter(connectionID => {\n              const { fromID, toID } = connections[connectionID]\n              return bothStringsIn(fromID, toID, (modules[window.fillContainerID] as ContainerModule).childModules)\n            }).map(connectionID => {\n              const { toID, param } = connections[connectionID]\n              return {\n                targetId: param === '' ? toID + ' input' : toID + ' controls',\n                targetAnchor: 'left',\n                sourceAnchor: 'right',\n                style: {\n                  strokeColor: param === '' ? 'red' : 'blue',\n                }\n              }\n            })}\n          >\n            <div style={{\n              width: '10px',\n              height: '10px',\n            }} />\n          </ArcherElement>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ModuleViewIcon","import { DragEvent } from 'react'\nimport { Modules, Module } from '../../redux/stateTSTypes'\nimport { MOVE, COPY } from '../DropSquare/DropSquare'\nimport { Dispatch } from 'redux'\nimport { moveModule } from '../../redux/allActions'\n\nexport function iconOnDrop(\n  e: DragEvent<HTMLDivElement>,\n  modules: Modules,\n  mod: Module,\n  dispatch: Dispatch,\n) {\n  e.stopPropagation()\n  const id = e.dataTransfer.getData('id')\n  const moduleDragType = e.dataTransfer.getData('type')\n  if (id) {\n    const possiblyMod = modules[id]\n    if (possiblyMod && moduleDragType === MOVE) {\n      const fromRow = e.dataTransfer.getData('fromRow')\n      const fromCol = e.dataTransfer.getData('fromCol')\n      window.setFillIsExpanded(false)\n      dispatch(moveModule(id, mod.row, mod.col))\n      dispatch(moveModule(mod.id, Number(fromRow), Number(fromCol)))\n      window.setTimeout(window.refreshArcherContainer, 100)\n    }\n  } else {\n    if (mod.connectionInputs.length === 0 && window.audioModules[mod.id].connectingParamIDs.length === 0) {\n      alert('mod cannot accept input')\n    } else {\n      const fromID = e.dataTransfer.getData('fromID')\n      if (fromID) {\n        window.openConnectionMenu(fromID, mod.id)\n      }\n    }\n  }\n}\n\nexport function iconOnDragStart(\n  e: DragEvent<HTMLDivElement>,\n  mod: Module\n) {\n  if (e.shiftKey) {\n    e.dataTransfer.setData('type', COPY)\n  } else {\n    e.dataTransfer.setData('type', MOVE)\n  }\n  e.dataTransfer.setData('id', mod.id)\n  e.dataTransfer.setData('fromRow', `${mod.row}`)\n  e.dataTransfer.setData('fromCol', `${mod.col}`)\n  window.setFillIsExpanded(true)\n}","import React, { useState, useRef } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\nimport ModuleViewIcon from './Icon'\nimport { useSelector } from 'react-redux'\nimport { RootState, ContainerModule } from '../../redux/stateTSTypes'\nimport { getGridRange } from './helpers'\nimport { range } from '../../helpers/genFuncs'\nimport DropSquare from '../DropSquare/DropSquare'\nimport { ArcherContainer } from 'react-archer'\nimport { Button } from '../all'\n\ndeclare global {\n  interface Window { \n    setFillIsExpanded: (isExpanded: boolean) => void\n    refreshArcherContainer: () => void\n    reRenderFillContainer: () => void\n  }\n}\n\nfunction ModuleViewFill() {\n  const classes = useJSS()\n  const [isExpanded, setIsExpanded] = useState(false)\n  window.setFillIsExpanded = setIsExpanded\n  const [reRender, toReRender] = useState(false)\n  window.reRenderFillContainer = () => { toReRender(!reRender) }\n  const { modules, baseContainerID } = useSelector((state: RootState) => {\n    return {\n      modules: state.modules,\n      baseContainerID: state.baseContainerID\n    }\n  })\n  const containerModule = modules[window.fillContainerID] as ContainerModule\n  const { maxRow, maxCol } = getGridRange(containerModule.childModules, modules)\n  let gridStyle: CSS.Properties\n  const isEmpty = containerModule.childModules.length === 0\n  if (isEmpty) {\n    gridStyle = {\n      gridTemplateRows: `repeat(${1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${1}, ${'auto'})`,\n    }\n  } else {\n    gridStyle = {\n      gridTemplateRows: `repeat(${isExpanded ? maxRow + 2 : maxRow + 1}, ${'auto'})`,\n      gridTemplateColumns: `repeat(${isExpanded ? maxCol + 2 : maxCol + 1}, ${'auto'})`,\n    }\n  }\n  const archerContainerRef = useRef<ArcherContainer>(null)\n  window.refreshArcherContainer = () => {archerContainerRef.current?.refreshScreen()}\n  return (\n    <div className={classes.FillBounder}>\n      <div className={classes.FillHeaderBounder}>\n        <div className={classes.FillHeader}\n          style={{ width: `${containerModule.name.length / 2}em` }}\n          onClick={(e) => {\n            e.stopPropagation()\n            window.openModuleRenameMenu(window.fillContainerID)\n          }}\n          onPointerDown={e => e.stopPropagation()}\n        >\n          {containerModule.name}\n        </div>\n        {containerModule.id === baseContainerID ? null :\n        <Button style={{ height: '.7em' }}\n          onPointerDown={() => {\n            window.fillContainerID = containerModule.parentID as string\n            window.reRenderFillContainer()\n          }}\n        >\n          <div>back</div>\n        </Button>\n        }\n      </div>\n      <ArcherContainer ref={archerContainerRef}\n        svgContainerStyle={{ zIndex: -1 }}\n        strokeWidth={4}\n        arrowLength={0}\n      >\n        <div className={classes.Fill} style={gridStyle}>\n          {isEmpty ? <DropSquare row={0} col={0}/> :\n          range(0, isExpanded ? maxRow + 2 : maxRow + 1).map(row => {\n            return range(0, isExpanded ? maxCol + 2 : maxCol + 1).map(col => {\n              return (\n                <DropSquare\n                  key={`${row} ${col}`}\n                  row={row} \n                  col={col}\n                />\n              )\n            })\n          }).flat()}\n          {containerModule.childModules.map(moduleID => {\n            const mod = modules[moduleID]\n            return (\n              <ModuleViewIcon\n                key={mod.id}\n                mod={mod}\n                gridRow={mod.row + 1}\n                gridCol={mod.col + 1}\n              />\n            )\n          })}\n        </div>\n      </ArcherContainer>\n    </div>\n  )\n}\n\nexport default ModuleViewFill","import React, { ReactNode, WheelEvent, RefObject } from 'react'\nimport CSS from 'csstype'\n\ninterface Props {\n  children: ReactNode\n  className?: string\n  style?: CSS.Properties\n  ref: RefObject<HTMLDivElement>\n}\n\nconst baseStyle = {\n  overflowY: 'hidden',\n  overflowX: 'scroll',\n  display: 'flex',\n}\n\nfunction HorizontalScrollDiv({ children, className, style, ref }: Props) {\n  function onWheel(event: WheelEvent) {\n    if(ref && ref.current) {\n      ref.current.scrollLeft += event.deltaY\n    } \n  }\n  return (\n    <div ref={ref} className={className} style={Object.assign({}, baseStyle, style)} onWheel={onWheel}>\n      {children}\n    </div>\n  )\n}\n\nexport default HorizontalScrollDiv","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuBounder: {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: 100,\n  },\n\n  CenterMenu: {\n    backgroundColor: colors.centerMenu,\n    position: 'absolute',\n    top: '50vh',\n    left: '50vw',\n    transform: 'translate(-50%, calc(-50% - 50px))',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '2vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    minWidth: '15vw',\n    padding: '1vmin 2vmin 2vmin 2vmin',\n    border: '1px solid white',\n    zIndex: 101,\n  },\n\n  Header: {\n    padding: '1vmin 2vmin',\n    margin: '0vmin 0vmin 2vmin 0vmin',\n    borderColor: 'white',\n    borderStyle: 'none none solid none',\n    fontSize: sizes.text.large,\n  },\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\n\ninterface Props {\n  children: React.ReactNode\n  header: string\n  onClose: () => void\n}\n\nfunction CenterMenu({ children, header, onClose }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.CenterMenuBounder}\n      onPointerDown={e => {\n        e.stopPropagation()\n        onClose()\n      }}\n    >\n      <div className={classes.CenterMenu}\n        onPointerDown={(e) => {e.stopPropagation()}} \n      >\n        <div className={classes.Header}>\n          {header}\n        </div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default CenterMenu","import { createUseStyles } from 'react-jss'\n//import { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  TestingArea: {\n    backgroundColor: 'black',\n    position: 'absolute',\n    top: '45vh',\n    left: '25vw',\n    width: '45vw',\n    height: '50vh',\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 150,\n  },\n\n  ButtonDiv: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n  },\n\n  Button: {\n    margin: '2vmin',\n    padding: '1vmin',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport useJSS from './style'\nimport audioCtx from '../../audioCtx'\n\n/*\nvar splitter = audioCtx.createChannelSplitter(2)\n\nvar lpf = audioCtx.createBiquadFilter()\n  lpf.type = \"lowpass\"\n  lpf.frequency.value = 440\n  lpf.Q.value = 10\n\n\nnavigator.mediaDevices.getUserMedia({\n  audio: {\n    echoCancellation: false,\n    autoGainControl: false,\n    noiseSuppression: false,\n    latency: 0,\n    channelCount: 3,\n  }\n}).then(stream => {\n  const src = audioCtx.createMediaStreamSource(stream)\n  const splitter = audioCtx.createChannelSplitter(3)\n  const gain0 = audioCtx.createGain()\n  const gain1 = audioCtx.createGain()\n  const gain2 = audioCtx.createGain()\n  //const merger = audioCtx.createChannelMerger(3)\n  //const dly = audioCtx.createDelay(); dly.delayTime.value = .18\n  //const dlyFdbk = audioCtx.createGain(); dlyFdbk.gain.value = .6\n  //dly.connect(dlyFdbk); dlyFdbk.connect(dly)\n  const master = audioCtx.createGain(); master.gain.value = 1\n\n  console.log(stream.getAudioTracks()[0].getCapabilities())\n\n  master.gain.value = 1\n\n  src.connect(splitter)\n  splitter.connect(gain0, 0)\n  splitter.connect(gain1, 1)\n  splitter.connect(gain2, 2)\n  gain0.connect(master)\n  gain1.connect(master)\n  gain2.connect(master)\n  //merger.connect(master)\n  master.connect(audioCtx.destination)\n})\n*/\n\nfunction MrTesterr() {\n  const classes = useJSS()\n  return (\n    <div className={classes.TestingArea}>\n      {'mr testerrr'}\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'green' }}\n          onClick={() => {\n            audioCtx.resume()\n          }}\n        >start ctx</div>\n      </div>\n      <div className={classes.ButtonDiv}>\n        <div className={classes.Button}\n          style={{ backgroundColor: 'red' }}\n          onClick={() => {\n            audioCtx.suspend()\n          }}\n        >stop ctx</div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default MrTesterr","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Button: {\n    backgroundColor: colors.defaultButton,\n    borderColor: 'transparent',\n    borderRadius: '1vmin',\n    borderStyle: 'solid',\n    '&:active': {\n      borderColor: 'transparent',\n    },\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: 'white',\n    },\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '1vmin',\n    margin: '1vmin',\n    textAlign: 'center',\n  },\n})\n\nexport default useJSS","import React, { RefObject, KeyboardEvent } from 'react'\nimport useJSS from './style'\nimport CSS from 'csstype'\n\ninterface Props {\n  className?: string\n  children?: React.ReactNode\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  style?: CSS.Properties\n  onPointerDown?: (e: React.PointerEvent<HTMLDivElement>) => void\n  ref?: RefObject<HTMLDivElement>\n  onKeyDown?: (e: KeyboardEvent<HTMLDivElement>) => void\n}\n\nfunction Button({ className, onClick, children, style, onPointerDown, ref, onKeyDown }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={className ? `${classes.Button} ${className}` : classes.Button}\n      onClick={onClick}\n      onPointerDown={onPointerDown}\n      style={style}\n      ref={ref}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Button","import audioCtx from \"../../audioCtx\"\nimport { RefObject } from 'react'\nimport { BaseAM, ControlSetFuncs, FILE, BUTTON, ControlData } from \"../moduleTypes\"\n\nexport interface MediaElementModule extends BaseAM {\n  audioNode: MediaElementAudioSourceNode\n  ref: RefObject<HTMLAudioElement>\n}\n\nexport function makeMediaElementControlData(): ControlData {\n  return {\n    'choose file': {\n      controlType: FILE,\n    },\n    'play': {\n      controlType: BUTTON,\n    },\n    'pause': {\n      controlType: BUTTON,\n    }\n  }\n}\n\nfunction makeMediaElement(audioRef: RefObject<HTMLAudioElement>): MediaElementModule | null {\n  if (audioRef.current) {\n    const mediaElement = audioCtx.createMediaElementSource(audioRef.current)\n\n    const controlSetFuncs: ControlSetFuncs = {\n      'choose file': (url: string) => {\n        (audioRef.current as HTMLAudioElement).src = url\n      },\n      'pause': () => {\n        (audioRef.current as HTMLAudioElement).pause()\n      },\n      'play': () => {\n        (audioRef.current as HTMLAudioElement).play()\n      }\n    }\n\n    return {\n      audioNode: mediaElement,\n      ref: audioRef,\n      connectingParamIDs: [],\n      controlSetFuncs,\n    }\n  } else {\n    return null\n  }\n}\n\nexport default makeMediaElement","import React, { useRef, useEffect } from 'react'\nimport makeMediaElement from '../../audioModules/modules/mediaElement'\n\ninterface Props {\n  id: string\n}\n\nfunction AudioTag({ id }: Props) {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  useEffect(() => {\n    if (!window.audioModules[id]) {\n      const possiblyMediaElement = makeMediaElement(audioRef)\n      if (possiblyMediaElement) {\n        window.audioModules = { ...window.audioModules, [id]: possiblyMediaElement }\n      }\n    }\n  })\n  return (\n    <audio\n      ref={audioRef}\n      autoPlay\n    />\n  )\n}\n\nexport default AudioTag","import React, { Fragment, useState } from 'react'\nimport AudioTag from './AudioTag'\n\ninterface AudioTag {\n  id: string\n  srcName: string\n  ref?: React.RefObject<HTMLAudioElement>\n}\n\ninterface AudioTags {\n  [id: string]: AudioTag\n}\n\ndeclare global {\n  interface Window {\n    audioTags: AudioTags\n    addAudioTag: (id: string) => void\n    reRenderAudioTags: () => void\n    numberRestores: number\n  }\n}\n\nwindow.addAudioTag = (id: string) => {\n  window.audioTags[id] = {\n    id: id,\n    srcName: ''\n  }\n}\n\nwindow.audioTags = {}\nwindow.numberRestores = 0\n\nfunction AudioTags() {\n  const [reRender, toReRender] = useState(false)\n  window.reRenderAudioTags = () => { toReRender(!reRender) }\n  const ids = Object.keys(window.audioTags)\n  return (\n    <Fragment>\n      {ids.map((id) => {\n        return (\n          <AudioTag\n            key={id + window.numberRestores}\n            id={id}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default AudioTags","import {createUseStyles} from 'react-jss'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    userSelect: 'none',\n    margin: '10px',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    padding: '1vmin',\n  },\n\n  SwitchSVG: {\n    marginLeft: '1.5vmin',\n    flexShrink: 0,\n    //padding: '.5vmin',\n  },\n})\n\nexport default useJSS;","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\nimport { colors, sizes } from '../../theme/theme'\n\ninterface Props {\n  text: string,\n  onSwitch: (newState: boolean) => void,\n  initState: boolean,\n  style?: object,\n}\n\nconst heightDif = 1\n\nconst fullWidth = 2 * sizes.switch.diameter\nconst fullHeight = sizes.switch.diameter + heightDif\n\nconst rectWidth = 1.5 * sizes.switch.diameter\nconst rectHeight = sizes.switch.diameter - heightDif\nconst rectX = sizes.switch.diameter / 4\nconst rectY = heightDif\n\nconst circleCY = (sizes.switch.diameter + heightDif) / 2\n\n\nfunction Switch({ text, onSwitch, initState, style }: Props) {\n  const [isSwitched, setSwitched] = useState(initState)\n  const classes = useJSS()\n  const spring = useSpring({\n    cx: isSwitched ? `${fullWidth - sizes.switch.diameter / 2}vmin` : `${sizes.switch.diameter / 2}vmin`,\n    fill: isSwitched ? 'green' : 'red',\n    config: {\n      tension: 250,\n    },\n  })\n  return (\n    <div className={classes.Bounder} style={style}>\n      <div\n        onClick={() => { onSwitch(!isSwitched); setSwitched(!isSwitched) }}\n      >\n        {text}\n      </div>\n      <svg className={classes.SwitchSVG}\n        width={`${fullWidth}vmin`}\n        height={`${fullHeight}vmin`}\n        onClick={() => {\n          onSwitch(!isSwitched); setSwitched(!isSwitched)\n        }}\n      >\n        <rect width={`${rectWidth}vmin`} height={`${rectHeight}vmin`} x={`${rectX}vmin`} y={`${rectY}vmin`} rx='10' ry='10' fill={colors.grey}/>\n        <animated.circle cx={spring.cx} cy={`${circleCY}vmin`} r={`${sizes.switch.diameter / 2}vmin`} fill={spring.fill}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Switch","import { createUseStyles } from 'react-jss'\nimport { sizes, colors } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  KnobContainer: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n    gridTemplateColumns: 'auto',\n    placeItems: 'center',\n    margin: '1vmin',\n  },\n\n  KnobSVG: {\n    gridRow: '1',\n    gridColumn: '1',\n    width: `${sizes.knob.size + 1}vmin`,\n    height: `${sizes.knob.size + 1}vmin`,\n    zIndex: 9,\n    //boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n  },\n\n  KnobText: {\n    gridRow: '1',\n    gridColumn: '1',\n    //display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontSize: sizes.text.xxsmall,\n    textAlign: 'center',\n    color: colors.knobText,\n    zIndex: 10,\n    width: '4em',\n    borderStyle: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0,\n    }\n  },\n\n  InteractionLayer: {\n    gridRow: '1',\n    gridColumn: '1',\n    zIndex: 11,\n    width: `${sizes.knob.size}vmin`,\n    height: `${sizes.knob.size}vmin`,\n  },\n\n  SettingsButton: {\n    width: `${sizes.knob.size / 6}vmin`,\n    height: `${sizes.knob.size / 6}vmin`,\n    gridRow: '1',\n    gridColumn: '1',\n    placeSelf: 'end',\n    zIndex: 12,\n  }\n})\n\nexport default useJSS","import React, { useRef } from 'react'\nimport CSS from 'csstype'\nimport { sizes, colors } from '../../theme/theme'\nimport useJSS from './style'\nimport { clamp } from '../../helpers/genFuncs'\nimport { PointerEventCallback } from '../PointerLayer/PointerLayer'\nimport { getRotation, makeValString } from './helpers'\nimport settingsSVG from '../../icons/settings.svg'\n\ninterface Props {\n  initValue: number\n  range: [number, number]\n  svgStyle?: CSS.Properties\n  circleStyle?: CSS.Properties\n  onChange?: (newVal: number) => void\n  onEveryChange?: (newVal: number) => void\n  onSettingsClick?: () => void\n  inputVal: string\n  setInputVal: (newValString: string) => void\n}\n\nlet justClicked = false\n\nfunction StatelessKnob({ initValue, range, onChange, onEveryChange, onSettingsClick, inputVal, setInputVal }: Props) {\n  const classes = useJSS()\n  const svgRef = useRef<SVGSVGElement>(null)\n  const scale = (range[1] - range[0]) * sizes.knob.sensitivity / 200\n  let tempVal = clamp(initValue, range)\n  const textRef = useRef<HTMLInputElement>(null)\n  const onPointerMove: PointerEventCallback = e => {\n    tempVal = clamp(tempVal - e.movementY * scale, range)\n    if (svgRef.current) { svgRef.current.style.transform = `rotate(${getRotation(tempVal, range)}deg)` }\n    if (textRef.current) { textRef.current.value = `${makeValString(tempVal)}` }\n    if (onEveryChange) { onEveryChange(tempVal) }\n  }\n  const onPointerUp: PointerEventCallback = () => {\n    if (onChange) { onChange(tempVal) }\n    setInputVal(makeValString(tempVal))\n  }\n  return (\n    <div className={classes.KnobContainer}>\n      <svg className={classes.KnobSVG} width={`${sizes.knob.size + 1}vmin`} height={`${sizes.knob.size + 1}vmin`} ref={svgRef}\n        style={{ transform: `rotate(${getRotation(initValue, range)}deg)` }}\n      >\n        <circle cx={`${(sizes.knob.size + 1) / 2}vmin`} cy={`${(sizes.knob.size + 1) / 2}vmin`} r={`${sizes.knob.size / 2}vmin`} \n        stroke={colors.knobBorder} strokeWidth={sizes.knob.borderWidth} fill={colors.knob} />\n        <rect width={`${sizes.knob.markerWidth}vmin`} height={`${sizes.knob.markerHeight}vmin`} \n          x={`${(sizes.knob.size + 1) / 2 - sizes.knob.markerWidth / 2}vmin`} y='.5vmin' fill={colors.knobMarker}/>\n      </svg>\n      <input className={classes.KnobText}\n        ref={textRef}\n        onChange={e => {\n          setInputVal(e.target.value)\n          if (onEveryChange) { onEveryChange(clamp(Number(e.target.value), range)) }\n        }}\n        onBlur={e => {\n          if (e.target.value.length !== 0) {\n            const newVal = clamp(Number(e.target.value), range)\n            if (onChange) {\n              onChange(newVal)\n            }\n            setInputVal(makeValString(newVal))\n          } else {\n            if (textRef.current) {\n              textRef.current.value = inputVal\n            }\n          }\n        }}\n        onKeyDown={e => {\n          if (e.keyCode === 13) {\n            textRef.current?.blur()\n          }\n        }}\n        type='number'\n        value={inputVal}\n      />\n      <div className={classes.InteractionLayer}\n        title={`${initValue}`}\n        onClick={e => e.stopPropagation()}\n        onDragStart={e => e.stopPropagation()}\n        onPointerDown={e => {\n          e.stopPropagation()\n          e.preventDefault()\n          if (e.shiftKey) {\n            if (textRef.current) {\n              textRef.current.placeholder = textRef.current.value\n              textRef.current.value = ''\n              textRef.current.focus()\n            }\n          } else {\n            if (justClicked) {\n              if (textRef.current) {\n                textRef.current.placeholder = textRef.current.value\n                textRef.current.value = ''\n                textRef.current.focus()\n              }\n            } else {\n              window.openPointerLayer(e.pointerId, onPointerMove, onPointerUp)\n              justClicked = true\n              window.setTimeout(() => { justClicked = false }, 200)\n            }\n          }\n        }}\n      />\n      {!onSettingsClick ? null\n      :\n      <img className={classes.SettingsButton}\n        title='edit knob range'\n        src={settingsSVG}\n        alt='settings'\n        onClick={onSettingsClick}\n      />\n      }\n    </div>\n  )\n}\n\nexport default StatelessKnob","import React, { useState } from 'react'\nimport StatelessKnob from './StatelessKnob'\nimport { clamp } from '../../helpers/genFuncs'\nimport { makeValString } from './helpers'\n\ninterface Props {\n  initValue: number\n  onChange?: (newVal: number) => void\n  onEveryChange: (newVal: number) => void\n  range: [number, number]\n  onSettingsClick?: () => void\n}\n\nfunction Knob({ initValue, range, onChange, onEveryChange, onSettingsClick }: Props) {\n  const [val, setVal] = useState(clamp(initValue, range))\n  const [inputVal, setInputVal] = useState(makeValString(val))\n  return (\n    <StatelessKnob\n      initValue={val}\n      range={range}\n      onChange={newVal => {\n        if (onChange) { onChange(newVal) }\n        setVal(newVal)\n      }}\n      onEveryChange={onEveryChange}\n      onSettingsClick={onSettingsClick}\n      inputVal={inputVal}\n      setInputVal={setInputVal}\n    />\n  )\n}\n\nexport default Knob","import { createUseStyles } from 'react-jss'\n//import { colors, sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  PointerLayer: {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 300,\n  },\n})\n\nexport default useJSS","import React, { PointerEvent, useRef, useEffect } from 'react'\nimport useJSS from './style'\n\nexport type PointerEventCallback = (e: PointerEvent<HTMLDivElement>) => void\n\nexport interface PointerLayerData {\n  isOpen: boolean\n  pointerId: number\n  onPointerMove: PointerEventCallback\n  onPointerUp: PointerEventCallback\n}\n\ninterface Props {\n  pointerLayerData: PointerLayerData\n  resetPointerLayerData: () => void\n}\n\nfunction PointerLayer({ pointerLayerData, resetPointerLayerData }: Props) {\n  const classes = useJSS()\n  const { pointerId, onPointerMove, onPointerUp } = pointerLayerData\n  const pointerLayerRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    //pointerLayerRef.current?.setPointerCapture(pointerId)\n  })\n  return (\n    <div className={classes.PointerLayer}\n      ref={pointerLayerRef}\n      onPointerMove={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerMove(e)\n        }\n      }}\n      onPointerUp={(e) => {\n        if (e.pointerId === pointerId) {\n          onPointerUp(e)\n          //pointerLayerRef.current?.releasePointerCapture(pointerId)\n          resetPointerLayerData()\n        }\n      }}\n    />   \n  )\n}\n\nexport default PointerLayer","import { Range } from \"../../audioModules/moduleTypes\"\nimport { ContainerControl } from \"../../redux/stateTSTypes\"\n\nexport function makeConnectionMenuData(isOpen: boolean, fromID = '', toID = '') {\n  return {\n    isOpen,\n    fromID,\n    toID,\n  }\n}\n\nexport function makeKnobRangeSetMenuData(isOpen: boolean, modID = '', controlID = '', onChangeSubmit: (newRange: Range) => void = () => {}) {\n  return {\n    isOpen,\n    modID,\n    controlID,\n    onChangeSubmit,\n  }\n}\n\nexport function makeAnalyzerRangeSetMenuData(isOpen: boolean, range: Range = [0, 0], onChangeSubmit: (newRange: Range) => void = () => { }) {\n  return {\n    isOpen,\n    range,\n    onChangeSubmit,\n  }\n}\n\nexport function makeSaveMenuData(isOpen: boolean, saveList: string[] = [], onClose = () => {}) {\n  return {\n    isOpen,\n    saveList,\n    onClose,\n  }\n}\n\nexport function makeContainerSaveMenuData(isOpen: boolean, id = '', saveList: string[] = [], onClose = () => { }) {\n  return {\n    isOpen,\n    id,\n    saveList,\n    onClose,\n  }\n}\n\nexport function makeConfirmDeleteMenuData(isOpen: boolean, saveName = '', onClose = () => {}) {\n  return {\n    isOpen,\n    saveName,\n    onClose\n  }\n}\n\nexport function makeRenameControlMenuData(isOpen: boolean, placeholder = '', parentModID = '', containerControl?: ContainerControl) {\n  return {\n    isOpen,\n    placeholder,\n    containerControl,\n    parentModID\n  }\n}","import { createUseStyles } from 'react-jss'\n\nconst indent = '2vmin'\n\nconst useJSS = createUseStyles({\n  IORecursionBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: '5vmin',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    height: '60vmin',\n    width: '90%',\n    overflowY: 'scroll',\n    overflowX: 'visible',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n      borderRadius: '2px'\n    },\n  },\n  IORecursionInnerBounder: {\n    display: 'flex',\n    alignSelf: 'flex-start',\n    marginLeft: indent,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n})\n\nexport default useJSS","import React, { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\nimport Button from '../../Button/Button'\nimport useJSS from './style'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  id: string\n  isOutput: boolean\n  setConnection: (actualIOID: string, ioIndex: number) => void \n}\n\nfunction IORecursion({ id, isOutput, setConnection }: Props) {\n  const [ isContainer, name, io ] = useSelector((state: RootState) => {\n    return [\n      state.modules[id].moduleType === CONTAINER,\n      state.modules[id].name,\n      isOutput ? state.modules[id].connectionOutputs : state.modules[id].connectionInputs\n    ]\n  })\n  const [open, setOpen] = useState(false)\n  const classes = useJSS()\n  if (isContainer) {\n    return (\n      <Fragment>\n        <Button style={{ color: colors.expandableName }}\n          onClick={() => { setOpen(!open) }}\n        >{name}</Button>\n        {!open ? null\n        :\n        <div className={classes.IORecursionInnerBounder}>\n          {io.map(ioID => {\n            return (\n              <IORecursion key={ioID} id={ioID} isOutput={isOutput} setConnection={setConnection}/>\n            )\n          })}\n        </div>\n        }\n      </Fragment>\n    )\n  } else { // base case\n    if (io.length > 1) {\n      return (\n        <Fragment>\n          <Button style={{ color: colors.expandableName }}\n            onClick={() => { setOpen(!open) }}\n          >{name}</Button>\n          {!open ? null\n          :\n          <div className={classes.IORecursionInnerBounder}>\n            {io.map((ioID, index) => {\n              return (\n                <Button style={{ color: colors.connectableName }}\n                  onClick={() => { setConnection(id, index) }}\n                >{ioID}</Button>\n              )\n            })}\n          </div>\n          }\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button\n          onClick={() => { setConnection(id, 0) }}\n        >{name}</Button>\n      )\n    }\n  }\n}\n\nexport default IORecursion","import { Module, Connections } from \"../../../redux/stateTSTypes\";\n\nexport function connectionExists(connections: Connections, fromMod: Module, actualToID: string, newParam = '') {\n  for(var i = 0; i < fromMod.outputs.length; i++) {\n    const { actualInputID, param } = connections[fromMod.outputs[i]]\n    if (actualInputID === actualToID && newParam === param) {\n      return true\n    }\n  }\n  return false\n}","import React, { Fragment, useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport { connect } from '../../../audioModules/connection'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConnectingAudioModule, CONTAINER } from '../../../audioModules/moduleTypes'\nimport { addConnection } from '../../../redux/allActions'\nimport CSS from 'csstype'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport IORecursion from './IORecursion'\nimport useJSS from './style'\nimport { connectionExists } from './helpers'\n\ninterface Props {\n  fromID: string\n  toID: string\n  onClose: () => void\n}\n\nexport const CHOOSE_OUTPUT = 'CHOOSE_OUTPUT'\nexport const CONNECT_TO = 'CONNECT_TO'\nexport const CHOOSE_PARAM = 'CHOOSE_PARAM'\nexport const CHOOSE_INPUT = 'CHOOSE_INPUT'\n\nconst buttonStyle: CSS.Properties = {\n  \n}\n\nfunction ConnectionMenu({ fromID, toID, onClose }: Props) {\n  const classes = useJSS()\n  const am = window.audioModules\n  const { modules, connections } = useSelector((state: RootState) => state)\n  const fromMod = modules[fromID]\n  const toMod = modules[toID]\n  const [outputIndex, setOutputIndex] = useState(0)\n  const [inputIndex, setInputIndex] = useState(0)\n  const [actualFromID, setActualFromID] = useState(fromID)\n  const [actualToID, setActualToID] = useState(toID)\n  const dispatch = useDispatch()\n  const isFromContainer = fromMod.moduleType === CONTAINER\n  const isToContainer = toMod.moduleType === CONTAINER\n  const initMenu = fromMod.connectionOutputs.length > 1 || isFromContainer ? CHOOSE_OUTPUT :\n    toMod.connectionInputs.length > 1 || isToContainer ? CHOOSE_INPUT : CONNECT_TO\n  const [openMenu, setOpenMenu] = useState(initMenu)\n  return (\n    <Fragment>\n      {openMenu === CHOOSE_OUTPUT\n      ?\n      <CenterMenu header={'choose output'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {fromMod.connectionOutputs.map((outputID, index) => {\n            if (isFromContainer) {\n              return (\n                <IORecursion key={outputID + 'output'} id={isFromContainer ? outputID : fromID} isOutput={true}\n                  setConnection={(actualIOID, ioIndex) => {\n                    setActualFromID(actualIOID)\n                    setOutputIndex(ioIndex)\n                    if (toMod.connectionInputs.length > 1 || toMod.moduleType === CONTAINER) {\n                      setOpenMenu(CHOOSE_INPUT)\n                    } else {\n                      setOpenMenu(CONNECT_TO)\n                    }\n                  }}\n                />\n              )\n            } else {\n              return (\n                <Button\n                  onClick={() => {\n                    setOutputIndex(index)\n                    if (toMod.connectionInputs.length > 1 || toMod.moduleType === CONTAINER) {\n                      setOpenMenu(CHOOSE_INPUT)\n                    } else {\n                      setOpenMenu(CONNECT_TO)\n                    }\n                  }}\n                >\n                  {fromMod.connectionOutputs[index]}\n                </Button>\n              )\n            }\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_INPUT\n      ?\n      <CenterMenu header={'choose input'} onClose={onClose}>\n        <div className={classes.IORecursionBounder}>\n          {toMod.connectionInputs.map((inputID, index) => {\n            if (isToContainer) {\n              return (\n                <IORecursion key={inputID + 'input'} id={isToContainer ? inputID : toID} isOutput={false}\n                  setConnection={(actualIOID, ioIndex) => {\n                    setActualToID(actualIOID)\n                    setInputIndex(ioIndex)\n                    setOpenMenu(CONNECT_TO)\n                  }}\n                />\n              )\n            } else {\n              return (\n                <Button\n                  onClick={() => {\n                    setInputIndex(index)\n                    setOpenMenu(CONNECT_TO)\n                  }}\n                >\n                  {toMod.connectionInputs[index]}\n                </Button>\n              )\n            }\n          })}\n        </div>\n      </CenterMenu>\n      :\n      openMenu === CONNECT_TO\n      ?\n      <CenterMenu header={`connect ${isFromContainer ? fromMod.name + ' - ' + modules[actualFromID].name : fromMod.name} to ${isToContainer ? toMod.name + ' - ' + modules[actualToID].name : toMod.name}`} onClose={onClose}>\n        {(isToContainer ? modules[toMod.connectionInputs[inputIndex]].connectionInputs.length === 0 : toMod.connectionInputs.length === 0) ? null :\n        <Button style={buttonStyle}\n          onClick={() => {\n            if (!connectionExists(connections, fromMod, actualToID)) {\n              connect(\n                am[actualFromID] as ConnectingAudioModule,\n                am[actualToID] as ConnectingAudioModule,\n                '',\n                outputIndex,\n                inputIndex,\n              )\n              dispatch(addConnection(\n                fromID,\n                toID,\n                '',\n                outputIndex,\n                inputIndex,\n                isFromContainer ? actualFromID : undefined,\n                isToContainer ? actualToID : undefined,\n              ))\n            } else {\n              alert('modules already connected')\n            }\n            onClose()\n          }}\n        >module</Button>}\n        {\n        am[actualToID].connectingParamIDs.length === 0 ? null\n        :\n        <Button style={buttonStyle}\n          onClick={(e) => {\n            e.stopPropagation()\n            setOpenMenu(CHOOSE_PARAM)\n          }}\n        >params</Button>\n        }\n      </CenterMenu>\n      :\n      openMenu === CHOOSE_PARAM\n      ?\n      <CenterMenu header={'props'} onClose={onClose}>\n        {am[actualToID].connectingParamIDs.map((paramID, key) => {\n          return (\n            <Button style={buttonStyle}\n              key={fromID + toID + key}\n              onClick={() => {\n                if (!connectionExists(connections, fromMod, actualToID, paramID)) {\n                  connect(\n                    am[actualFromID] as ConnectingAudioModule,\n                    am[actualToID] as ConnectingAudioModule,\n                    paramID,\n                    outputIndex,\n                    inputIndex,\n                  )\n                  dispatch(addConnection(\n                    fromID,\n                    toID,\n                    paramID,\n                    outputIndex,\n                    inputIndex,\n                    isFromContainer ? actualFromID : undefined,\n                    isToContainer ? actualToID : undefined,\n                  ))\n                } else {\n                  alert('modules already connected')\n                }\n                onClose()\n              }}\n            >{paramID}</Button>\n          )\n        })}\n      </CenterMenu>\n      :\n      null\n      }\n    </Fragment>\n  )\n}\n\nexport default ConnectionMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '15vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport useJSS from './style'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { inRange } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  onClose: () => void\n  onChangeSubmit: (newRange: Range) => void\n  modID: string\n  controlID: string\n}\n\nfunction KnobRangeSetMenu({ onClose, modID, controlID, onChangeSubmit }: Props) {\n  const { maxRange, range } = useSelector((state: RootState) => state.modules[modID].controlData[controlID])\n  const [min, setMin] = useState((range as [number, number])[0])\n  const [max, setMax] = useState((range as [number, number])[1])\n  const classes = useJSS()\n  return (\n    <CenterMenu header={`set ${controlID} range`} onClose={onClose}>\n      <div style={{ fontSize: sizes.text.small }}>\n        {!maxRange ? null \n        :\n        `max range from ${maxRange[0]} to ${maxRange[1]}`\n        }\n      </div>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.keyCode === 27) {\n            onClose()\n          } else if (e.keyCode === 13) {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput} \n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => { \n            setMax(Number(e.target.value)) \n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          if (maxRange) {\n            if (inRange(min, maxRange) && inRange(max, maxRange)) {\n              if (max > min) {\n                onChangeSubmit([min, max])\n                onClose()\n              } else {\n                alert('min must be less than max')\n              }\n            } else {\n              alert('a value is not within maximum range bounds')\n            }\n          } else {\n            if (max > min) {\n              onChangeSubmit([min, max])\n              onClose()\n            } else {\n              alert('min must be less than max')\n            }\n          }\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default KnobRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '1em',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.medium,\n    textAlign: 'center',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n})\n\nexport default useJSS","import React, { useState, useRef } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Button, FlexRow, FlexCol } from '../../all'\nimport { stringIn } from '../../../helpers/genFuncs'\nimport { sizes, colors } from '../../../theme/theme'\nimport useJSS from './style'\n\ninterface Props {\n  saveList: string[]\n  onClose: () => void\n}\n\nfunction SpaceDBProjectSaveMenu({ saveList, onClose }: Props) {\n  const state = useSelector((state: RootState) => state)\n  const { baseContainerID, modules } = state\n  const [saveName, setSaveName] = useState(modules[baseContainerID].name)\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save project' \n      onClose={onClose}\n    >\n      <FlexRow style={{ alignItems: 'center' }}>\n        <input className={classes.CenterMenuInput}\n          value={saveName}\n          placeholder={modules[baseContainerID].name}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.keyCode) {\n              case 13:\n                if (stringIn(saveName, saveList)) {\n                  setConfirmSaveData({ isOpen: true, message: 'would you like to overwrite this save?' })\n                } else {\n                  window.projectSaveService.create({\n                    saveName,\n                    state\n                  }).then((res: any) => {\n                    if (res) {\n                      window.flashNotification('green', 'project saved')\n                    }\n                  })\n                  onClose()\n                }\n                break\n              case 27:\n                onClose()\n                break\n            }\n          }}\n          ref={inputRef}\n          autoFocus\n        />\n        <Button\n          onPointerDown={e => e.preventDefault()}\n          onClick={e => {\n            e.preventDefault()\n            if (stringIn(saveName, saveList)) {\n              setConfirmSaveData({ isOpen: true, message: 'save already exists. do you want to replace it?' })\n            } else {\n              window.projectSaveService.create({\n                saveName,\n                state\n              }).then((res: any) => {\n                if (res) {\n                  window.flashNotification('green', 'project saved')\n                }\n              })\n              onClose()\n            } \n          }}\n        >\n          save to spaceDB\n        </Button>\n      </FlexRow>\n      {!confirmSaveData.isOpen ? null\n        :\n        <FlexCol>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <FlexRow style={{ justifyContent: 'center' }}>\n            <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n              onClick={() => {\n                inputRef.current?.focus()\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                window.projectSaveService.update(saveName, state).then((res: any) => {\n                  if (res) {\n                    window.flashNotification('green', 'project updated')\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </FlexRow>\n        </FlexCol>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBProjectSaveMenu","import React from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport { colors } from '../../../theme/theme'\n\ninterface Props {\n  saveName: string\n  onClose: () => void\n}\n\nfunction ConfirmDeleteMenu({ saveName, onClose }: Props) {\n  return (\n    <CenterMenu header={`are you sure you want to delete ${saveName}?`}\n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n        <Button style={{ backgroundColor: colors.denyButton, marginRight: '3vmin' }}\n          onClick={() => {\n            onClose()\n          }}\n        >no</Button>\n        <Button style={{ backgroundColor: colors.confirmButton }}\n          onClick={() => {\n            window.projectSaveService.remove(saveName)\n            onClose()\n          }}\n        >yes</Button>\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default ConfirmDeleteMenu","import React, { useRef, useState, useEffect } from 'react'\nimport { Button, CenterMenu } from '../../all'\nimport settingsSVG from '../../../icons/settings.svg'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { sizes } from '../../../theme/theme'\nimport { getFileDirectory } from './helpers'\nimport useJSS from './style'\nlet fs: any\nif (window.usingElectron) {\n  fs = window.require('fs')\n}\n\ndeclare global {\n  interface Window {\n    currentSaveDirectory: string\n  }\n}\n\nwindow.currentSaveDirectory = ''\n\ninterface Props {\n  onClose: () => void\n}\n\nfunction FileSaveMenu({ onClose }: Props) {\n  const folderRef = useRef<HTMLInputElement>(null)\n  const state = useSelector((state: RootState) => state)\n  const initName = state.modules[state.baseContainerID].name\n  const [saveName, setSaveName] = useState(initName)\n  const [currentDirectory, setCurrentDirectory] = useState(window.currentSaveDirectory)\n  const classes = useJSS()\n  useEffect(() => {\n    window.setTimeout(() => {\n      if (folderRef.current) {\n        (folderRef.current as any).webkitdirectory = true\n      }\n    }, 50)\n  }, [])\n  return (\n    <CenterMenu header='save project as file'\n      onClose={onClose}\n    >\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {\n          window.currentSaveDirectory.length === 0 ?\n          <label htmlFor='chooseDirectory' style={{ marginBottom: '1vmin', fontSize: sizes.text.small }}>\n            <Button\n              onClick={() => {\n\n              }}\n            >choose save directory</Button>\n          </label>\n          :\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', marginBottom: '2vmin' }}>\n            <div style={{ fontSize: sizes.text.small }}>\n              {currentDirectory}\n            </div>\n            <label\n              style={{ \n                backgroundColor: 'blue', \n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                marginLeft: '2vmin',\n                borderRadius: '1vmin',\n              }}\n              htmlFor='chooseDirectory'\n            >\n              <img\n                style={{ width: '.7em', padding: '.2vmin' }}\n                title='edit directory'\n                src={settingsSVG}\n                alt='edit directory'\n              >\n              </img>\n            </label>\n          </div>\n        }\n        <input style={{ width: 0, height: 0, opacity: 0 }}\n          id='chooseDirectory'\n          type='file'\n          ref={folderRef}\n          onChange={e => {\n            if (((e.target as HTMLInputElement).files as FileList)[0]) {\n              const goodDir = getFileDirectory((((e.target as HTMLInputElement).files as FileList)[0] as any).path)\n              window.currentSaveDirectory = goodDir\n              setCurrentDirectory(goodDir)\n            }\n          }}\n        />\n        <input className={classes.CenterMenuInput}\n          value={saveName}\n          onChange={e => {\n            setSaveName(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.keyCode) {\n              case 13: //enter\n                if (saveName !== '') {\n                  fs.writeFile(currentDirectory + saveName + '.sm', JSON.stringify(state), (err: any) => {\n                    //console.log(`saved to ${currentDirectory + saveName + '.sm'}`)\n                    if (err) throw err\n                    window.flashNotification('green', 'file saved')\n                  })\n                  onClose()\n                } else {\n                  alert('please enter a save name')\n                }\n                break\n              case 27: //escape\n                onClose()\n                break\n            }\n          }}\n        />\n        <Button\n          onClick={() => {\n            if (saveName !== '' && currentDirectory !== '') {\n              fs.writeFile(currentDirectory + saveName + '.sm', JSON.stringify(state), (err: any) => {\n                //console.log(`saved to ${currentDirectory + saveName + '.sm'}`)\n                if (err) throw err\n                window.flashNotification('green', 'file saved')\n              })\n              onClose()\n            } else {\n              window.flashNotification('red', 'please enter save name or set directory')\n            }\n          }}\n        >save</Button>\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default FileSaveMenu","import { stringIn } from \"../../../helpers/genFuncs\"\nimport { getContainerModulesConnections } from \"../../../redux/getContainerAsProject\"\nimport { RootState } from \"../../../redux/stateTSTypes\"\n\nexport function getFileDirectory(badDir: string) {\n  for (var i = badDir.length; i > 0; i--) {\n    if (badDir[i] === '/') {\n      return badDir.slice(0, i + 1)\n    }\n  }\n  return badDir\n}\n\nexport function confirmContainerSaveName(setConfirmSaveData: (arg: any) => void, containerID: string, name: string, saveList: string[], state: RootState, onClose: () => void) {\n  if (!stringIn(name, saveList)) {\n    const { modules, connections } = getContainerModulesConnections(state, containerID)\n    window.containerSaveService.create({\n      saveName: name,\n      containerID,\n      modules,\n      connections,\n    }).then((success: string) => {\n      if (success) {\n        window.flashNotification('green', 'module saved to spaceDB')\n      }\n    })\n    onClose()\n  } else {\n    setConfirmSaveData({ isOpen: true, message: 'module with this name already exists. would you like to update it?' })\n  }\n}","import React, { useState, useRef, Fragment } from 'react'\nimport CenterMenu from '../CenterMenu/CenterMenu'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { Button } from '../../all'\nimport { getContainerModulesConnections } from '../../../redux/getContainerAsProject'\nimport { sizes, colors } from '../../../theme/theme'\nimport { confirmContainerSaveName } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  id: string\n  saveList: string[]\n  onClose: () => void\n}\n\nfunction SpaceDBContainerSaveMenu({ id, saveList, onClose }: Props) {\n  const state = useSelector((state: RootState) => state)\n  const initName = state.modules[id].name\n  const [name, setName] = useState(initName)\n  const [confirmSaveData, setConfirmSaveData] = useState({ isOpen: false, message: '' })\n  const inputRef = useRef<HTMLInputElement>(null)\n  const classes = useJSS()\n  return (\n    <CenterMenu header='save container module' \n      onClose={onClose}\n    >\n      <input className={classes.CenterMenuInput}\n        value={name}\n        placeholder={initName}\n        ref={inputRef}\n        onChange={e => {\n          setName(e.target.value)\n        }}\n        onKeyDown={e => {\n          switch (e.keyCode) {\n            case 13: // enter\n              confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n              break\n            case 27: // escape\n              onClose()\n              break\n          }\n        }}\n        autoFocus\n      />\n      <Button\n        onClick={() => {\n          confirmContainerSaveName(setConfirmSaveData, id, name, saveList, state, onClose)\n        }}\n      >confirm</Button>\n      {\n        !confirmSaveData.isOpen ? null :\n        <Fragment>\n          <div\n            style={{ fontSize: sizes.text.small }}\n          >\n            { confirmSaveData.message }\n          </div>\n          <div style={{ display: 'flex' }}>\n            <Button style={{ backgroundColor: colors.denyButton }}\n              onClick={() => {\n                if (inputRef.current) {\n                  inputRef.current.value = ''\n                  inputRef.current.focus()\n                }\n                setConfirmSaveData({ isOpen: false, message: '' })\n              }}\n            >no</Button>\n            <Button style={{ backgroundColor: colors.confirmButton }}\n              onClick={() => {\n                const { modules, connections } = getContainerModulesConnections(state, id)\n                window.containerSaveService.update(name, {\n                  saveName: name,\n                  containerID: id,\n                  modules,\n                  connections,\n                }).then((success: string) => {\n                  if (success) {\n                    window.flashNotification('green', 'module updated')\n                  }\n                })\n                onClose()\n              }}\n            >yes</Button>\n          </div>\n        </Fragment>\n      }\n    </CenterMenu>\n  )\n}\n\nexport default SpaceDBContainerSaveMenu","import React, { useState } from 'react'\nimport { CenterMenu } from '../../all'\nimport useJSS from './style'\nimport Button from '../../Button/Button'\nimport { Range } from '../../../audioModules/moduleTypes'\nimport { sizes, colors } from '../../../theme/theme'\n\ninterface Props {\n  onClose: () => void\n  onChangeSubmit: (newRange: Range) => void\n  range: [number, number]\n}\n\nfunction AnalyzerRangeSetMenu({ range, onChangeSubmit, onClose }: Props) {\n  const classes = useJSS()\n  const [min, setMin] = useState(range[0])\n  const [max, setMax] = useState(range[1])\n  return (\n    <CenterMenu header='set analyzer range' onClose={onClose}>\n      <div className={classes.CMInputBounder}\n        onKeyDown={e => {\n          if (e.keyCode === 27) {\n            onClose()\n          } else if (e.keyCode === 13) {\n            onChangeSubmit([min, max])\n            onClose()\n          }\n        }}\n      >\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMin(Number(e.target.value))\n          }}\n          value={min}\n          type='number'\n        />\n        <input className={classes.CenterMenuInput}\n          onChange={e => {\n            setMax(Number(e.target.value))\n          }}\n          value={max}\n          type='number'\n        />\n      </div>\n      <Button style={{ fontSize: sizes.text.small, backgroundColor: colors.confirmButton }}\n        onClick={() => {\n          onChangeSubmit([min, max])\n          onClose()\n        }}\n      >\n        confirm\n      </Button>\n    </CenterMenu>\n  )\n}\n\nexport default AnalyzerRangeSetMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  CMInputBounder: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n\n  CenterMenuInput: {\n    backgroundColor: colors.grey,\n    color: 'white',\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin .75vmin 1.5vmin 1.5vmin',\n    borderStyle: 'none',\n    borderRadius: '1vmin',\n    fontSize: sizes.text.small,\n    width: '23vmin',\n    '&:hover': {\n      cursor: 'text',\n    },\n  },\n\n  InputSubmit: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.grey,\n    height: '2vmin',\n    padding: '1vmin',\n    margin: '1.5vmin 1.5vmin 1.5vmin 0.75vmin',\n    borderRadius: '1vmin',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    fontSize: sizes.text.small,\n  },\n\n  Error: {\n    backgroundColor: colors.errorBackground,\n    width: '90%',\n    color: 'white',\n    fontSize: sizes.text.small,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '1vmin',\n    padding: '1vmin 0vmin',\n    marginBottom: '1vmin',\n  },\n})\n\nexport default useJSS","import React, { useState } from 'react'\nimport { CenterMenu, Button } from '../../all'\nimport useJSS from './style'\n\ninterface Props {\n  header: string\n  onSubmit: (newName: string) => void\n  placeholder: string\n  initName: string\n  onClose: () => void\n}\n\nfunction RenameMenu({ header, onSubmit, placeholder, initName, onClose }: Props) {\n  const classes = useJSS()\n  const [val, setVal] = useState(initName)\n  const [isTooShort, setIsTooShort] = useState(false)\n  function trySubmit() {\n    if (val.length > 0) {\n      onSubmit(val)\n      onClose()\n    } else {\n      setIsTooShort(true)\n    }\n  }\n  return (\n    <CenterMenu header={header} onClose={onClose}>\n      <div className={classes.CMInputBounder}>\n        <input className={classes.CenterMenuInput}\n          placeholder={placeholder}\n          value={val}\n          onChange={e => {\n            setVal(e.target.value)\n          }}\n          onKeyDown={e => {\n            switch (e.keyCode) {\n              case 13:\n                trySubmit()\n                break\n              case 27:\n                onClose()\n                break\n            }\n          }}\n          autoFocus\n        />\n        <Button\n          onClick={() => {\n            trySubmit()\n          }}\n        >\n          confirm\n        </Button>\n        {\n          !isTooShort ? null :\n          <div className={classes.Error}>\n            please enter a name\n          </div>\n        }\n      </div>\n    </CenterMenu>\n  )\n}\n\nexport default RenameMenu","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { renameModule } from '../../../redux/allActions'\nimport RenameMenu from './RenameMenu'\n\n\ninterface Props {\n  onClose: () => void\n  toRenameID: string\n}\n\nfunction RenameModuleMenu({ toRenameID, onClose }: Props) {\n  const modules = useSelector((state: RootState) => state.modules)\n  const dispatch = useDispatch()\n  return (\n    <RenameMenu header='rename module' \n      onSubmit={newName => {\n        dispatch(renameModule(toRenameID, newName))\n      }}\n      placeholder={modules[toRenameID]?.name}\n      initName={''}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameModuleMenu","import React from 'react'\nimport RenameMenu from './RenameMenu'\nimport { useDispatch } from 'react-redux'\nimport { renameContainerControl } from '../../../redux/allActions'\nimport { ContainerControl } from '../../../redux/stateTSTypes'\n\ninterface Props {\n  placeholder: string\n  containerControl: ContainerControl\n  parentModID: string\n  onClose: () => void\n}\n\nfunction RenameControlMenu({ placeholder, containerControl, parentModID, onClose }: Props) {\n  const dispatch = useDispatch()\n  const { modID, controlID, actualModID } = containerControl\n  return (\n    <RenameMenu header='rename control'\n      onSubmit={newName => {\n        dispatch(renameContainerControl(newName, parentModID, modID, controlID, actualModID))\n        window.flashNotification('green', 'control passthrough renamed')\n      }}\n      placeholder={placeholder}\n      initName={''}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default RenameControlMenu","import React, { useState, Fragment } from 'react'\nimport { makeConnectionMenuData, makeKnobRangeSetMenuData, makeSaveMenuData, makeConfirmDeleteMenuData, makeContainerSaveMenuData, makeAnalyzerRangeSetMenuData, makeRenameControlMenuData } from './makeData'\nimport ConnectionMenu from './ConnectionMenu/ConnectionMenu'\nimport KnobRangeSetMenu from './RangeSetMenu/KnobRangeSetMenu'\nimport { Range } from '../../audioModules/moduleTypes'\nimport SpaceDBProjectSaveMenu from './SaveMenu/SpaceDBProjectSaveMenu'\nimport ConfirmDeleteMenu from './ConfirmDeleteMenu/ConfirmDeleteMenu'\nimport FileSaveMenu from './SaveMenu/FileSaveMenu'\nimport SpaceDBContainerSaveMenu from './SaveMenu/SpaceDBContainerSaveMenu'\nimport AnalyzerRangeSetMenu from './RangeSetMenu/AnalyzerRangeSetMenu'\nimport { ContainerControl } from '../../redux/stateTSTypes'\nimport RenameModuleMenu from './RenameMenu/RenameModuleMenu'\nimport RenameControlMenu from './RenameMenu/RenameControlMenu'\n\ndeclare global {\n  interface Window {\n    openConnectionMenu: (fromID: string, toID: string) => void\n    openModuleRenameMenu: (toRenameID: string) => void\n    openControlRenameMenu: (placeholder: string, parentModID: string, containerControl: ContainerControl) => void\n    openKnobRangeSetMenu: (modID: string, controlID: string, onChangeSubmit: (newRange: Range) => void) => void\n    openAnalyzerRangeSetMenu: (range: Range, onChangeSubmit: (newRange: Range) => void) => void\n    openSpaceDBProjectSaveMenu: (saveList: string[], onClose: () => void) => void\n    openSpaceDBContainerSaveMenu: (saveList: string[], id: string, onClose: () => void) => void\n    openConfirmDeleteMenu: (saveName: string, onClose: () => void) => void\n    openFileSaveMenu: () => void\n  }\n}\n\nfunction CenterMenus() {\n\n  const [connectionMenuData, setConnectionMenuData] = useState(makeConnectionMenuData(false))\n  window.openConnectionMenu = (fromID, toID) => { setConnectionMenuData(makeConnectionMenuData(true, fromID, toID)) }\n  \n  const [renameModuleMenuData, setRenameModuleMenuData] = useState({ isOpen: false, toRenameID: '' })\n  window.openModuleRenameMenu = toRenameID => { setRenameModuleMenuData({ isOpen: true, toRenameID }) }\n\n  const [renameControlMenuData, setRenameControlMenuData] = useState(makeRenameControlMenuData(false))\n  window.openControlRenameMenu = (placeholder, parentModID, containerControl) => { setRenameControlMenuData(makeRenameControlMenuData(true, placeholder, parentModID, containerControl)) }\n\n  const [knobRangeSetMenuData, setKnobRangeSetMenuData] = useState(makeKnobRangeSetMenuData(false))\n  window.openKnobRangeSetMenu = (modID, controlID, onChangeSubmit) => { setKnobRangeSetMenuData(makeKnobRangeSetMenuData(true, modID, controlID, onChangeSubmit)) }\n\n  const [analyzerRangeSetMenuData, setAnalyzerRangeSetMenuData] = useState(makeAnalyzerRangeSetMenuData(false))\n  window.openAnalyzerRangeSetMenu = (range, onChangeSubmit) => { setAnalyzerRangeSetMenuData(makeAnalyzerRangeSetMenuData(true, range, onChangeSubmit)) }\n  \n  const [spaceDBProjectSaveMenuData, setSpaceDBProjectSaveMenuData] = useState(makeSaveMenuData(false))\n  window.openSpaceDBProjectSaveMenu = (saveList, onClose) => { setSpaceDBProjectSaveMenuData(makeSaveMenuData(true, saveList, onClose)) }\n\n  const [spaceDBContainerSaveMenuData, setSpaceDBContainerSaveMenuData] = useState(makeContainerSaveMenuData(false))\n  window.openSpaceDBContainerSaveMenu = (saveList, id, onClose) => { setSpaceDBContainerSaveMenuData(makeContainerSaveMenuData(true, id, saveList, onClose)) }\n  \n  const [confirmDeleteMenuData, setConfirmDeleteMenuData] = useState(makeConfirmDeleteMenuData(false))\n  window.openConfirmDeleteMenu = (saveName, onClose) => { setConfirmDeleteMenuData(makeConfirmDeleteMenuData(true, saveName, onClose)) }\n  \n  const [fileSaveMenuData, setFileSaveMenuData] = useState({ isOpen: false })\n  window.openFileSaveMenu = () => { setFileSaveMenuData({ isOpen: true }) }\n  \n  return (\n    <Fragment>\n      {\n        !connectionMenuData.isOpen ? null :\n        <ConnectionMenu fromID={connectionMenuData.fromID} toID={connectionMenuData.toID}\n          onClose={() => {\n            setConnectionMenuData(makeConnectionMenuData(false))\n          }}\n        />\n      }\n      {\n        !renameModuleMenuData.isOpen ? null :\n        <RenameModuleMenu toRenameID={renameModuleMenuData.toRenameID} \n          onClose={() => { \n            setRenameModuleMenuData({ isOpen: false, toRenameID: '' }) \n          }} \n        />\n      }\n      {\n        !renameControlMenuData.isOpen ? null :\n        <RenameControlMenu placeholder={renameControlMenuData.placeholder} \n          containerControl={renameControlMenuData.containerControl as ContainerControl}\n          parentModID={renameControlMenuData.parentModID}\n          onClose={() => {\n            setRenameControlMenuData(makeRenameControlMenuData(false))\n          }}\n        />\n      }\n      {\n        !knobRangeSetMenuData.isOpen ? null :\n        <KnobRangeSetMenu modID={knobRangeSetMenuData.modID} \n          controlID={knobRangeSetMenuData.controlID}\n          onClose={() => {\n            setKnobRangeSetMenuData(makeKnobRangeSetMenuData(false))\n          }}\n          onChangeSubmit={newRange => {\n            knobRangeSetMenuData.onChangeSubmit(newRange)\n          }}\n        />\n      }\n      {\n        !analyzerRangeSetMenuData.isOpen ? null :\n        <AnalyzerRangeSetMenu range={analyzerRangeSetMenuData.range}\n          onClose={() => {\n            setAnalyzerRangeSetMenuData(makeAnalyzerRangeSetMenuData(false))\n          }}\n          onChangeSubmit={newRange => {\n            analyzerRangeSetMenuData.onChangeSubmit(newRange)\n          }}\n        />\n      }\n      {\n        !spaceDBProjectSaveMenuData.isOpen ? null :\n        <SpaceDBProjectSaveMenu saveList={spaceDBProjectSaveMenuData.saveList} \n          onClose={() => {\n            spaceDBProjectSaveMenuData.onClose()\n            setSpaceDBProjectSaveMenuData(makeSaveMenuData(false)) \n          }}\n        />\n      }\n      {\n        !spaceDBContainerSaveMenuData.isOpen ? null :\n        <SpaceDBContainerSaveMenu id={spaceDBContainerSaveMenuData.id}\n          saveList={spaceDBContainerSaveMenuData.saveList}\n          onClose={() => {\n            spaceDBContainerSaveMenuData.onClose()\n            setSpaceDBContainerSaveMenuData(makeContainerSaveMenuData(false))\n          }}\n        />\n      }\n      {\n        !confirmDeleteMenuData.isOpen ? null :\n        <ConfirmDeleteMenu saveName={confirmDeleteMenuData.saveName}\n          onClose={() => {\n            confirmDeleteMenuData.onClose()\n            setConfirmDeleteMenuData(makeConfirmDeleteMenuData(false))\n          }}\n        />\n      }\n      {\n        !fileSaveMenuData.isOpen ? null :\n        <FileSaveMenu\n          onClose={() => {\n            setFileSaveMenuData({ isOpen: false })\n          }}\n        />\n      }\n    </Fragment>\n  )\n}\n\nexport default CenterMenus","export interface NotificationData {\n  isOpen: boolean\n  color: string\n  text: string\n}\n\nexport function makeNotificationData(isOpen: boolean, color = '', text = ''): NotificationData {\n  return {\n    isOpen,\n    color,\n    text,\n  }\n}","import { createUseStyles } from 'react-jss'\nimport { sizes } from '../../theme/theme'\n\nconst useJSS = createUseStyles({\n  Notification: {\n    position: 'absolute',\n    top: '10vh',\n    left: '50vw',\n    transform: 'translate(-50%, 0%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '2vmin',\n    borderRadius: '4vmin',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    zIndex: 1000,\n    fontSize: sizes.text.small\n  }\n})\n\nexport default useJSS","import React, { Fragment, useState } from 'react'\nimport { makeNotificationData } from './makeData'\nimport useJSS from './style'\nimport { useSpring, animated } from 'react-spring'\n\ndeclare global {\n  interface Window {\n    flashNotification: (color: string, text: string) => void\n  }\n}\n\nconst notificationTime = 2500 //milliseconds\n\nfunction Notification() {\n  const [{ isOpen, color, text }, setNotificationData] = useState(makeNotificationData(false))\n  const [isVisible, setIsVisible] = useState(false)\n  const classes = useJSS()\n  window.flashNotification = (color, text) => { \n    setNotificationData(makeNotificationData(true, color, text))\n    setIsVisible(true)\n    window.setTimeout(() => {\n      setIsVisible(false)\n    }, notificationTime)\n    window.setTimeout(() => {\n      setNotificationData(makeNotificationData(false))\n    }, notificationTime + 700)\n  }\n  const spring = useSpring({\n    opacity: isVisible ? 1 : 0\n  })\n  return (\n    <Fragment>\n      {\n        !isOpen ? null :\n        <animated.div className={classes.Notification}\n          style={Object.assign({ backgroundColor: color }, spring)}\n        >\n          {text}\n        </animated.div>\n      }\n    </Fragment>\n  )\n}\n\nexport default Notification","import { createUseStyles } from 'react-jss'\n\nconst useJSS = createUseStyles({\n  FlexRow: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n\n  FlexCol: {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n})\n\nexport default useJSS","import React from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n}\n\nfunction FlexRow({ children, style, ref }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.FlexRow}\n      style={style}\n      ref={ref}\n    >\n      { children }\n    </div>\n  )\n}\n\nexport default FlexRow","import React from 'react'\nimport CSS from 'csstype'\nimport useJSS from './style'\n\ninterface Props {\n  style?: CSS.Properties\n  children?: React.ReactNode\n  ref?: React.RefObject<HTMLDivElement>\n}\n\nfunction FlexCol({ children, style, ref }: Props) {\n  const classes = useJSS()\n  return (\n    <div className={classes.FlexCol}\n      style={style}\n      ref={ref}\n    >\n      { children }\n    </div>\n  );\n}\n\nexport default FlexCol","import { \n  ModuleType, \n  OSCILLATOR, \n  OUTPUT, GAIN, \n  AUTOFILTER, \n  KOMPRESSOR, \n  STEREO_PANNER, \n  SIGNAL_DELAY, \n  CONSTANT, \n  MEDIA_ELEMENT, \n  LINE_IN,\n  CONTAINER,\n  DISTORTION,\n  ANALYZER,\n  ENVELOPED_TRIGGER,\n} from './moduleTypes'\nimport { Dispatch } from 'redux'\nimport { addModule } from '../redux/allActions'\nimport makeConstantSource, { makeConstantControlData } from './modules/constant'\nimport makeAutoFilter, { makeFilterControlData } from './modules/autoFilter'\nimport makeOutput, { makeOutputControlData } from './modules/output'\nimport makeStereoPanner, { makePannerControlData } from './modules/stereoPanner'\nimport makeSignalDelay, { makeDelayControlData } from './modules/signalDelay'\nimport makeKompressor, { makeKompControlData } from './modules/kompressor'\nimport makeGain, { makeGainControlData } from './modules/gain'\nimport makeOscillator, { makeOscControlData } from './modules/oscillator'\nimport makeLineInput, { makeLineInControlData } from './modules/lineInput'\nimport makeContainer, { makeContainerControlData } from './modules/container'\nimport { makeMediaElementControlData } from './modules/mediaElement'\nimport makeDistortion, { makeDistortionControlData } from './modules/distortion'\nimport makeAnalyzer, { makeAnalyzerControlData } from './modules/analyzer'\nimport makeEnvelopedTrigger, { makeEnvelopedTriggerControlData } from './modules/envelopedTrigger'\n\ndeclare global {\n  interface Window {\n    addModule: (id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) => void\n  }\n}\n\nfunction makeAddModule() {\n  window.addModule = function(id: string, name: string, parentID: string, moduleType: ModuleType, dispatch: Dispatch, row: number, col: number) {\n    switch(moduleType) {\n      case OSCILLATOR:\n        const osc = makeOscillator()\n        const oscControlData = makeOscControlData(osc.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: osc };\n        dispatch(addModule(id, name, moduleType, oscControlData, parentID, row, col, [], ['0']));\n        break;\n      case GAIN:\n        const gain = makeGain()\n        const gainControlData = makeGainControlData()\n        window.audioModules = { ...window.audioModules, [id]: gain }; \n        dispatch(addModule(id, name, moduleType, gainControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case OUTPUT:\n        const output = makeOutput()\n        const outputControlData = makeOutputControlData()\n        window.audioModules = { ...window.audioModules, [id]: output }\n        dispatch(addModule(id, name, moduleType, outputControlData, parentID, row, col, ['0'], []))\n        break\n      case AUTOFILTER: \n        const filter = makeAutoFilter()\n        const filterControlData = makeFilterControlData(filter.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: filter }\n        dispatch(addModule(id, name, moduleType, filterControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case KOMPRESSOR:\n        const komp = makeKompressor()\n        const kompControlData = makeKompControlData(komp.audioNode)\n        window.audioModules = { ...window.audioModules, [id]: komp }; \n        dispatch(addModule(id, name, moduleType, kompControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case STEREO_PANNER:\n        const panner = makeStereoPanner()\n        const pannerControlData = makePannerControlData()\n        window.audioModules = { ...window.audioModules, [id]: panner }; \n        dispatch(addModule(id, name, moduleType, pannerControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case SIGNAL_DELAY:\n        const delay = makeSignalDelay()\n        const delayControlData = makeDelayControlData()\n        window.audioModules = { ...window.audioModules, [id]: delay }; \n        dispatch(addModule(id, name, moduleType, delayControlData, parentID, row, col, ['0'], ['0'])); \n        break;\n      case CONSTANT:\n        const constant = makeConstantSource()\n        const constantControlData = makeConstantControlData()\n        window.audioModules = { ...window.audioModules, [id]: constant }; \n        dispatch(addModule(id, name, moduleType, constantControlData, parentID, row, col, [], ['0'])); \n        break;\n      case MEDIA_ELEMENT:\n        const mediaControlData = makeMediaElementControlData()\n        window.addAudioTag(id); window.reRenderAudioTags()\n        dispatch(addModule(id, name, moduleType, mediaControlData, parentID, row, col, [], ['0']))\n        break;\n      case LINE_IN: \n        makeLineInput(id)\n        const lineInControlData = makeLineInControlData()\n        dispatch(addModule(id, name, moduleType, lineInControlData, parentID, row, col, [], ['0 (L)', '1 (R)'])); \n        break;\n      case CONTAINER: \n        const container = makeContainer(id)\n        const containerControlData = makeContainerControlData()\n        window.audioModules = { ...window.audioModules, [id]: container }; \n        dispatch(addModule(id, name, moduleType, containerControlData, parentID, row, col, [], [])); \n        break;\n      case DISTORTION:\n        const distortion = makeDistortion()\n        const distortionControlData = makeDistortionControlData()\n        window.audioModules = { ...window.audioModules, [id]: distortion }\n        dispatch(addModule(id, name, moduleType, distortionControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ANALYZER:\n        const analyzer = makeAnalyzer()\n        const analyzerControlData = makeAnalyzerControlData()\n        window.audioModules = { ...window.audioModules, [id]: analyzer }\n        dispatch(addModule(id, name, moduleType, analyzerControlData, parentID, row, col, ['0'], ['0']))\n        break\n      case ENVELOPED_TRIGGER:\n        const envelopedTrigger = makeEnvelopedTrigger()\n        const envelopedTriggerControlData = makeEnvelopedTriggerControlData()\n        window.audioModules = { ...window.audioModules, [id]: envelopedTrigger }\n        dispatch(addModule(id, name, moduleType, envelopedTriggerControlData, parentID, row, col, [], ['0']))\n        break\n    }\n  }\n}\n\nexport default makeAddModule","import { PointerLayerData, PointerEventCallback } from '../PointerLayer/PointerLayer'\n\nexport function makePointerLayerData(isOpen: boolean, pointerId: number = -1, onPointerMove: PointerEventCallback = () => { }, onPointerUp: PointerEventCallback = () => { }): PointerLayerData {\n  return {\n    isOpen,\n    pointerId,\n    onPointerMove,\n    onPointerUp,\n  }\n}","import feathers from '@feathersjs/feathers'\nimport rest from '@feathersjs/rest-client'\n\ndeclare global {\n  interface Window {\n    projectSaveService: any\n    containerSaveService: any\n  }\n}\n\nfunction configureSpaceDB() {\n  const spaceDB = feathers()\n  const restClient = rest('http://192.168.1.68:30300') // spaceDB\n\n  spaceDB.configure(restClient.fetch(window.fetch))\n  window.projectSaveService = spaceDB.service('project-save-service')\n  window.containerSaveService = spaceDB.service('container-save-service')\n}\n\nexport default configureSpaceDB","declare global {\n  interface Window {\n    usingElectron: boolean\n  }\n}\n\nfunction setUserAgent() {\n  const userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.indexOf(' electron/') > -1) {\n    window.usingElectron = true\n  } else {\n    window.usingElectron = false\n  }\n}\n\nexport default setUserAgent","import { MouseEvent } from \"react\";\nimport { ModuleContextMenuData } from \"./types\";\n\nexport function makeModuleCMData(isOpen: boolean, event: MouseEvent<HTMLDivElement> | null = null, modID: string | null = null): ModuleContextMenuData {\n  return {\n    isOpen,\n    event,\n    modID,\n  }\n}","import { MouseEvent, RefObject } from \"react\";\n\nexport function getLocation(e: MouseEvent<HTMLDivElement>, ref: RefObject<HTMLDivElement>) {\n  if (!ref.current) {\n    return {\n      top: -1000,\n      left: -1000,\n    }\n  } else {\n    return {\n      top: (window.innerHeight - e.pageY) >= ref.current.offsetHeight ?\n        e.pageY : window.innerHeight - ref.current.offsetHeight,\n      left: (window.innerWidth - e.pageX) >= ref.current.offsetWidth ?\n        e.pageX : window.innerWidth - ref.current.offsetWidth,\n    }\n  }\n  \n}","import { createUseStyles } from 'react-jss'\nimport { colors } from '../../../theme/theme'\n\nconst maxWidth = '8em'\nconst maxHeight = '12em'\n\nconst useJSS = createUseStyles({\n  Bounder: {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    zIndex: 1000,\n  },\n\n  ContextMenu: {\n    maxHeight,\n    backgroundColor: colors.contextMenuBackground,\n    padding: '.2em',\n    borderRadius: '.2em',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      width: '0em',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'white',\n    },\n  },\n\n  MenuItem: {\n    maxWidth,\n    borderStyle: 'solid',\n    borderColor: 'transparent',\n    '&:hover': {\n      borderColor: colors.contextMenuItemBorder\n    }\n  }\n})\n\nexport default useJSS","import React, { MouseEvent, ReactNode, useEffect, useRef, useState } from 'react'\nimport { getLocation } from './helpers'\nimport useJSS from './style'\n\ninterface Props {\n  e: MouseEvent<HTMLDivElement>\n  children: ReactNode\n  onClose: () => void\n}\n\nfunction ContextMenu({ e, children, onClose }: Props) {\n  const classes = useJSS()\n  const cmRef = useRef<HTMLDivElement>(null)\n  const [location, setLocation] = useState(getLocation(e, cmRef))\n  useEffect(() => {\n    setLocation(getLocation(e, cmRef))\n  }, [e])\n  return (\n    <div className={classes.Bounder}\n      onPointerDown={onClose}\n    >\n      <div className={classes.ContextMenu}\n        style={{\n          top: location.top,\n          left: location.left,\n        }}\n        ref={cmRef}\n      >\n        { children }\n      </div>\n    </div>\n  )\n}\n\nexport default ContextMenu","import { createUseStyles } from 'react-jss'\nimport { colors, sizes } from '../../../theme/theme'\n\nconst useJSS = createUseStyles({\n  DeleteButtonBounder: {\n    backgroundColor: colors.deleteButton,\n    fontSize: sizes.text.small,\n    padding: '.2em .4em',\n    '&:hover': {\n      borderColor: colors.deleteButton,\n    },\n  },\n\n  DeleteButtonSVG: {\n    width: '1.5em',\n    height: '1.5em',\n  },\n\n  Connection: {\n    fontSize: sizes.text.xsmall,\n    backgroundColor: colors.fillModule,\n    margin: '.5vmin 3vmin',\n    borderRadius: '1vmin',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    minWidth: '30%',\n    padding: '1vmin',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer',\n      borderColor: colors.deleteButton,\n    },\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  MenuHeader: {\n    fontSize: sizes.text.small,\n    borderStyle: 'none none solid none',\n    margin: '1vmin',\n    width: '90%'\n  }, \n})\n\nexport default useJSS","import React from 'react'\nimport { Button } from '../../all'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\nimport { useDispatch } from 'react-redux'\nimport { removeModule } from '../../../redux/allActions'\nimport { useSelector } from 'react-redux'\nimport trashSVG from '../../../icons/trash.svg'\nimport useJSS from './style'\n\ninterface Props {\n  modID: string\n  onClose: () => void\n}\n\nfunction DeleteButton({ modID, onClose }: Props) {\n  const am = window.audioModules\n  const dispatch = useDispatch()\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  const classes = useJSS()\n  return (\n    <Button className={classes.DeleteButtonBounder}\n      onPointerDown={e => { e.stopPropagation() }}\n      onClick={() => {\n        selectedModule.inputs.forEach(inputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[inputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        selectedModule.outputs.forEach(outputData => {\n          const { fromID, toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[outputData]\n          disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n        })\n        dispatch(removeModule(selectedModule.id))\n        onClose()\n      }}\n    >\n      <img className={classes.DeleteButtonSVG}\n        src={trashSVG}\n        alt='delete'\n      />\n    </Button>\n  )\n}\n\nexport default DeleteButton","import React, { Fragment } from 'react'\nimport useJSS from './style'\nimport { Modules, RootState } from '../../../redux/stateTSTypes'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeConnection } from '../../../redux/allActions'\nimport { disconnect } from '../../../audioModules/connection'\nimport { ConnectingAudioModule } from '../../../audioModules/moduleTypes'\n\ninterface Props {\n  modID: string\n  modules: Modules\n}\n\nfunction InputOutputView({ modID, modules }: Props) {\n  const classes = useJSS()\n  const dispatch = useDispatch()\n  const am = window.audioModules\n  const connections = useSelector((state: RootState) => state.connections)\n  const selectedModule = useSelector((state: RootState) => state.modules[modID])\n  return (\n    <Fragment>\n\n      {selectedModule.inputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>inputs</div>\n      }\n\n      {selectedModule.inputs.map((connectionID, index) => {\n        const { fromID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[fromID].name\n        return (\n          <div className={classes.Connection}\n            key={fromID + param + 'inp' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : fromID] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : selectedModule.id] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => {e.stopPropagation()}}\n          >\n            {`${name}${containerOutputChildID ? ` - ${modules[containerOutputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n\n      {selectedModule.outputs.length === 0 ? null :\n        <div className={classes.MenuHeader}>outputs</div>\n      }\n\n      {selectedModule.outputs.map((connectionID, index) => {\n        const { toID, param, outputIndex, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n        const name = modules[toID].name\n        return (\n          <div className={classes.Connection}\n            key={toID + param + 'out' + index}\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(removeConnection(connectionID))\n              disconnect(am[containerOutputChildID ? containerOutputChildID : selectedModule.id] as ConnectingAudioModule, am[containerInputChildID ? containerInputChildID : toID] as ConnectingAudioModule, param, outputIndex)\n            }}\n            onPointerDown={e => { e.stopPropagation() }}\n          >\n            {`${name}${containerInputChildID ? ` - ${modules[containerInputChildID].name}` : ''}${param.length !== 0 ? ` - ${param}` : ''}`}\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nexport default InputOutputView","import React, { MouseEvent } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../redux/stateTSTypes'\nimport ContextMenu from '../ContextMenu/ContextMenu'\nimport DeleteButton from './DeleteButton'\nimport InputOutputView from './InputOutputView'\n\ninterface Props {\n  event: MouseEvent<HTMLDivElement>\n  onClose: () => void\n  modID: string\n}\n\nfunction ModuleContextMenu({ event, onClose, modID }: Props) {\n  const modules = useSelector((state: RootState) => state.modules)\n  return (\n    <ContextMenu e={event} onClose={onClose}>\n      <InputOutputView modID={modID} modules={modules}/>\n      <DeleteButton modID={modID} onClose={onClose}/>\n    </ContextMenu>\n  )\n}\n\nexport default ModuleContextMenu","import React, { Fragment, MouseEvent, useState } from 'react'\nimport { makeModuleCMData } from './makeData'\nimport ModuleContextMenu from './Module/ModuleContextMenu'\n\ndeclare global {\n  interface Window {\n    openModuleContextMenu: (event: MouseEvent<HTMLDivElement>, modID: string) => void\n  }\n}\n\nfunction ContextMenus() {\n  const [moduleCMData, setModuleCMData] = useState(makeModuleCMData(false))\n  window.openModuleContextMenu = (event, selectedModule) => { setModuleCMData(makeModuleCMData(true, event, selectedModule)) }\n  return (\n    <Fragment>\n      {!moduleCMData.isOpen ? null :\n        <ModuleContextMenu event={moduleCMData.event as MouseEvent<HTMLDivElement>} \n          onClose={() => { setModuleCMData(makeModuleCMData(false)) }}\n          modID={moduleCMData.modID as string}\n        />\n      }\n    </Fragment>\n  )\n}\n\nexport default ContextMenus","import React, { useState } from 'react'\nimport useJSS from './style'\nimport { RightDrawer, ModuleViewFill, AudioTags, CenterMenus, PointerLayer, Notification } from '../components/all'\nimport { AudioModules } from '../audioModules/moduleTypes'\nimport makeAddModule from '../audioModules/makeAddModule'\nimport { makePointerLayerData } from '../components/PointerLayer/makeData'\nimport { PointerEventCallback } from '../components/PointerLayer/PointerLayer'\nimport configureSpaceDB from './configureSpaceDB'\nimport setUserAgent from './setUserAgent'\nimport ContextMenus from '../components/ContextMenus/ContextMenus'\n\ndeclare global {\n  interface Window { \n    fillContainerID: string\n    audioModules: AudioModules\n    openPointerLayer: (pointerId: number, onPointerMove: PointerEventCallback, onPointerUp: PointerEventCallback) => void\n  }\n\n  interface AudioNode {\n    [index: string]: AudioParam\n  }\n}\n\nwindow.fillContainerID = 'project'\n\nwindow.audioModules = {}\nmakeAddModule()\nconfigureSpaceDB()\nsetUserAgent()\n\nfunction App() {\n  const classes = useJSS()\n  const [ pointerLayerData, setPointerLayerData ] = useState(makePointerLayerData(false))\n  window.openPointerLayer = (pointerId, onPointerMove, onPointerUp) => { setPointerLayerData(makePointerLayerData(true, pointerId, onPointerMove, onPointerUp)) }\n  const resetPointerLayerData = () => { setPointerLayerData(makePointerLayerData(false)) }\n  return (\n    <div className={classes.Bounder}>\n      <div className={classes.ModuleViewBounder}>\n        <ModuleViewFill />\n      </div>\n      <RightDrawer />\n      <AudioTags />\n      {\n        !pointerLayerData.isOpen ? null :\n        <PointerLayer pointerLayerData={ pointerLayerData } resetPointerLayerData={resetPointerLayerData}/>\n      }\n      <CenterMenus />\n      <Notification />\n      <ContextMenus />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Modules, ContainerModule } from '../../stateTSTypes'\nimport { AddModuleAction } from '../moduleTSTypes'\nimport { CONTAINER } from '../../../audioModules/moduleTypes'\n\nconst addModule = (state: Modules, { id, name, moduleType, controlData, row, col, parentID, connectionInputs, connectionOutputs }: AddModuleAction): Modules => {\n  switch(moduleType) {\n    case CONTAINER: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        inputs: [],\n        outputs: [],\n        containerControls: [],\n        toContainerControls: [],\n        childModules: [],\n        isBaseContainer: false,\n        isContainerInput: false,\n        isContainerOutput: false,\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n    default: return Object.assign({}, state, {\n      [id]: {\n        id,\n        name,\n        row,\n        col,\n        parentID,\n        moduleType,\n        controlData,\n        connectionInputs,\n        connectionOutputs,\n        toContainerControls: [],\n        isContainerInput: false,\n        isContainerOutput: false,\n        inputs: [],\n        outputs: [],\n      },\n      [parentID]: {\n        ...state[parentID],\n        childModules: [\n          ...(state[parentID] as ContainerModule).childModules,\n          id\n        ]\n      }\n    })\n  }\n}\n\nexport default addModule","import { Modules } from \"../../stateTSTypes\";\nimport { MoveModuleAction } from \"../moduleTSTypes\";\n\nconst moveModule = (state: Modules, { id, newRow, newCol }: MoveModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      row: newRow,\n      col: newCol,\n    }\n  })\n}\n\nexport default moveModule","import { Modules } from \"../../stateTSTypes\"\nimport { RenameModuleAction } from \"../moduleTSTypes\"\n\nconst renameContainer = (state: Modules, { id, newName }: RenameModuleAction) => {\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      name: newName\n    },\n  })\n}\n\nexport default renameContainer","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: [ ...state[parentID].connectionInputs, id ],\n    }\n  })\n}\n\nexport default markContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerInput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionInputs: state[parentID].connectionInputs.filter( inputID => inputID !== id ),\n    }\n  })\n}\n\nexport default unmarkContainerInput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst markContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerOutput: true,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: [ ...state[parentID].connectionOutputs, id ],\n    }\n  })\n}\n\nexport default markContainerOutput","import { Modules } from \"../../stateTSTypes\";\nimport { MarkContainerIOAction } from \"../moduleTSTypes\";\n\nconst unmarkContainerOutput = (state: Modules, { id }: MarkContainerIOAction): Modules => {\n  const parentID = state[id].parentID as string\n  return Object.assign({}, state, {\n    [id]: {\n      ...state[id],\n      isContainerInput: false,\n    },\n    [parentID]: {\n      ...state[parentID],\n      connectionOutputs: state[parentID].connectionOutputs.filter(outputID => outputID !== id),\n    }\n  })\n}\n\nexport default unmarkContainerOutput","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst markContainerControl = (state: Modules, { modID, controlID, actualModID, name }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: true,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: true,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: [...(state[parentID] as ContainerModule).containerControls, { modID, controlID, actualModID, name, markedToContainer: false }],\n      }\n    })\n  }\n}\n\nexport default markContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\";\nimport { MarkContainerControlAction } from \"../moduleTSTypes\";\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\";\n\nconst unmarkContainerControl = (state: Modules, { modID, controlID, actualModID }: MarkContainerControlAction): Modules => {\n  const parentID = state[modID].parentID as string\n  if (state[modID].moduleType === CONTAINER) {\n    return Object.assign({}, state, {\n      [modID]: {\n        ...state[modID],\n        containerControls: (state[modID] as ContainerModule).containerControls.map(containerControl => {\n          if (\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n          ) {\n            return containerControl\n          } else {\n            return {\n              ...containerControl,\n              markedToContainer: false,\n            }\n          }\n        })\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  } else {\n    return Object.assign({}, state, {\n      [actualModID]: {\n        ...state[actualModID],\n        controlData: {\n          ...state[actualModID].controlData,\n          [controlID]: {\n            ...state[actualModID].controlData[controlID],\n            markedToContainer: false,\n          }\n        }\n      },\n      [parentID]: {\n        ...state[parentID],\n        containerControls: (state[parentID] as ContainerModule).containerControls.filter(containerControl => {\n          return containerControl.modID !== modID ||\n            containerControl.controlID !== controlID ||\n            containerControl.actualModID !== actualModID\n        }),\n      }\n    })\n  }\n}\n\nexport default unmarkContainerControl","import { Modules, ContainerModule } from \"../../stateTSTypes\"\nimport { RenameContainerControlAction } from \"../moduleTSTypes\"\n\nconst renameContainerControl = (modules: Modules, { name, parentModID, modID, controlID, actualModID }: RenameContainerControlAction) => {\n  const containerMod = modules[parentModID] as ContainerModule\n  return Object.assign({}, modules, {\n    [parentModID]: {\n      ...containerMod,\n      containerControls: containerMod.containerControls.map(containerControl => {\n        const notRightControl = (\n          containerControl.controlID !== controlID ||\n          containerControl.actualModID !== actualModID\n        )\n        if (notRightControl) {\n          return containerControl\n        } else {\n          return {\n            ...containerControl,\n            name: name\n          }\n        }\n      })\n    }\n  })\n}\n\nexport default renameContainerControl","import { Modules } from \"../../stateTSTypes\";\nimport { UpdateControlValueAction } from \"../moduleTSTypes\";\n\nconst updateControlValue = (state: Modules, { modID, controlID, newValue }: UpdateControlValueAction) => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          value: newValue\n        }\n      }\n    }\n  })\n}\n\nexport default updateControlValue","import { Modules } from \"../../stateTSTypes\"\nimport { UpdateControlRangeAction } from \"../moduleTSTypes\"\nimport { clamp } from \"../../../helpers/genFuncs\"\n\nconst updateControlRange = (state: Modules, { modID, controlID, newRange }: UpdateControlRangeAction): Modules => {\n  return Object.assign({}, state, {\n    [modID]: {\n      ...state[modID],\n      controlData: {\n        ...state[modID].controlData,\n        [controlID]: {\n          ...state[modID].controlData[controlID],\n          range: newRange,\n          value: clamp(state[modID].controlData[controlID].value as number, newRange),\n        }        \n      }\n    }\n  })\n}\n\nexport default updateControlRange","import { ContainerModule, Modules } from \"../stateTSTypes\"\nimport { \n  ADD_MODULE,\n  MOVE_MODULE, \n  RENAME_MODULE, \n  MARK_CONTAINER_INPUT,\n  UNMARK_CONTAINER_INPUT,\n  MARK_CONTAINER_OUTPUT,\n  UNMARK_CONTAINER_OUTPUT,\n  MARK_CONTAINER_CONTROL,\n  UNMARK_CONTAINER_CONTROL,\n  UPDATE_CONTROL_VALUE,\n  UPDATE_CONTROL_RANGE,\n  RENAME_CONTAINER_CONTROL,\n} from './moduleActionTypes'\nimport { \n  ModuleAction, \n  AddModuleAction, \n  MoveModuleAction, \n  RenameModuleAction, \n  MarkContainerIOAction,\n  MarkContainerControlAction,\n  UpdateControlValueAction,\n  UpdateControlRangeAction,\n  RenameContainerControlAction,\n} from './moduleTSTypes'\nimport { \n  addModuleReducer, \n  moveModuleReducer, \n  renameModuleReducer, \n  markContainerInputReducer,\n  unmarkContainerInputReducer,\n  markContainerOutputReducer,\n  unmarkContainerOutputReducer,\n  markContainerControlReducer,\n  unmarkContainerControlReducer,\n  updateControlValueReducer,\n  updateControlRangeReducer,\n  renameContainerControlReducer,\n} from \"./reducers/allModuleReducers\"\nimport { CONTAINER, BUTTON } from \"../../audioModules/moduleTypes\"\n\nconst initBaseCM: ContainerModule = {\n  id: 'project',\n  name: 'project',\n  row: 0,\n  col: 0,\n  moduleType: CONTAINER,\n  controlData: {\n    'open': {\n      controlType: BUTTON,\n      paramID: 'n/a',\n    }\n  },\n  connectionInputs: [],\n  connectionOutputs: [],\n  inputs: [],\n  outputs: [],\n  parentID: null,\n  childModules: [],\n  isBaseContainer: true,\n  isContainerInput: false,\n  isContainerOutput: false,\n  containerControls: [],\n}\n\nconst initState: Modules = {\n  'project': initBaseCM\n}\n\nconst moduleReducer = (state = initState, action?: ModuleAction) => {\n  if (action) {\n    switch (action.type) {\n      case ADD_MODULE: return addModuleReducer(state, action as AddModuleAction)\n      case MOVE_MODULE: return moveModuleReducer(state, action as MoveModuleAction)\n      case RENAME_MODULE: return renameModuleReducer(state, action as RenameModuleAction)\n      case MARK_CONTAINER_INPUT: return markContainerInputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_INPUT: return unmarkContainerInputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_OUTPUT: return markContainerOutputReducer(state, action as MarkContainerIOAction)\n      case UNMARK_CONTAINER_OUTPUT: return unmarkContainerOutputReducer(state, action as MarkContainerIOAction)\n      case MARK_CONTAINER_CONTROL: return markContainerControlReducer(state, action as MarkContainerControlAction)\n      case UNMARK_CONTAINER_CONTROL: return unmarkContainerControlReducer(state, action as MarkContainerControlAction)\n      case UPDATE_CONTROL_VALUE: return updateControlValueReducer(state, action as UpdateControlValueAction)\n      case UPDATE_CONTROL_RANGE: return updateControlRangeReducer(state, action as UpdateControlRangeAction)\n      case RENAME_CONTAINER_CONTROL: return renameContainerControlReducer(state, action as RenameContainerControlAction)\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default moduleReducer","import { BCIDAction } from \"./bcidTSTypes\"\nimport { DOWN_1_BASE, CHANGE_BASE } from \"./bcidActionTypes\"\n\nconst bcidReducer = (state = 'project', action?: BCIDAction) => {\n  if (action) {\n    switch (action.type) {\n      case DOWN_1_BASE: return action.newID\n      case CHANGE_BASE: return action.newID\n      default: return state\n    }\n  } else {\n    return state\n  }\n}\n\nexport default bcidReducer","export const DOWN_1_BASE = 'DOWN_1_BASE'\nexport const CHANGE_BASE = 'CHANGE_BASE'","import { Modules, Connections } from \"../../stateTSTypes\"\nimport { AddConnectionAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\nimport genRandomID from \"../../idGen\"\n\nconst addConnection = (modules: Modules, connections: Connections, { fromID, toID, param, outputIndex, inputIndex, containerOutputChildID, containerInputChildID }: AddConnectionAction): ConnectionReducerReturn => {\n  const connectionID = genRandomID(0, Object.keys(connections).length)\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: [\n          ...modules[fromID].outputs,\n          connectionID\n        ]\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: [\n          ...modules[toID].inputs,\n          connectionID\n        ]\n      }\n    }),\n    newConnections: {\n      ...connections,\n      [connectionID]: {\n        connectionID,\n        fromID,\n        toID,\n        param,\n        outputIndex,\n        inputIndex,\n        actualOutputID: containerOutputChildID,\n        actualInputID: containerInputChildID,\n      },\n    },\n  }\n}\n\nexport default addConnection","import { RemoveConnectionAction } from \"../connectionTSTypes\"\nimport { Modules, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\n\nconst removeConnection = (modules: Modules, connections: Connections, { connectionID }: RemoveConnectionAction) => {\n  const { fromID, toID, actualOutputID: containerOutputChildID, actualInputID: containerInputChildID } = connections[connectionID]\n  return {\n    newModules: Object.assign({}, modules, {\n      [fromID]: {\n        ...modules[fromID],\n        outputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      },\n      [toID]: {\n        ...modules[toID],\n        inputs: modules[toID].inputs.filter(id => id !== connectionID)\n      }\n    }, !containerOutputChildID ? {} : {\n      [containerOutputChildID]: {\n        ...modules[containerOutputChildID],\n        outputs: modules[containerOutputChildID].outputs.filter(id => id !== connectionID)\n      }\n    }, !containerInputChildID ? {} : {\n      [containerInputChildID]: {\n        ...modules[containerInputChildID],\n        inputs: modules[fromID].outputs.filter(id => id !== connectionID)\n      }\n    }),\n    newConnections: filterOutFromObj(connections, [ connectionID ])\n  }\n}\n\nexport default removeConnection","import { Modules, ContainerModule, Connections } from \"../../stateTSTypes\"\nimport { filterOutFromObj } from \"../../helpers\"\nimport { stringIn } from \"../../../helpers/genFuncs\"\nimport { RemoveModuleAction } from \"../connectionTSTypes\"\nimport { CONTAINER } from \"../../../audioModules/moduleTypes\"\nimport { getContainerIDs, getInternalConnectionIDs } from \"../../getContainerAsProject\"\n\nconst removeModule = (modules: Modules, connections: Connections, { id }: RemoveModuleAction) => {\n  const parentID = modules[id].parentID as string\n  const toTrimModIDs = modules[id].moduleType === CONTAINER ? getContainerIDs(id, modules) : [ id ]\n  const toTrimConnectionIDs = modules[id].moduleType === CONTAINER ? \n    [...modules[id].inputs, ...modules[id].outputs, ...getInternalConnectionIDs(connections, toTrimModIDs)] \n    : [...modules[id].inputs, ...modules[id].outputs]\n  const trimmedModules = filterOutFromObj(modules, toTrimModIDs) as Modules\n  return {\n    newModules: Object.assign({}, Object.fromEntries(Object.entries(trimmedModules).map(entry => {\n      return [entry[0], {\n        ...entry[1],\n        inputs: entry[1].inputs.filter(inputData => !stringIn(inputData, [...modules[id].inputs, ...modules[id].outputs])),\n        outputs: entry[1].outputs.filter(outputData => !stringIn(outputData, [...modules[id].inputs, ...modules[id].outputs]))\n      }]\n    })), {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: (modules[parentID] as ContainerModule).childModules.filter(childID => childID !== id),\n        connectionInputs: (modules[parentID]).connectionInputs.filter(inputID => inputID !== id),\n        connectionOutputs: (modules[parentID]).connectionOutputs.filter(outputID => outputID !== id),\n        containerControls: (modules[parentID] as ContainerModule).containerControls.filter(({ modID }) => modID !== id),\n      }\n    }, ),\n    newConnections: filterOutFromObj(connections, toTrimConnectionIDs),\n  }\n}\n\nexport default removeModule","import { Modules, Connections, ContainerModule } from \"../../stateTSTypes\"\nimport { MergeContainerAction, ConnectionReducerReturn } from \"../connectionTSTypes\"\n\nconst mergeContainer = (modules: Modules, connections: Connections, { containerID, newModules, newConnections, row, col, parentID }: MergeContainerAction): ConnectionReducerReturn => {\n  return {\n    newModules: Object.assign({}, modules, newModules, {\n      [parentID]: {\n        ...modules[parentID],\n        childModules: [ ...(modules[parentID] as ContainerModule).childModules, containerID ]\n      },\n      [containerID]: {\n        ...newModules[containerID],\n        parentID,\n        row,\n        col,\n        isBaseContainer: false,\n      }\n    }),\n    newConnections: Object.assign({}, connections, newConnections)\n  }\n}\n\nexport default mergeContainer","import { Modules, Connections } from \"../stateTSTypes\"\nimport { ConnectionAction, ConnectionReducerReturn, RemoveConnectionAction, AddConnectionAction, RemoveModuleAction, MergeContainerAction } from \"./connectionTSTypes\"\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from \"./connectionActionTypes\"\nimport addConnection from \"./reducers/addConnection\"\nimport removeConnection from \"./reducers/removeConnection\"\nimport removeModule from './reducers/removeModule'\nimport mergeContainer from './reducers/mergeContainer'\n\nconst connectionReducer = (modules: Modules, connections: Connections, action: ConnectionAction): ConnectionReducerReturn => {\n  switch (action.type) {\n    case ADD_CONNECTION: return addConnection(modules, connections, action as AddConnectionAction)\n    case REMOVE_CONNECTION: return removeConnection(modules, connections, action as RemoveConnectionAction)\n    case REMOVE_MODULE: return removeModule(modules, connections, action as RemoveModuleAction)\n    case MERGE_CONTAINER: return mergeContainer(modules, connections, action as MergeContainerAction)\n    default: return { newModules: modules, newConnections: connections }\n  }\n}\n\nexport default connectionReducer","import moduleReducer from './modules/moduleReducer'\nimport bcidReducer from './baseContainerID/bcidReducer'\nimport connectionReducer from './connections/connectionReducer'\nimport { RootState } from './stateTSTypes'\nimport { ModuleAction } from './modules/moduleTSTypes'\nimport { BCIDAction } from './baseContainerID/bcidTSTypes'\nimport { ConnectionAction } from './connections/connectionTSTypes'\nimport { ADD_CONNECTION, REMOVE_CONNECTION, REMOVE_MODULE, MERGE_CONTAINER } from './connections/connectionActionTypes'\nimport { RESTORE_FROM_STATE } from './root/rootActionTypes'\nimport { RootAction } from './root/rootActionTSTypes'\n\nconst initState = {\n  modules: moduleReducer(),\n  connections: {},\n  baseContainerID: bcidReducer(),\n}\n\nfunction combinedModuleConnectionReducer(state: RootState, action: ModuleAction | ConnectionAction) {\n  if (action.type === ADD_CONNECTION || action.type === REMOVE_CONNECTION || action.type === REMOVE_MODULE || action.type === MERGE_CONTAINER) {\n    return connectionReducer(state.modules, state.connections, action as ConnectionAction)\n  } else {\n    return {\n      newModules: moduleReducer(state.modules, action as ModuleAction),\n      newConnections: state.connections,\n    }\n  }\n}\n\nconst rootReducer = (state = initState, action: ModuleAction | BCIDAction | ConnectionAction | RootAction): RootState => {\n  if (action.type === RESTORE_FROM_STATE) {\n    const newState = (action as RootAction).state\n    return Object.assign(newState, newState.connections ? {} : {\n      connections: {}\n    })\n  } else {\n    const { newModules, newConnections } = combinedModuleConnectionReducer(state, action as ModuleAction | ConnectionAction)\n    return {\n      modules: newModules,\n      connections: newConnections,\n      baseContainerID: bcidReducer(state.baseContainerID, action as BCIDAction),\n    }\n  }\n}\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}