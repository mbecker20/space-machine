{
	"component": {
		"scope": "typescriptreact,javascriptreact",
		"prefix": "comp",
		"body": [
			"import React from 'react'",
			"",
			"function ${0:$TM_FILENAME_BASE}() {",
			"\treturn (",
			"\t\t<div>",
			"",
			"\t\t</div>",
			"\t)",
			"}",
			"",
			"export default ${0:$TM_FILENAME_BASE}"
		]
	},

	"component with Props": {
		"scope": "typescriptreact",
		"prefix": "comp-props",
		"body": [
			"import React from 'react'",
			"",
			"interface Props {",
			"\t$0",
			"}",
			"",
			"function ${1:$TM_FILENAME_BASE}({  }: Props) {",
			"\treturn (",
			"\t\t<div>",
			"",
			"\t\t</div>",
			"\t)",
			"}",
			"",
			"export default ${1:$TM_FILENAME_BASE}"
		]
	},

	"component with jss": {
		"scope": "typescriptreact",
		"prefix": "comp-jss",
		"body": [
			"import React from 'react'",
			"import useJSS from './style'",
			"",
			"function ${0:$TM_FILENAME_BASE}() {",
			"\tconst classes = useJSS()",
			"\treturn (",
			"\t\t<div>",
			"",
			"\t\t</div>",
			"\t)",
			"}",
			"",
			"export default ${0:$TM_FILENAME_BASE}"
		]
	},

	"component with Props, jss": {
		"scope": "typescriptreact",
		"prefix": "comp-props-jss",
		"body": [
			"import React from 'react'",
			"import useJSS from './style'",
			"",
			"interface Props {",
			"\t$0",
			"}",
			"",
			"function ${1:$TM_FILENAME_BASE}({  }: Props) {",
			"\tconst classes = useJSS()",
			"\treturn (",
			"\t\t<div>",
			"",
			"\t\t</div>",
			"\t)",
			"}",
			"",
			"export default ${1:$TM_FILENAME_BASE}"
		]
	},

	"useJSS": {
		"scope": "typescript,javascript",
		"prefix": "useJSS",
		"body": [
			"import { createUseStyles } from 'react-jss'",
			"",
			"const useJSS = createUseStyles({",
			"\t${1:Class}: {",
			"\t\t$0",
			"\t},",
			"})",
			"",
			"export default useJSS"
		]
	},

	"context-menu": {
		"scope": "typescriptreact",
		"prefix": "context-menu",
		"body": [
			"import React, { Fragment, useState } from 'react'",
			"import ContextMenu from '../../ContextMenu/ContextMenu'",
			"import { MouseDivEvent } from '../../types'",
			"",
			"declare global {",
			"\tinterface Window {",
			"\t\topen${1:$TM_FILENAME_BASE}: (event: MouseDivEvent) => void",
			"\t}",
			"}",
			"",
			"function makeData(isOpen: boolean, event?: MouseDivEvent) {",
			"\treturn {",
			"\t\tisOpen,",
			"\t\tevent,",
			"\t}",
			"}",
			"",
			"function ${1:$TM_FILENAME_BASE}() {",
			"\tconst [{ isOpen, event }, setData] = useState(makeData(false))",
			"\treturn (",
			"\t\t<Fragment>",
			"\t\t\t{!isOpen ? null :",
			"\t\t\t\t<ContextMenu event={event as MouseDivEvent}",
			"\t\t\t\t\tonClose={() => setData(makeData(false))}",
			"\t\t\t\t>",
			"\t\t\t\t\t$0",
			"\t\t\t\t</ContextMenu>",
			"\t\t\t}",
			"\t\t</Fragment>",
			"\t)",
			"}",
			"",
			"export default ${1:$TM_FILENAME_BASE}"
		]
	},

	"Extend Window": {
		"scope": "typescript,typescriptreact",
		"prefix": "extend-window,declare-window",
		"body": [
			"declare global {",
			"\tinterface Window {",
			"\t\t$0",
			"\t}",
			"}"
		]
	},

	"Button": {
		"scope": "typescriptreact",
		"prefix": "<Button",
		"body": [
			"<Button",
			"\tonClick={() => {",
			"\t\t$1",
			"\t}}",
			">",
			"\t$0",
			"</Button>"
		]
	}
}